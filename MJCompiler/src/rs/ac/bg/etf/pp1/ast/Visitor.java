// generated with ast extension for cup
// version 0.8
// 26/7/2024 13:5:46


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(DesignatorContinueList DesignatorContinueList);
    public void visit(Mulop Mulop);
    public void visit(ActParsContinue ActParsContinue);
    public void visit(ConstListPart ConstListPart);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(Var Var);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(ConstList ConstList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(MethodName MethodName);
    public void visit(Condition Condition);
    public void visit(MethodPars MethodPars);
    public void visit(AddopTerms AddopTerms);
    public void visit(FormParsContinue FormParsContinue);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(MulopFactors MulopFactors);
    public void visit(DesignatorContinue DesignatorContinue);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(UnmachedList UnmachedList);
    public void visit(ConstDecl ConstDecl);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ArrMatrix ArrMatrix);
    public void visit(FormPars FormPars);
    public void visit(Percent Percent);
    public void visit(Slash Slash);
    public void visit(Star Star);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(LessEqual LessEqual);
    public void visit(Less Less);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(Greater Greater);
    public void visit(NotEqualTo NotEqualTo);
    public void visit(EqualTo EqualTo);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(MatrixDecl MatrixDecl);
    public void visit(DesignatorName DesignatorName);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(ActParsEnd ActParsEnd);
    public void visit(ActParsList ActParsList);
    public void visit(NoActPars NoActPars);
    public void visit(ActualParsList ActualParsList);
    public void visit(MatrixFirstSquare MatrixFirstSquare);
    public void visit(FactorNewMatrix FactorNewMatrix);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(FactorDesignatorActPars FactorDesignatorActPars);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(FactorRange FactorRange);
    public void visit(MulopEnd MulopEnd);
    public void visit(MulopList MulopList);
    public void visit(AddopEndMinus AddopEndMinus);
    public void visit(AddopEnd AddopEnd);
    public void visit(AddopList AddopList);
    public void visit(Term Term);
    public void visit(ExprPositive ExprPositive);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(OneCondFact OneCondFact);
    public void visit(CondTerms CondTerms);
    public void visit(OrCond OrCond);
    public void visit(ConditionError ConditionError);
    public void visit(OneCondTerm OneCondTerm);
    public void visit(Conditions Conditions);
    public void visit(UnmachedEnd UnmachedEnd);
    public void visit(UnmachedPartDesignator UnmachedPartDesignator);
    public void visit(UnmachedPartComma UnmachedPartComma);
    public void visit(UnmatchedOne UnmatchedOne);
    public void visit(UnmatchedMoreThanOne UnmatchedMoreThanOne);
    public void visit(DesignatorStatementForCondition DesignatorStatementForCondition);
    public void visit(DesignatorStatementFor DesignatorStatementFor);
    public void visit(DesignatorStatementDecrement DesignatorStatementDecrement);
    public void visit(DesignatorStatementIncrement DesignatorStatementIncrement);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementAssignop DesignatorStatementAssignop);
    public void visit(DesignatorStatementUnmatched DesignatorStatementUnmatched);
    public void visit(DesignatorStatementMatched DesignatorStatementMatched);
    public void visit(DesignatorStatementListSecond DesignatorStatementListSecond);
    public void visit(DesignatorStatementEnd DesignatorStatementEnd);
    public void visit(DesignatorStatementOne DesignatorStatementOne);
    public void visit(DesignatorStatements DesignatorStatements);
    public void visit(CondFactFor CondFactFor);
    public void visit(RParenFor RParenFor);
    public void visit(RSemiFor RSemiFor);
    public void visit(LSemiFor LSemiFor);
    public void visit(ElseSt ElseSt);
    public void visit(ForSt ForSt);
    public void visit(LParenIf LParenIf);
    public void visit(RParenIf RParenIf);
    public void visit(PrintNum PrintNum);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementError StatementError);
    public void visit(StatementStatementList StatementStatementList);
    public void visit(StatementFor StatementFor);
    public void visit(StatementForCondFact StatementForCondFact);
    public void visit(StatementPrintParameter StatementPrintParameter);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NoStatement NoStatement);
    public void visit(Statements Statements);
    public void visit(Type Type);
    public void visit(FormParsVar FormParsVar);
    public void visit(FormParsArr FormParsArr);
    public void visit(FormParsEnd FormParsEnd);
    public void visit(FormParsList FormParsList);
    public void visit(NoMethodParameters NoMethodParameters);
    public void visit(MethodParametersError MethodParametersError);
    public void visit(MethodParameters MethodParameters);
    public void visit(MethodNameVoid MethodNameVoid);
    public void visit(MethodNameAnyType MethodNameAnyType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclaration NoMethodDeclaration);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(VarName VarName);
    public void visit(Arr Arr);
    public void visit(VarMatrix VarMatrix);
    public void visit(VarArr VarArr);
    public void visit(VarIdent VarIdent);
    public void visit(VarDeclarationsEnd VarDeclarationsEnd);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(VarDeclarationError VarDeclarationError);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNum ConstNum);
    public void visit(ConstDeclarationsEnd ConstDeclarationsEnd);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ConstDeclarationError ConstDeclarationError);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(Declarations Declarations);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
