INFO  12:41:29,846 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:41:29,964 - #2 program
INFO  12:41:29,964 - #49 test301
INFO  12:41:29,964 - #6 const
INFO  12:41:29,965 - #49 int
INFO  12:41:29,966 - #49 nula
INFO  12:41:29,966 - #7 =
INFO  12:41:29,967 - #48 0
INFO  12:41:29,967 - #8 ;
INFO  12:41:29,967 - #6 const
INFO  12:41:29,967 - #49 int
INFO  12:41:29,967 - #49 jedan
INFO  12:41:29,968 - #7 =
INFO  12:41:29,968 - #48 1
INFO  12:41:29,968 - #8 ;
INFO  12:41:29,968 - #6 const
INFO  12:41:29,968 - #49 int
INFO  12:41:29,968 - #49 pet
INFO  12:41:29,968 - #7 =
INFO  12:41:29,968 - #48 5
INFO  12:41:29,968 - #8 ;
INFO  12:41:29,968 - #49 int
INFO  12:41:29,969 - #49 niz
INFO  12:41:29,969 - #10 [
INFO  12:41:29,970 - #11 ]
INFO  12:41:29,970 - #8 ;
INFO  12:41:29,970 - #49 char
INFO  12:41:29,970 - #49 nizch
INFO  12:41:29,970 - #10 [
INFO  12:41:29,971 - #11 ]
INFO  12:41:29,971 - #8 ;
INFO  12:41:29,971 - #4 {
INFO  12:41:29,971 - #49 int
INFO  12:41:29,971 - #49 verify
INFO  12:41:29,971 - #20 (
INFO  12:41:29,972 - #49 int
INFO  12:41:29,972 - #49 x
INFO  12:41:29,972 - #21 )
INFO  12:41:29,972 - #4 {
INFO  12:41:29,972 - #18 return
INFO  12:41:29,972 - #28 -
INFO  12:41:29,973 - #48 1
INFO  12:41:29,973 - #8 ;
INFO  12:41:29,975 - #5 }
INFO  12:41:29,976 - #41 void
INFO  12:41:29,977 - #49 main
INFO  12:41:29,977 - #20 (
INFO  12:41:29,977 - #21 )
INFO  12:41:29,978 - #49 int
INFO  12:41:29,978 - #49 bodovi
INFO  12:41:29,978 - #8 ;
INFO  12:41:29,978 - #4 {
INFO  12:41:29,978 - #49 bodovi
INFO  12:41:29,978 - #7 =
INFO  12:41:29,978 - #49 verify
INFO  12:41:29,979 - #20 (
INFO  12:41:29,979 - #21 )
INFO  12:41:29,980 - #8 ;
INFO  12:41:29,980 - #49 bodovi
INFO  12:41:29,980 - #7 =
INFO  12:41:29,981 - #49 verify
INFO  12:41:29,981 - #20 (
INFO  12:41:29,981 - #48 0
INFO  12:41:29,981 - #21 )
INFO  12:41:29,981 - #8 ;
INFO  12:41:29,981 - #49 bodovi
INFO  12:41:29,981 - #7 =
INFO  12:41:29,981 - #49 verify
INFO  12:41:29,981 - #20 (
INFO  12:41:29,981 - #48 0
INFO  12:41:29,982 - #9 ,
INFO  12:41:29,982 - #48 0
INFO  12:41:29,983 - #21 )
INFO  12:41:29,983 - #8 ;
INFO  12:41:29,983 - #5 }
INFO  12:41:29,983 - #5 }
INFO  12:41:29,995 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstNum(
                   nula
                   0
                  ) [ConstNum]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstNum(
                 jedan
                 1
                ) [ConstNum]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               pet
               5
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarationsEnd(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
          ) [VarDeclarationsEnd]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
            VarName(
             nizch
            ) [VarName]
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      NoMethodDeclaration(
      ) [NoMethodDeclaration]
      MethodDecl(
        MethodNameAnyType(
          Type(
           int
          ) [Type]
         verify
        ) [MethodNameAnyType]
        MethodParameters(
          FormParsEnd(
            FormParsVar(
              Type(
               int
              ) [Type]
             x
            ) [FormParsVar]
          ) [FormParsEnd]
        ) [MethodParameters]
        NoDeclarations(
        ) [NoDeclarations]
        Statements(
          StatementReturnExpr(
            ExprNegativ(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     1
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprNegativ]
          ) [StatementReturnExpr]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 bodovi
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorDesignatorActPars(
                        DesignatorIdent(
                         verify
                        ) [DesignatorIdent]
                        NoActPars(
                        ) [NoActPars]
                      ) [FactorDesignatorActPars]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignatorActPars(
                          DesignatorIdent(
                           verify
                          ) [DesignatorIdent]
                          ActualParsList(
                            ActParsEnd(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorNum(
                                       0
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [ActParsEnd]
                          ) [ActualParsList]
                        ) [FactorDesignatorActPars]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignatorActPars(
                            DesignatorIdent(
                             verify
                            ) [DesignatorIdent]
                            ActualParsList(
                              ActParsList(
                                ActParsEnd(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorNum(
                                           0
                                          ) [FactorNum]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [ActParsEnd]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         0
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [ActParsList]
                            ) [ActualParsList]
                          ) [FactorDesignatorActPars]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:41:29,995 - ===================================
INFO  12:41:29,996 - Pocetak programa test301.
INFO  12:41:29,996 - Deklarisana je konstanta nula na liniji 5
INFO  12:41:29,996 - Deklarisana je konstanta jedan na liniji 6
INFO  12:41:29,996 - Deklarisana je konstanta pet na liniji 7
INFO  12:41:29,996 - Deklarisana je promenljiva niz na liniji 9
INFO  12:41:29,997 - Deklarisana je promenljiva nizch na liniji 10
INFO  12:41:29,997 - Obradjuje se funkcija verify na liniji 13
INFO  12:41:29,997 - Deklarisan je parametar funkcije x na liniji 13
INFO  12:41:29,997 - Dobra povratna vrednost funkcije na liniji 14
INFO  12:41:29,997 - Obradjuje se funkcija main na liniji 16
INFO  12:41:29,997 - Deklarisana je promenljiva bodovi na liniji 17
ERROR 12:41:29,998 - Greska, neodgovarajuci broj parametara pozvane funkcije na liniji 20
ERROR 12:41:29,998 - Greska na liniji 20 designator i expr nisu istog tipa
INFO  12:41:29,999 - Pronadjen poziv funkcije verify na liniji 21
INFO  12:41:29,999 - Designator i expr su odgovarajuceg tipa na liniji 21
ERROR 12:41:29,999 - Greska, neodgovarajuci broj parametara pozvane funkcije na liniji 22
ERROR 12:41:29,999 - Greska na liniji 22 designator i expr nisu istog tipa
INFO  12:41:29,999 - Globalne konstante = 3
INFO  12:41:29,999 - nVars = 2
INFO  12:41:29,999 - ===================================
ERROR 12:41:29,999 - Parsiranje NIJE uspesno zavrseno!
