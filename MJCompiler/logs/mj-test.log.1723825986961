INFO  18:32:31,781 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  18:32:31,844 - #2 program
INFO  18:32:31,844 - #49 test301
INFO  18:32:31,844 - #6 const
INFO  18:32:31,845 - #49 int
INFO  18:32:31,845 - #49 a
INFO  18:32:31,846 - #7 =
INFO  18:32:31,846 - #48 5
INFO  18:32:31,846 - #8 ;
INFO  18:32:31,846 - #49 int
INFO  18:32:31,846 - #49 b
INFO  18:32:31,847 - #9 ,
INFO  18:32:31,847 - #49 c
INFO  18:32:31,847 - #8 ;
INFO  18:32:31,848 - #6 const
INFO  18:32:31,848 - #49 bool
INFO  18:32:31,848 - #49 t
INFO  18:32:31,848 - #7 =
INFO  18:32:31,848 - #51 true
INFO  18:32:31,848 - #9 ,
INFO  18:32:31,848 - #49 f
INFO  18:32:31,849 - #7 =
INFO  18:32:31,849 - #51 false
INFO  18:32:31,849 - #8 ;
INFO  18:32:31,849 - #49 int
INFO  18:32:31,849 - #49 niz1
INFO  18:32:31,849 - #10 [
INFO  18:32:31,849 - #11 ]
INFO  18:32:31,849 - #8 ;
INFO  18:32:31,850 - #49 int
INFO  18:32:31,850 - #49 d
INFO  18:32:31,850 - #9 ,
INFO  18:32:31,851 - #49 e
INFO  18:32:31,851 - #8 ;
INFO  18:32:31,851 - #4 {
INFO  18:32:31,851 - #49 char
INFO  18:32:31,852 - #49 dohvatPrviKarakter
INFO  18:32:31,852 - #20 (
INFO  18:32:31,852 - #49 char
INFO  18:32:31,852 - #49 niz
INFO  18:32:31,852 - #10 [
INFO  18:32:31,852 - #11 ]
INFO  18:32:31,852 - #21 )
INFO  18:32:31,852 - #4 {
INFO  18:32:31,853 - #49 s
INFO  18:32:31,853 - #7 =
INFO  18:32:31,853 - #49 null
INFO  18:32:31,854 - #8 ;
INFO  18:32:31,855 - #23 for
INFO  18:32:31,855 - #20 (
INFO  18:32:31,856 - #49 i
INFO  18:32:31,856 - #7 =
INFO  18:32:31,856 - #49 niz
INFO  18:32:31,856 - #30 .
ERROR 18:32:31,856 - 
Sintaksna greska na liniji 13
INFO  18:32:31,856 - #49 len
INFO  18:32:31,857 - #20 (
INFO  18:32:31,857 - #21 )
INFO  18:32:31,857 - #9 ,
INFO  18:32:31,858 - #49 j
INFO  18:32:31,858 - #7 =
INFO  18:32:31,858 - #48 0
INFO  18:32:31,858 - #8 ;
INFO  18:32:31,858 - #49 i
INFO  18:32:31,858 - #33 >
INFO  18:32:31,858 - #48 0
INFO  18:32:31,859 - #8 ;
INFO  18:32:31,859 - #49 i
INFO  18:32:31,859 - #25 --
INFO  18:32:31,859 - #9 ,
ERROR 18:32:31,859 - Uspesan oporavak od greske na liniji 13 pri konstrukciji iskaza dodele
ERROR 18:32:31,860 - 
Sintaksna greska na liniji 13
INFO  18:32:31,860 - #49 j
INFO  18:32:31,860 - #24 ++
INFO  18:32:31,860 - #21 )
INFO  18:32:31,861 - #4 {
INFO  18:32:31,861 - #14 if
INFO  18:32:31,861 - #20 (
INFO  18:32:31,861 - #49 i
INFO  18:32:31,861 - #31 ==
INFO  18:32:31,861 - #48 1
INFO  18:32:31,861 - #26 &&
INFO  18:32:31,861 - #49 j
INFO  18:32:31,861 - #34 >=
INFO  18:32:31,861 - #48 0
INFO  18:32:31,861 - #27 ||
INFO  18:32:31,861 - #49 j
INFO  18:32:31,861 - #31 ==
INFO  18:32:31,862 - #48 0
INFO  18:32:31,862 - #21 )
INFO  18:32:31,862 - #4 {
INFO  18:32:31,862 - #49 s
INFO  18:32:31,862 - #7 =
INFO  18:32:31,863 - #49 niz
INFO  18:32:31,863 - #10 [
INFO  18:32:31,863 - #49 i
INFO  18:32:31,863 - #11 ]
INFO  18:32:31,863 - #8 ;
INFO  18:32:31,863 - #16 break
INFO  18:32:31,863 - #8 ;
INFO  18:32:31,863 - #5 }
ERROR 18:32:31,863 - Uspesan oporavak od greske na liniji 13 pri konstrukciji iskaza dodele
INFO  18:32:31,865 - #5 }
INFO  18:32:31,867 - #18 return
ERROR 18:32:31,867 - 
Sintaksna greska na liniji 20
INFO  18:32:31,867 - #49 s
INFO  18:32:31,867 - #8 ;
INFO  18:32:31,867 - #5 }
INFO  18:32:31,867 - #49 bool
INFO  18:32:31,867 - #49 provera
INFO  18:32:31,867 - #20 (
INFO  18:32:31,867 - #21 )
INFO  18:32:31,867 - #49 int
INFO  18:32:31,867 - #49 pom1
INFO  18:32:31,867 - #8 ;
INFO  18:32:31,867 - #4 {
INFO  18:32:31,867 - #49 pom1
INFO  18:32:31,868 - #7 =
ERROR 18:32:31,868 - Uspesan oporavak od greske na liniji 9 pri definisanju promenjive do ;
ERROR 18:32:31,868 - 
Sintaksna greska na liniji 26
INFO  18:32:31,869 - #28 -
INFO  18:32:31,869 - #20 (
INFO  18:32:31,869 - #48 5
INFO  18:32:31,869 - #38 *
INFO  18:32:31,869 - #48 2
INFO  18:32:31,869 - #21 )
INFO  18:32:31,869 - #37 +
INFO  18:32:31,869 - #48 11
INFO  18:32:31,869 - #8 ;
INFO  18:32:31,869 - #14 if
INFO  18:32:31,869 - #20 (
INFO  18:32:31,870 - #49 pom1
INFO  18:32:31,870 - #33 >
INFO  18:32:31,870 - #48 0
INFO  18:32:31,870 - #21 )
INFO  18:32:31,870 - #18 return
INFO  18:32:31,870 - #51 true
INFO  18:32:31,870 - #8 ;
INFO  18:32:31,870 - #15 else
INFO  18:32:31,870 - #18 return
INFO  18:32:31,870 - #51 false
INFO  18:32:31,870 - #8 ;
INFO  18:32:31,870 - #5 }
INFO  18:32:31,871 - #41 void
INFO  18:32:31,871 - #49 main
INFO  18:32:31,871 - #20 (
INFO  18:32:31,871 - #21 )
INFO  18:32:31,871 - #49 int
INFO  18:32:31,871 - #49 p1
INFO  18:32:31,871 - #9 ,
INFO  18:32:31,871 - #49 i
INFO  18:32:31,871 - #8 ;
INFO  18:32:31,871 - #6 const
INFO  18:32:31,871 - #49 int
INFO  18:32:31,871 - #49 p2
ERROR 18:32:31,871 - Uspesan oporavak od greske na liniji 25 pri definisanju promenjive do ;
INFO  18:32:31,871 - #7 =
INFO  18:32:31,872 - #48 5
INFO  18:32:31,872 - #8 ;
INFO  18:32:31,872 - #4 {
INFO  18:32:31,872 - #49 i
INFO  18:32:31,872 - #7 =
ERROR 18:32:31,872 - 
Sintaksna greska na liniji 36
INFO  18:32:31,872 - #48 0
INFO  18:32:31,872 - #8 ;
INFO  18:32:31,872 - #14 if
INFO  18:32:31,872 - #20 (
INFO  18:32:31,872 - #49 i
INFO  18:32:31,872 - #31 ==
INFO  18:32:31,872 - #48 3
INFO  18:32:31,873 - #21 )
INFO  18:32:31,873 - #22 print
INFO  18:32:31,873 - #20 (
INFO  18:32:31,873 - #49 i
INFO  18:32:31,873 - #21 )
INFO  18:32:31,873 - #8 ;
INFO  18:32:31,873 - #15 else
INFO  18:32:31,873 - #14 if
INFO  18:32:31,873 - #20 (
INFO  18:32:31,873 - #49 i
INFO  18:32:31,873 - #31 ==
INFO  18:32:31,873 - #48 2
INFO  18:32:31,873 - #21 )
INFO  18:32:31,873 - #49 i
INFO  18:32:31,874 - #24 ++
INFO  18:32:31,874 - #8 ;
INFO  18:32:31,874 - #15 else
INFO  18:32:31,874 - #49 i
INFO  18:32:31,874 - #7 =
INFO  18:32:31,874 - #49 i
INFO  18:32:31,874 - #37 +
INFO  18:32:31,874 - #48 1
INFO  18:32:31,874 - #8 ;
INFO  18:32:31,874 - #22 print
INFO  18:32:31,874 - #20 (
INFO  18:32:31,874 - #49 i
INFO  18:32:31,874 - #21 )
INFO  18:32:31,875 - #8 ;
INFO  18:32:31,875 - #14 if
INFO  18:32:31,875 - #20 (
INFO  18:32:31,875 - #49 provera
INFO  18:32:31,875 - #20 (
INFO  18:32:31,875 - #21 )
INFO  18:32:31,875 - #21 )
INFO  18:32:31,875 - #22 print
INFO  18:32:31,875 - #20 (
INFO  18:32:31,876 - #50 t
INFO  18:32:31,876 - #21 )
INFO  18:32:31,876 - #8 ;
INFO  18:32:31,876 - #49 niz1
INFO  18:32:31,876 - #7 =
INFO  18:32:31,876 - #29 new
INFO  18:32:31,876 - #49 char
INFO  18:32:31,876 - #10 [
INFO  18:32:31,876 - #48 3
INFO  18:32:31,876 - #11 ]
INFO  18:32:31,876 - #8 ;
INFO  18:32:31,876 - #49 niz1
INFO  18:32:31,876 - #10 [
INFO  18:32:31,876 - #48 0
INFO  18:32:31,877 - #11 ]
INFO  18:32:31,877 - #7 =
INFO  18:32:31,877 - #50 a
INFO  18:32:31,877 - #8 ;
INFO  18:32:31,877 - #49 niz1
INFO  18:32:31,877 - #10 [
INFO  18:32:31,877 - #48 1
INFO  18:32:31,877 - #11 ]
INFO  18:32:31,877 - #7 =
INFO  18:32:31,877 - #50 b
INFO  18:32:31,877 - #8 ;
INFO  18:32:31,877 - #49 niz1
INFO  18:32:31,877 - #10 [
INFO  18:32:31,877 - #48 2
INFO  18:32:31,877 - #11 ]
INFO  18:32:31,877 - #7 =
INFO  18:32:31,877 - #50 c
INFO  18:32:31,877 - #8 ;
INFO  18:32:31,877 - #22 print
INFO  18:32:31,878 - #20 (
INFO  18:32:31,878 - #49 dohvatPrviKarakter
INFO  18:32:31,878 - #20 (
INFO  18:32:31,878 - #49 niz1
INFO  18:32:31,878 - #21 )
INFO  18:32:31,878 - #21 )
INFO  18:32:31,878 - #8 ;
INFO  18:32:31,878 - #5 }
INFO  18:32:31,878 - #5 }
ERROR 18:32:31,878 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 52
