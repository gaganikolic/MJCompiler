INFO  12:38:59,761 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:38:59,834 - #2 program
INFO  12:38:59,834 - #49 test301
INFO  12:38:59,835 - #6 const
INFO  12:38:59,836 - #49 int
INFO  12:38:59,836 - #49 nula
INFO  12:38:59,837 - #7 =
INFO  12:38:59,837 - #48 0
INFO  12:38:59,837 - #8 ;
INFO  12:38:59,838 - #6 const
INFO  12:38:59,838 - #49 int
INFO  12:38:59,838 - #49 jedan
INFO  12:38:59,838 - #7 =
INFO  12:38:59,838 - #48 1
INFO  12:38:59,838 - #8 ;
INFO  12:38:59,838 - #6 const
INFO  12:38:59,838 - #49 int
INFO  12:38:59,839 - #49 pet
INFO  12:38:59,839 - #7 =
INFO  12:38:59,839 - #48 5
INFO  12:38:59,839 - #8 ;
INFO  12:38:59,839 - #4 {
INFO  12:38:59,840 - #41 void
INFO  12:38:59,840 - #49 main
INFO  12:38:59,841 - #20 (
INFO  12:38:59,841 - #21 )
INFO  12:38:59,841 - #49 int
INFO  12:38:59,842 - #49 i
INFO  12:38:59,842 - #9 ,
INFO  12:38:59,843 - #49 y
INFO  12:38:59,843 - #9 ,
INFO  12:38:59,843 - #49 z
INFO  12:38:59,843 - #8 ;
INFO  12:38:59,843 - #4 {
INFO  12:38:59,843 - #23 for
INFO  12:38:59,843 - #20 (
INFO  12:38:59,844 - #49 i
INFO  12:38:59,844 - #7 =
INFO  12:38:59,844 - #48 0
INFO  12:38:59,845 - #8 ;
INFO  12:38:59,846 - #49 i
INFO  12:38:59,847 - #35 <
INFO  12:38:59,847 - #48 4
INFO  12:38:59,848 - #8 ;
INFO  12:38:59,849 - #49 i
INFO  12:38:59,849 - #24 ++
INFO  12:38:59,849 - #21 )
INFO  12:38:59,849 - #4 {
INFO  12:38:59,849 - #22 print
INFO  12:38:59,849 - #20 (
INFO  12:38:59,849 - #49 i
INFO  12:38:59,849 - #21 )
INFO  12:38:59,850 - #8 ;
INFO  12:38:59,850 - #5 }
INFO  12:38:59,851 - #5 }
INFO  12:38:59,851 - #5 }
INFO  12:38:59,862 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               nula
               0
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclarationList(
          Type(
           int
          ) [Type]
          ConstDeclarationsEnd(
            ConstNum(
             jedan
             1
            ) [ConstNum]
          ) [ConstDeclarationsEnd]
        ) [ConstDeclarationList]
      ) [ConstDeclaration]
    ) [Declarations]
    ConstDeclaration(
      ConstDeclarationList(
        Type(
         int
        ) [Type]
        ConstDeclarationsEnd(
          ConstNum(
           pet
           5
          ) [ConstNum]
        ) [ConstDeclarationsEnd]
      ) [ConstDeclarationList]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarIdent(
                VarName(
                 i
                ) [VarName]
              ) [VarIdent]
              VarDeclarations(
                VarIdent(
                  VarName(
                   y
                  ) [VarName]
                ) [VarIdent]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     z
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementForCondFact(
          ForSt(
          ) [ForSt]
          DesignatorStatementOne(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         0
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [DesignatorStatementOne]
          LSemiFor(
          ) [LSemiFor]
          CondFactRelop(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       i
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
            Less(
            ) [Less]
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     4
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [CondFactRelop]
          DesignatorStatementOne(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [DesignatorStatementOne]
          StatementStatementList(
            Statements(
              StatementPrint(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           i
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [StatementPrint]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [StatementStatementList]
        ) [StatementForCondFact]
        NoStatement(
        ) [NoStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:38:59,863 - ===================================
