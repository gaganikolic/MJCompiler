INFO  12:53:33,679 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3021.mj
INFO  12:53:33,735 - #2 program
INFO  12:53:33,735 - #49 test301
INFO  12:53:33,735 - #6 const
INFO  12:53:33,736 - #49 int
INFO  12:53:33,736 - #49 nula
INFO  12:53:33,737 - #7 =
INFO  12:53:33,737 - #48 0
INFO  12:53:33,737 - #8 ;
INFO  12:53:33,738 - #6 const
INFO  12:53:33,738 - #49 int
INFO  12:53:33,738 - #49 jedan
INFO  12:53:33,738 - #7 =
INFO  12:53:33,739 - #48 1
INFO  12:53:33,739 - #8 ;
INFO  12:53:33,739 - #6 const
INFO  12:53:33,739 - #49 int
INFO  12:53:33,739 - #49 pet
INFO  12:53:33,739 - #7 =
INFO  12:53:33,739 - #48 5
INFO  12:53:33,739 - #8 ;
INFO  12:53:33,739 - #49 int
INFO  12:53:33,742 - #49 niz
INFO  12:53:33,742 - #10 [
INFO  12:53:33,742 - #11 ]
INFO  12:53:33,742 - #9 ,
INFO  12:53:33,742 - #49 niz2
INFO  12:53:33,742 - #10 [
INFO  12:53:33,742 - #11 ]
INFO  12:53:33,742 - #8 ;
INFO  12:53:33,742 - #49 char
INFO  12:53:33,743 - #49 nizch
INFO  12:53:33,743 - #10 [
INFO  12:53:33,743 - #11 ]
INFO  12:53:33,743 - #8 ;
INFO  12:53:33,743 - #4 {
INFO  12:53:33,743 - #41 void
INFO  12:53:33,744 - #49 main
INFO  12:53:33,744 - #20 (
INFO  12:53:33,744 - #21 )
INFO  12:53:33,744 - #49 int
INFO  12:53:33,745 - #49 bodovi
INFO  12:53:33,745 - #8 ;
INFO  12:53:33,745 - #49 bool
INFO  12:53:33,745 - #49 bt
INFO  12:53:33,745 - #8 ;
INFO  12:53:33,745 - #4 {
INFO  12:53:33,745 - #49 niz
INFO  12:53:33,745 - #7 =
INFO  12:53:33,745 - #29 new
INFO  12:53:33,747 - #49 int
INFO  12:53:33,747 - #10 [
INFO  12:53:33,747 - #48 3
INFO  12:53:33,747 - #11 ]
INFO  12:53:33,748 - #8 ;
INFO  12:53:33,749 - #49 niz
INFO  12:53:33,749 - #10 [
INFO  12:53:33,749 - #49 nula
INFO  12:53:33,749 - #11 ]
INFO  12:53:33,750 - #7 =
INFO  12:53:33,750 - #49 jedan
INFO  12:53:33,750 - #8 ;
INFO  12:53:33,750 - #49 niz
INFO  12:53:33,750 - #10 [
INFO  12:53:33,750 - #48 1
INFO  12:53:33,750 - #11 ]
INFO  12:53:33,750 - #7 =
INFO  12:53:33,750 - #48 2
INFO  12:53:33,750 - #8 ;
INFO  12:53:33,750 - #49 niz
INFO  12:53:33,750 - #10 [
INFO  12:53:33,750 - #49 niz
INFO  12:53:33,751 - #10 [
INFO  12:53:33,751 - #49 jedan
INFO  12:53:33,751 - #11 ]
INFO  12:53:33,751 - #11 ]
INFO  12:53:33,751 - #7 =
INFO  12:53:33,751 - #49 niz
INFO  12:53:33,751 - #10 [
INFO  12:53:33,751 - #49 niz
INFO  12:53:33,751 - #10 [
INFO  12:53:33,751 - #48 0
INFO  12:53:33,751 - #11 ]
INFO  12:53:33,751 - #11 ]
INFO  12:53:33,751 - #38 *
INFO  12:53:33,751 - #48 3
INFO  12:53:33,753 - #8 ;
INFO  12:53:33,753 - #5 }
INFO  12:53:33,754 - #5 }
INFO  12:53:33,764 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               niz
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorNum(
                                 3
                                ) [FactorNum]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             nula
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           jedan
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           2
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorExpr(
                      DesignatorName(
                       niz
                      ) [DesignatorName]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorDesignator(
                                            DesignatorIdent(
                                             jedan
                                            ) [DesignatorIdent]
                                          ) [FactorDesignator]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [DesignatorExpr]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopList(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       0
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                            Star(
                            ) [Star]
                            FactorNum(
                             3
                            ) [FactorNum]
                          ) [MulopList]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:53:33,764 - ===================================
INFO  12:53:33,764 - Pocetak programa test301.
INFO  12:53:33,765 - Deklarisana je konstanta nula na liniji 5
INFO  12:53:33,765 - Deklarisana je konstanta jedan na liniji 6
INFO  12:53:33,765 - Deklarisana je konstanta pet na liniji 7
INFO  12:53:33,765 - Deklarisan je niz niz na liniji 9
INFO  12:53:33,765 - Deklarisan je niz niz2 na liniji 9
INFO  12:53:33,765 - Deklarisan je niz nizch na liniji 10
INFO  12:53:33,765 - Obradjuje se funkcija main na liniji 13
INFO  12:53:33,765 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:53:33,765 - Deklarisana je promenljiva bt na liniji 15
INFO  12:53:33,766 - Designator i expr su odgovarajuceg tipa na liniji 25
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Designator i expr su odgovarajuceg tipa na liniji 26
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Designator i expr su odgovarajuceg tipa na liniji 27
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Kreiran/promenjen element niza niz
INFO  12:53:33,766 - Designator i expr su odgovarajuceg tipa na liniji 28
INFO  12:53:33,766 - ===================================
INFO  12:53:33,767 - Parsiranje uspesno zavrseno!
