INFO  00:08:27,797 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  00:08:27,909 - #2 program
INFO  00:08:27,909 - #49 test301
INFO  00:08:27,909 - #6 const
INFO  00:08:27,911 - #49 int
INFO  00:08:27,912 - #49 nula
INFO  00:08:27,913 - #7 =
INFO  00:08:27,913 - #48 0
INFO  00:08:27,913 - #8 ;
INFO  00:08:27,914 - #6 const
INFO  00:08:27,914 - #49 int
INFO  00:08:27,914 - #49 jedan
INFO  00:08:27,915 - #7 =
INFO  00:08:27,915 - #48 1
INFO  00:08:27,915 - #8 ;
INFO  00:08:27,915 - #6 const
INFO  00:08:27,915 - #49 int
INFO  00:08:27,916 - #49 pet
INFO  00:08:27,916 - #7 =
INFO  00:08:27,916 - #48 5
INFO  00:08:27,916 - #8 ;
INFO  00:08:27,916 - #49 int
INFO  00:08:27,919 - #49 niz
INFO  00:08:27,919 - #10 [
INFO  00:08:27,920 - #11 ]
INFO  00:08:27,920 - #9 ,
INFO  00:08:27,921 - #49 niz2
INFO  00:08:27,921 - #10 [
INFO  00:08:27,921 - #11 ]
INFO  00:08:27,921 - #8 ;
INFO  00:08:27,922 - #49 char
INFO  00:08:27,922 - #49 nizch
INFO  00:08:27,922 - #10 [
INFO  00:08:27,923 - #11 ]
INFO  00:08:27,923 - #8 ;
INFO  00:08:27,923 - #4 {
INFO  00:08:27,923 - #41 void
INFO  00:08:27,924 - #49 main
INFO  00:08:27,925 - #20 (
INFO  00:08:27,925 - #21 )
INFO  00:08:27,926 - #49 int
INFO  00:08:27,927 - #49 bodovi
INFO  00:08:27,927 - #8 ;
INFO  00:08:27,927 - #4 {
INFO  00:08:27,927 - #49 bodovi
INFO  00:08:27,928 - #7 =
INFO  00:08:27,928 - #48 0
INFO  00:08:27,929 - #8 ;
INFO  00:08:27,931 - #14 if
INFO  00:08:27,931 - #20 (
INFO  00:08:27,932 - #49 bodovi
INFO  00:08:27,933 - #33 >
INFO  00:08:27,933 - #48 0
INFO  00:08:27,935 - #21 )
INFO  00:08:27,935 - #4 {
INFO  00:08:27,936 - #22 print
INFO  00:08:27,936 - #20 (
INFO  00:08:27,937 - #48 1
INFO  00:08:27,937 - #21 )
INFO  00:08:27,937 - #8 ;
INFO  00:08:27,937 - #5 }
INFO  00:08:27,938 - #15 else
INFO  00:08:27,938 - #4 {
INFO  00:08:27,940 - #22 print
INFO  00:08:27,940 - #20 (
INFO  00:08:27,940 - #48 3
INFO  00:08:27,940 - #21 )
INFO  00:08:27,940 - #8 ;
INFO  00:08:27,940 - #5 }
INFO  00:08:27,940 - #5 }
INFO  00:08:27,941 - #5 }
INFO  00:08:27,958 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstNum(
                   nula
                   0
                  ) [ConstNum]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstNum(
                 jedan
                 1
                ) [ConstNum]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               pet
               5
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
                VarName(
                 niz2
                ) [VarName]
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
            VarName(
             nizch
            ) [VarName]
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 bodovi
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementIfElse(
            LParenIf(
            ) [LParenIf]
            OneCondTerm(
              OneCondFact(
                CondFactRelop(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                  Greater(
                  ) [Greater]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           0
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [CondFactRelop]
              ) [OneCondFact]
            ) [OneCondTerm]
            RParenIf(
            ) [RParenIf]
            StatementStatementList(
              Statements(
                StatementPrint(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [StatementPrint]
                NoStatement(
                ) [NoStatement]
              ) [Statements]
            ) [StatementStatementList]
            ElseSt(
            ) [ElseSt]
            StatementStatementList(
              Statements(
                StatementPrint(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           3
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [StatementPrint]
                NoStatement(
                ) [NoStatement]
              ) [Statements]
            ) [StatementStatementList]
          ) [StatementIfElse]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  00:08:27,962 - ===================================
INFO  00:08:27,977 - Pocetak programa test301.
INFO  00:08:27,977 - Deklarisana je konstanta nula na liniji 5
INFO  00:08:27,977 - Deklarisana je konstanta jedan na liniji 6
INFO  00:08:27,977 - Deklarisana je konstanta pet na liniji 7
INFO  00:08:27,978 - Deklarisana je promenljiva niz na liniji 9
INFO  00:08:27,978 - Deklarisana je promenljiva niz2 na liniji 9
INFO  00:08:27,978 - Deklarisana je promenljiva nizch na liniji 10
INFO  00:08:27,978 - Obradjuje se funkcija main na liniji 13
INFO  00:08:27,978 - Deklarisana je promenljiva bodovi na liniji 14
INFO  00:08:27,979 - Designator i expr su odgovarajuceg tipa na liniji 16
INFO  00:08:27,979 - Obradjena funkcija PRINT na liniji 18
INFO  00:08:27,979 - Obradjena funkcija PRINT na liniji 20
INFO  00:08:27,980 - ===================================
