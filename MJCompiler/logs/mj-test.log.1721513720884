INFO  00:11:35,386 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3023.mj
INFO  00:11:35,464 - #2 program
INFO  00:11:35,464 - #3 test_303
INFO  00:11:35,464 - #7 const
INFO  00:11:35,465 - #3 int
INFO  00:11:35,465 - #3 cinilac
INFO  00:11:35,466 - #8 =
INFO  00:11:35,466 - #42 4
INFO  00:11:35,466 - #10 ,
INFO  00:11:35,467 - #3 delilac
INFO  00:11:35,467 - #8 =
INFO  00:11:35,467 - #42 3
INFO  00:11:35,467 - #9 ;
INFO  00:11:35,468 - #47 class
INFO  00:11:35,468 - #3 Predmet
INFO  00:11:35,468 - #4 {
INFO  00:11:35,468 - #3 int
INFO  00:11:35,470 - #3 tezina
INFO  00:11:35,470 - #9 ;
INFO  00:11:35,470 - #3 char
INFO  00:11:35,471 - #3 vrsta
INFO  00:11:35,471 - #9 ;
INFO  00:11:35,471 - #4 {
INFO  00:11:35,471 - #45 void
INFO  00:11:35,472 - #3 postaviTezinu
INFO  00:11:35,472 - #21 (
INFO  00:11:35,472 - #3 int
INFO  00:11:35,473 - #3 tezina
INFO  00:11:35,473 - #22 )
INFO  00:11:35,473 - #4 {
INFO  00:11:35,474 - #3 this
INFO  00:11:35,474 - #31 .
INFO  00:11:35,474 - #3 tezina
INFO  00:11:35,474 - #8 =
INFO  00:11:35,476 - #3 tezina
INFO  00:11:35,477 - #9 ;
INFO  00:11:35,479 - #5 }
INFO  00:11:35,480 - #45 void
INFO  00:11:35,480 - #3 ucitajTezinu
INFO  00:11:35,480 - #21 (
INFO  00:11:35,480 - #22 )
INFO  00:11:35,481 - #4 {
INFO  00:11:35,481 - #20 read
INFO  00:11:35,481 - #21 (
INFO  00:11:35,481 - #3 tezina
INFO  00:11:35,481 - #22 )
INFO  00:11:35,481 - #9 ;
INFO  00:11:35,481 - #5 }
INFO  00:11:35,481 - #3 int
INFO  00:11:35,481 - #3 zapremina
INFO  00:11:35,481 - #21 (
INFO  00:11:35,481 - #22 )
INFO  00:11:35,481 - #4 {
INFO  00:11:35,481 - #19 return
INFO  00:11:35,482 - #42 0
INFO  00:11:35,482 - #9 ;
INFO  00:11:35,482 - #5 }
INFO  00:11:35,482 - #3 int
INFO  00:11:35,482 - #3 Q
INFO  00:11:35,482 - #21 (
INFO  00:11:35,482 - #22 )
INFO  00:11:35,482 - #4 {
INFO  00:11:35,482 - #19 return
INFO  00:11:35,482 - #3 zapremina
INFO  00:11:35,483 - #21 (
INFO  00:11:35,483 - #22 )
INFO  00:11:35,483 - #39 *
INFO  00:11:35,483 - #3 tezina
INFO  00:11:35,484 - #9 ;
INFO  00:11:35,485 - #5 }
INFO  00:11:35,485 - #45 void
INFO  00:11:35,485 - #3 postaviVrstu
INFO  00:11:35,485 - #21 (
INFO  00:11:35,485 - #3 char
INFO  00:11:35,485 - #3 vrsta
INFO  00:11:35,485 - #22 )
INFO  00:11:35,485 - #4 {
INFO  00:11:35,485 - #3 this
INFO  00:11:35,485 - #31 .
INFO  00:11:35,485 - #3 vrsta
INFO  00:11:35,486 - #8 =
INFO  00:11:35,486 - #3 vrsta
INFO  00:11:35,486 - #9 ;
INFO  00:11:35,486 - #5 }
INFO  00:11:35,486 - #3 char
INFO  00:11:35,486 - #3 dohvVrstu
INFO  00:11:35,486 - #21 (
INFO  00:11:35,486 - #22 )
INFO  00:11:35,486 - #4 {
INFO  00:11:35,486 - #19 return
INFO  00:11:35,486 - #3 vrsta
INFO  00:11:35,486 - #9 ;
INFO  00:11:35,487 - #5 }
INFO  00:11:35,487 - #3 int
INFO  00:11:35,487 - #3 dohvTezinu
INFO  00:11:35,487 - #21 (
INFO  00:11:35,487 - #22 )
INFO  00:11:35,487 - #4 {
INFO  00:11:35,488 - #19 return
INFO  00:11:35,488 - #3 tezina
INFO  00:11:35,488 - #9 ;
INFO  00:11:35,488 - #5 }
INFO  00:11:35,488 - #45 void
INFO  00:11:35,488 - #3 ispisi
INFO  00:11:35,488 - #21 (
INFO  00:11:35,488 - #22 )
INFO  00:11:35,488 - #4 {
INFO  00:11:35,489 - #23 print
INFO  00:11:35,489 - #21 (
INFO  00:11:35,489 - #3 vrsta
INFO  00:11:35,489 - #22 )
INFO  00:11:35,489 - #9 ;
INFO  00:11:35,489 - #23 print
INFO  00:11:35,489 - #21 (
INFO  00:11:35,489 - #3 Q
INFO  00:11:35,490 - #21 (
INFO  00:11:35,490 - #22 )
INFO  00:11:35,490 - #22 )
INFO  00:11:35,490 - #9 ;
INFO  00:11:35,491 - #5 }
INFO  00:11:35,491 - #5 }
INFO  00:11:35,491 - #5 }
INFO  00:11:35,491 - #47 class
INFO  00:11:35,491 - #3 Sfera
INFO  00:11:35,492 - #49 extends
INFO  00:11:35,492 - #3 Predmet
INFO  00:11:35,492 - #4 {
INFO  00:11:35,492 - #3 int
INFO  00:11:35,493 - #3 r
INFO  00:11:35,493 - #9 ;
INFO  00:11:35,493 - #4 {
INFO  00:11:35,493 - #45 void
INFO  00:11:35,493 - #3 postaviPoluprecnik
INFO  00:11:35,493 - #21 (
INFO  00:11:35,494 - #3 int
INFO  00:11:35,494 - #3 r
INFO  00:11:35,494 - #22 )
INFO  00:11:35,494 - #4 {
INFO  00:11:35,494 - #3 this
INFO  00:11:35,494 - #31 .
INFO  00:11:35,494 - #3 r
INFO  00:11:35,494 - #8 =
INFO  00:11:35,494 - #3 r
INFO  00:11:35,495 - #9 ;
INFO  00:11:35,495 - #5 }
INFO  00:11:35,495 - #3 int
INFO  00:11:35,495 - #3 zapremina
INFO  00:11:35,495 - #21 (
INFO  00:11:35,495 - #22 )
INFO  00:11:35,495 - #3 int
INFO  00:11:35,495 - #3 z
INFO  00:11:35,495 - #9 ;
INFO  00:11:35,495 - #4 {
INFO  00:11:35,495 - #3 z
INFO  00:11:35,495 - #8 =
INFO  00:11:35,496 - #3 cinilac
INFO  00:11:35,496 - #9 ;
INFO  00:11:35,496 - #19 return
INFO  00:11:35,496 - #3 z
INFO  00:11:35,496 - #39 *
INFO  00:11:35,496 - #21 (
INFO  00:11:35,496 - #3 r
INFO  00:11:35,496 - #40 /
INFO  00:11:35,496 - #3 delilac
INFO  00:11:35,497 - #22 )
INFO  00:11:35,498 - #9 ;
INFO  00:11:35,498 - #5 }
INFO  00:11:35,498 - #5 }
INFO  00:11:35,498 - #5 }
INFO  00:11:35,498 - #47 class
INFO  00:11:35,499 - #3 Kvadar
INFO  00:11:35,499 - #49 extends
INFO  00:11:35,499 - #3 Predmet
INFO  00:11:35,499 - #4 {
INFO  00:11:35,499 - #3 int
INFO  00:11:35,499 - #3 a
INFO  00:11:35,499 - #10 ,
INFO  00:11:35,499 - #3 b
INFO  00:11:35,499 - #10 ,
INFO  00:11:35,499 - #3 c
INFO  00:11:35,499 - #9 ;
INFO  00:11:35,499 - #4 {
INFO  00:11:35,500 - #45 void
INFO  00:11:35,500 - #3 postaviStranice
INFO  00:11:35,500 - #21 (
INFO  00:11:35,500 - #3 int
INFO  00:11:35,500 - #3 a
INFO  00:11:35,500 - #10 ,
INFO  00:11:35,500 - #3 int
INFO  00:11:35,500 - #3 b
INFO  00:11:35,500 - #10 ,
INFO  00:11:35,500 - #3 int
INFO  00:11:35,500 - #3 c
INFO  00:11:35,500 - #22 )
INFO  00:11:35,500 - #4 {
INFO  00:11:35,501 - #3 this
INFO  00:11:35,501 - #31 .
INFO  00:11:35,501 - #3 a
INFO  00:11:35,501 - #8 =
INFO  00:11:35,501 - #3 a
INFO  00:11:35,501 - #9 ;
INFO  00:11:35,501 - #3 this
INFO  00:11:35,501 - #31 .
INFO  00:11:35,501 - #3 b
INFO  00:11:35,501 - #8 =
INFO  00:11:35,501 - #3 b
INFO  00:11:35,501 - #9 ;
INFO  00:11:35,501 - #3 this
INFO  00:11:35,501 - #31 .
INFO  00:11:35,501 - #3 c
INFO  00:11:35,501 - #8 =
INFO  00:11:35,501 - #3 c
INFO  00:11:35,501 - #9 ;
INFO  00:11:35,502 - #5 }
INFO  00:11:35,502 - #3 int
INFO  00:11:35,502 - #3 zapremina
INFO  00:11:35,502 - #21 (
INFO  00:11:35,502 - #22 )
INFO  00:11:35,502 - #3 int
INFO  00:11:35,502 - #3 z
INFO  00:11:35,502 - #9 ;
INFO  00:11:35,502 - #4 {
INFO  00:11:35,502 - #3 z
INFO  00:11:35,502 - #8 =
INFO  00:11:35,502 - #3 a
INFO  00:11:35,502 - #39 *
INFO  00:11:35,502 - #3 b
INFO  00:11:35,502 - #39 *
INFO  00:11:35,502 - #3 c
INFO  00:11:35,502 - #9 ;
INFO  00:11:35,503 - #19 return
INFO  00:11:35,503 - #3 z
INFO  00:11:35,503 - #9 ;
INFO  00:11:35,503 - #5 }
INFO  00:11:35,503 - #5 }
INFO  00:11:35,503 - #5 }
INFO  00:11:35,503 - #47 class
INFO  00:11:35,503 - #3 ProstiBrojevi
INFO  00:11:35,503 - #4 {
INFO  00:11:35,503 - #13 static
INFO  00:11:35,503 - #3 int
INFO  00:11:35,503 - #3 prosti
INFO  00:11:35,503 - #11 [
INFO  00:11:35,503 - #12 ]
INFO  00:11:35,503 - #9 ;
INFO  00:11:35,503 - #13 static
INFO  00:11:35,504 - #3 int
INFO  00:11:35,504 - #3 X
INFO  00:11:35,504 - #10 ,
INFO  00:11:35,504 - #3 i
INFO  00:11:35,504 - #10 ,
INFO  00:11:35,504 - #3 j
INFO  00:11:35,504 - #9 ;
INFO  00:11:35,504 - #13 static
INFO  00:11:35,504 - #3 bool
INFO  00:11:35,504 - #3 flag
INFO  00:11:35,504 - #9 ;
INFO  00:11:35,504 - #13 static
INFO  00:11:35,504 - #4 {
INFO  00:11:35,504 - #23 print
INFO  00:11:35,504 - #21 (
INFO  00:11:35,504 - #43 s
INFO  00:11:35,504 - #22 )
INFO  00:11:35,505 - #9 ;
INFO  00:11:35,505 - #23 print
INFO  00:11:35,505 - #21 (
INFO  00:11:35,505 - #43 t
INFO  00:11:35,505 - #22 )
INFO  00:11:35,505 - #9 ;
INFO  00:11:35,506 - #23 print
INFO  00:11:35,506 - #21 (
INFO  00:11:35,506 - #43 a
INFO  00:11:35,506 - #22 )
INFO  00:11:35,506 - #9 ;
INFO  00:11:35,506 - #23 print
INFO  00:11:35,506 - #21 (
INFO  00:11:35,506 - #43 t
INFO  00:11:35,506 - #22 )
INFO  00:11:35,506 - #9 ;
INFO  00:11:35,506 - #23 print
INFO  00:11:35,506 - #21 (
INFO  00:11:35,506 - #43 i
INFO  00:11:35,506 - #22 )
INFO  00:11:35,507 - #9 ;
INFO  00:11:35,507 - #23 print
INFO  00:11:35,507 - #21 (
INFO  00:11:35,507 - #43 c
INFO  00:11:35,507 - #22 )
INFO  00:11:35,507 - #9 ;
INFO  00:11:35,507 - #23 print
INFO  00:11:35,507 - #21 (
INFO  00:11:35,507 - #3 eol
INFO  00:11:35,507 - #22 )
INFO  00:11:35,507 - #9 ;
INFO  00:11:35,507 - #3 prosti
INFO  00:11:35,507 - #8 =
INFO  00:11:35,507 - #30 new
INFO  00:11:35,507 - #3 int
INFO  00:11:35,507 - #11 [
INFO  00:11:35,507 - #42 10
INFO  00:11:35,507 - #12 ]
INFO  00:11:35,508 - #9 ;
INFO  00:11:35,508 - #24 for
INFO  00:11:35,508 - #21 (
INFO  00:11:35,508 - #3 X
INFO  00:11:35,509 - #8 =
INFO  00:11:35,509 - #42 0
INFO  00:11:35,509 - #10 ,
ERROR 00:11:35,509 - 
Sintaksna greska na liniji 66
ERROR 00:11:35,509 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 66
