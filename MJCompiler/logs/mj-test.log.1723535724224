INFO  09:53:40,071 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  09:53:41,391 - #2 program
INFO  09:53:41,391 - #49 test302
INFO  09:53:41,391 - #6 const
INFO  09:53:41,420 - #49 int
INFO  09:53:41,420 - #49 nula
INFO  09:53:41,435 - #7 =
INFO  09:53:41,436 - #48 0
INFO  09:53:41,436 - #8 ;
INFO  09:53:41,437 - #6 const
INFO  09:53:41,437 - #49 int
INFO  09:53:41,437 - #49 jedan
INFO  09:53:41,438 - #7 =
INFO  09:53:41,438 - #48 1
INFO  09:53:41,438 - #8 ;
INFO  09:53:41,438 - #6 const
INFO  09:53:41,439 - #49 int
INFO  09:53:41,439 - #49 pet
INFO  09:53:41,439 - #7 =
INFO  09:53:41,440 - #48 5
INFO  09:53:41,440 - #8 ;
INFO  09:53:41,442 - #49 int
INFO  09:53:41,444 - #49 niz
INFO  09:53:41,444 - #10 [
INFO  09:53:41,462 - #11 ]
INFO  09:53:41,463 - #8 ;
INFO  09:53:41,463 - #49 char
INFO  09:53:41,464 - #49 nizch
INFO  09:53:41,464 - #10 [
INFO  09:53:41,465 - #11 ]
INFO  09:53:41,465 - #8 ;
INFO  09:53:41,465 - #49 int
INFO  09:53:41,465 - #49 mat
INFO  09:53:41,465 - #10 [
INFO  09:53:41,465 - #11 ]
INFO  09:53:41,465 - #10 [
INFO  09:53:41,465 - #11 ]
INFO  09:53:41,466 - #8 ;
INFO  09:53:41,466 - #49 int
INFO  09:53:41,467 - #49 a
INFO  09:53:41,467 - #8 ;
INFO  09:53:41,468 - #4 {
INFO  09:53:41,468 - #41 void
INFO  09:53:41,485 - #49 main
INFO  09:53:41,486 - #20 (
INFO  09:53:41,486 - #21 )
INFO  09:53:41,500 - #49 int
INFO  09:53:41,501 - #49 bodovi
INFO  09:53:41,501 - #8 ;
INFO  09:53:41,501 - #49 bool
INFO  09:53:41,501 - #49 bt
INFO  09:53:41,501 - #8 ;
INFO  09:53:41,501 - #4 {
INFO  09:53:41,502 - #49 bodovi
INFO  09:53:41,502 - #7 =
INFO  09:53:41,502 - #48 1
INFO  09:53:41,520 - #8 ;
INFO  09:53:41,552 - #49 a
INFO  09:53:41,553 - #7 =
INFO  09:53:41,553 - #48 1
INFO  09:53:41,553 - #8 ;
INFO  09:53:41,553 - #49 bodovi
INFO  09:53:41,553 - #7 =
INFO  09:53:41,554 - #28 -
INFO  09:53:41,554 - #49 bodovi
INFO  09:53:41,554 - #37 +
INFO  09:53:41,556 - #20 (
INFO  09:53:41,585 - #49 pet
INFO  09:53:41,585 - #38 *
INFO  09:53:41,585 - #49 a
INFO  09:53:41,626 - #39 /
INFO  09:53:41,626 - #48 2
INFO  09:53:41,643 - #28 -
INFO  09:53:41,643 - #49 jedan
INFO  09:53:41,658 - #21 )
INFO  09:53:41,658 - #38 *
INFO  09:53:41,658 - #49 bodovi
INFO  09:53:41,659 - #28 -
INFO  09:53:41,659 - #20 (
INFO  09:53:41,659 - #48 3
INFO  09:53:41,659 - #40 %
INFO  09:53:41,659 - #48 2
INFO  09:53:41,674 - #37 +
INFO  09:53:41,675 - #48 3
INFO  09:53:41,676 - #38 *
INFO  09:53:41,676 - #48 2
INFO  09:53:41,676 - #28 -
INFO  09:53:41,676 - #48 3
INFO  09:53:41,677 - #21 )
INFO  09:53:41,677 - #8 ;
INFO  09:53:41,677 - #22 print
INFO  09:53:41,678 - #20 (
INFO  09:53:41,679 - #49 bodovi
INFO  09:53:41,679 - #21 )
INFO  09:53:41,680 - #8 ;
INFO  09:53:41,681 - #5 }
INFO  09:53:41,696 - #5 }
INFO  09:53:41,801 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstDeclaration(
                  ConstDeclarationList(
                    Type(
                     int
                    ) [Type]
                    ConstDeclarationsEnd(
                      ConstNum(
                       nula
                       0
                      ) [ConstNum]
                    ) [ConstDeclarationsEnd]
                  ) [ConstDeclarationList]
                ) [ConstDeclaration]
              ) [Declarations]
              ConstDeclaration(
                ConstDeclarationList(
                  Type(
                   int
                  ) [Type]
                  ConstDeclarationsEnd(
                    ConstNum(
                     jedan
                     1
                    ) [ConstNum]
                  ) [ConstDeclarationsEnd]
                ) [ConstDeclarationList]
              ) [ConstDeclaration]
            ) [Declarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstNum(
                   pet
                   5
                  ) [ConstNum]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarArr(
                  VarName(
                   niz
                  ) [VarName]
                ) [VarArr]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             char
            ) [Type]
            VarDeclarationsEnd(
              VarArr(
                VarName(
                 nizch
                ) [VarName]
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarationsEnd(
            VarMatrix(
              VarName(
               mat
              ) [VarName]
            ) [VarMatrix]
          ) [VarDeclarationsEnd]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             a
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                  VarName(
                   bodovi
                  ) [VarName]
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 bt
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                Term(
                  MulopEnd(
                    FactorNum(
                     1
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
                AddopEnd(
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 a
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  Term(
                    MulopEnd(
                      FactorNum(
                       1
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                  AddopEnd(
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprNegativ(
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           bodovi
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                    AddopList(
                      Plus(
                      ) [Plus]
                      Term(
                        MulopList(
                          MulopEnd(
                            FactorExpr(
                              ExprPositive(
                                Term(
                                  MulopList(
                                    MulopList(
                                      MulopEnd(
                                        FactorDesignator(
                                          DesignatorIdent(
                                           pet
                                          ) [DesignatorIdent]
                                        ) [FactorDesignator]
                                      ) [MulopEnd]
                                      Star(
                                      ) [Star]
                                      FactorDesignator(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopList]
                                    Slash(
                                    ) [Slash]
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [MulopList]
                                ) [Term]
                                AddopList(
                                  Minus(
                                  ) [Minus]
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         jedan
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                  AddopEnd(
                                  ) [AddopEnd]
                                ) [AddopList]
                              ) [ExprPositive]
                            ) [FactorExpr]
                          ) [MulopEnd]
                          Star(
                          ) [Star]
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopList]
                      ) [Term]
                      AddopList(
                        Minus(
                        ) [Minus]
                        Term(
                          MulopEnd(
                            FactorExpr(
                              ExprPositive(
                                Term(
                                  MulopList(
                                    MulopEnd(
                                      FactorNum(
                                       3
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                    Percent(
                                    ) [Percent]
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [MulopList]
                                ) [Term]
                                AddopList(
                                  Plus(
                                  ) [Plus]
                                  Term(
                                    MulopList(
                                      MulopEnd(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                      Star(
                                      ) [Star]
                                      FactorNum(
                                       2
                                      ) [FactorNum]
                                    ) [MulopList]
                                  ) [Term]
                                  AddopList(
                                    Minus(
                                    ) [Minus]
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                    AddopEnd(
                                    ) [AddopEnd]
                                  ) [AddopList]
                                ) [AddopList]
                              ) [ExprPositive]
                            ) [FactorExpr]
                          ) [MulopEnd]
                        ) [Term]
                        AddopEnd(
                        ) [AddopEnd]
                      ) [AddopList]
                    ) [AddopList]
                  ) [ExprNegativ]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementPrint(
                ExprPositive(
                  Term(
                    MulopEnd(
                      FactorDesignator(
                        DesignatorIdent(
                         bodovi
                        ) [DesignatorIdent]
                      ) [FactorDesignator]
                    ) [MulopEnd]
                  ) [Term]
                  AddopEnd(
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [StatementPrint]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  09:53:41,807 - ===================================
INFO  09:53:41,807 - Pocetak programa test302.
INFO  09:53:41,808 - Deklarisana je konstanta nula na liniji 5
INFO  09:53:41,809 - Deklarisana je konstanta jedan na liniji 6
INFO  09:53:41,809 - Deklarisana je konstanta pet na liniji 7
INFO  09:53:41,809 - Deklarisana je promenljiva niz na liniji 9
INFO  09:53:41,810 - Deklarisana je promenljiva nizch na liniji 10
INFO  09:53:41,810 - Deklarisana je promenljiva a na liniji 13
INFO  09:53:41,810 - Obradjuje se funkcija main na liniji 19
INFO  09:53:41,810 - Deklarisana je promenljiva bodovi na liniji 20
INFO  09:53:41,810 - Deklarisana je promenljiva bt na liniji 21
ERROR 09:53:41,811 - Greska na liniji 23 designator i expr nisu istog tipa
ERROR 09:53:41,811 - Greska na liniji 24 designator i expr nisu istog tipa
