INFO  20:00:22,061 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  20:00:23,086 - #2 program
INFO  20:00:23,086 - #49 test301
INFO  20:00:23,086 - #6 const
INFO  20:00:23,103 - #49 int
INFO  20:00:23,103 - #49 nula
INFO  20:00:23,112 - #7 =
INFO  20:00:23,112 - #48 0
INFO  20:00:23,112 - #8 ;
INFO  20:00:23,112 - #6 const
INFO  20:00:23,113 - #49 int
INFO  20:00:23,113 - #49 jedan
INFO  20:00:23,113 - #7 =
INFO  20:00:23,113 - #48 1
INFO  20:00:23,113 - #8 ;
INFO  20:00:23,113 - #6 const
INFO  20:00:23,113 - #49 int
INFO  20:00:23,113 - #49 pet
INFO  20:00:23,113 - #7 =
INFO  20:00:23,114 - #48 5
INFO  20:00:23,114 - #8 ;
INFO  20:00:23,114 - #6 const
INFO  20:00:23,114 - #49 int
INFO  20:00:23,114 - #49 pet
INFO  20:00:23,114 - #7 =
INFO  20:00:23,114 - #48 5
INFO  20:00:23,114 - #8 ;
INFO  20:00:23,114 - #49 int
INFO  20:00:23,115 - #49 niz
INFO  20:00:23,115 - #10 [
INFO  20:00:23,125 - #11 ]
INFO  20:00:23,125 - #8 ;
INFO  20:00:23,135 - #49 char
INFO  20:00:23,136 - #49 nizch
INFO  20:00:23,136 - #10 [
INFO  20:00:23,136 - #11 ]
INFO  20:00:23,136 - #8 ;
INFO  20:00:23,136 - #4 {
INFO  20:00:23,136 - #41 void
INFO  20:00:23,144 - #49 main
INFO  20:00:23,144 - #20 (
INFO  20:00:23,144 - #21 )
INFO  20:00:23,154 - #49 int
INFO  20:00:23,155 - #49 bodovi
INFO  20:00:23,155 - #8 ;
INFO  20:00:23,155 - #4 {
INFO  20:00:23,155 - #49 bodovi
INFO  20:00:23,155 - #7 =
INFO  20:00:23,155 - #48 0
INFO  20:00:23,165 - #8 ;
INFO  20:00:23,175 - #22 print
INFO  20:00:23,175 - #20 (
INFO  20:00:23,175 - #49 eol
INFO  20:00:23,175 - #21 )
INFO  20:00:23,176 - #8 ;
INFO  20:00:23,176 - #22 print
INFO  20:00:23,176 - #20 (
INFO  20:00:23,176 - #48 1
INFO  20:00:23,176 - #21 )
INFO  20:00:23,176 - #8 ;
INFO  20:00:23,176 - #5 }
INFO  20:00:23,185 - #5 }
INFO  20:00:23,241 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDeclaration(
                ConstDeclarationList(
                  Type(
                   int
                  ) [Type]
                  ConstDeclarationsEnd(
                    ConstNum(
                     nula
                     0
                    ) [ConstNum]
                  ) [ConstDeclarationsEnd]
                ) [ConstDeclarationList]
              ) [ConstDeclaration]
            ) [Declarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstNum(
                   jedan
                   1
                  ) [ConstNum]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstNum(
                 pet
                 5
                ) [ConstNum]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               pet
               5
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarationsEnd(
            VarArr(
              Arr(
                VarName(
                 niz
                ) [VarName]
              ) [Arr]
            ) [VarArr]
          ) [VarDeclarationsEnd]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
            Arr(
              VarName(
               nizch
              ) [VarName]
            ) [Arr]
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 bodovi
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       eol
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementPrint(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       1
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementPrint]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  20:00:23,242 - ===================================
INFO  20:00:23,250 - Pocetak programa test301.
INFO  20:00:23,254 - Deklarisana je konstanta nula na liniji 5
INFO  20:00:23,254 - Deklarisana je konstanta jedan na liniji 6
INFO  20:00:23,254 - Deklarisana je konstanta pet na liniji 7
ERROR 20:00:23,254 - GRESKA: Vec postoji identifikator pet
INFO  20:00:23,255 - Deklarisana je konstanta pet na liniji 8
INFO  20:00:23,255 - Deklarisana je promenljiva niz na liniji 10
INFO  20:00:23,255 - Deklarisana je promenljiva nizch na liniji 11
INFO  20:00:23,255 - Obradjuje se funkcija main na liniji 14
INFO  20:00:23,256 - Deklarisana je promenljiva bodovi na liniji 15
INFO  20:00:23,256 - Designator i expr su odgovarajuceg tipa na liniji 20
INFO  20:00:23,256 - Obradjena funkcija PRINT na liniji 21
INFO  20:00:23,256 - Obradjena funkcija PRINT na liniji 22
INFO  20:00:23,256 - ===================================
ERROR 20:00:23,257 - Parsiranje NIJE uspesno zavrseno!
