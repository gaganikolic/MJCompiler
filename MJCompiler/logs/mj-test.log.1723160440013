INFO  01:40:25,635 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  01:40:25,694 - #2 program
INFO  01:40:25,694 - #49 test301
INFO  01:40:25,694 - #6 const
INFO  01:40:25,696 - #49 int
INFO  01:40:25,696 - #49 nula
INFO  01:40:25,697 - #7 =
INFO  01:40:25,697 - #48 0
INFO  01:40:25,697 - #8 ;
INFO  01:40:25,697 - #6 const
INFO  01:40:25,698 - #49 int
INFO  01:40:25,698 - #49 jedan
INFO  01:40:25,698 - #7 =
INFO  01:40:25,698 - #48 1
INFO  01:40:25,698 - #8 ;
INFO  01:40:25,698 - #6 const
INFO  01:40:25,698 - #49 int
INFO  01:40:25,698 - #49 pet
INFO  01:40:25,699 - #7 =
INFO  01:40:25,699 - #48 5
INFO  01:40:25,699 - #8 ;
INFO  01:40:25,699 - #49 int
INFO  01:40:25,699 - #49 niz
INFO  01:40:25,699 - #10 [
INFO  01:40:25,700 - #11 ]
INFO  01:40:25,701 - #9 ,
INFO  01:40:25,701 - #49 niz2
INFO  01:40:25,701 - #10 [
INFO  01:40:25,701 - #11 ]
INFO  01:40:25,701 - #8 ;
INFO  01:40:25,701 - #49 char
INFO  01:40:25,702 - #49 nizch
INFO  01:40:25,702 - #10 [
INFO  01:40:25,702 - #11 ]
INFO  01:40:25,702 - #8 ;
INFO  01:40:25,702 - #4 {
INFO  01:40:25,702 - #49 int
INFO  01:40:25,703 - #49 saberi
INFO  01:40:25,703 - #20 (
INFO  01:40:25,703 - #49 int
INFO  01:40:25,703 - #49 z
INFO  01:40:25,703 - #21 )
INFO  01:40:25,704 - #49 int
INFO  01:40:25,704 - #49 a
INFO  01:40:25,704 - #9 ,
INFO  01:40:25,704 - #49 b
INFO  01:40:25,704 - #8 ;
INFO  01:40:25,704 - #4 {
INFO  01:40:25,704 - #22 print
INFO  01:40:25,704 - #20 (
INFO  01:40:25,704 - #49 z
INFO  01:40:25,704 - #21 )
INFO  01:40:25,706 - #8 ;
INFO  01:40:25,706 - #49 a
INFO  01:40:25,706 - #7 =
INFO  01:40:25,706 - #48 1
INFO  01:40:25,707 - #8 ;
INFO  01:40:25,707 - #49 b
INFO  01:40:25,707 - #7 =
INFO  01:40:25,707 - #48 2
INFO  01:40:25,707 - #8 ;
INFO  01:40:25,708 - #18 return
INFO  01:40:25,708 - #49 a
INFO  01:40:25,708 - #37 +
INFO  01:40:25,708 - #49 b
INFO  01:40:25,709 - #8 ;
INFO  01:40:25,709 - #5 }
INFO  01:40:25,710 - #41 void
INFO  01:40:25,711 - #49 main
INFO  01:40:25,711 - #20 (
INFO  01:40:25,711 - #21 )
INFO  01:40:25,712 - #49 int
INFO  01:40:25,712 - #49 i
INFO  01:40:25,712 - #9 ,
INFO  01:40:25,712 - #49 y
INFO  01:40:25,712 - #9 ,
INFO  01:40:25,712 - #49 z
INFO  01:40:25,713 - #8 ;
INFO  01:40:25,713 - #4 {
INFO  01:40:25,713 - #49 z
INFO  01:40:25,713 - #7 =
INFO  01:40:25,713 - #49 saberi
INFO  01:40:25,713 - #20 (
INFO  01:40:25,713 - #21 )
INFO  01:40:25,714 - #8 ;
INFO  01:40:25,714 - #22 print
INFO  01:40:25,714 - #20 (
INFO  01:40:25,714 - #49 z
INFO  01:40:25,714 - #21 )
INFO  01:40:25,714 - #8 ;
INFO  01:40:25,714 - #5 }
INFO  01:40:25,714 - #5 }
INFO  01:40:25,724 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstNum(
                   nula
                   0
                  ) [ConstNum]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstNum(
                 jedan
                 1
                ) [ConstNum]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               pet
               5
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
                VarName(
                 niz2
                ) [VarName]
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
            VarName(
             nizch
            ) [VarName]
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      NoMethodDeclaration(
      ) [NoMethodDeclaration]
      MethodDecl(
        MethodNameAnyType(
          Type(
           int
          ) [Type]
         saberi
        ) [MethodNameAnyType]
        MethodParameters(
          FormParsEnd(
            FormParsVar(
              Type(
               int
              ) [Type]
             z
            ) [FormParsVar]
          ) [FormParsEnd]
        ) [MethodParameters]
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarations(
                VarIdent(
                  VarName(
                   a
                  ) [VarName]
                ) [VarIdent]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     b
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       z
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   a
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     b
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             2
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              Statements(
                StatementReturnExpr(
                  ExprPositive(
                    AddopList(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               a
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                      Plus(
                      ) [Plus]
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             b
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopList]
                  ) [ExprPositive]
                ) [StatementReturnExpr]
                NoStatement(
                ) [NoStatement]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarIdent(
                VarName(
                 i
                ) [VarName]
              ) [VarIdent]
              VarDeclarations(
                VarIdent(
                  VarName(
                   y
                  ) [VarName]
                ) [VarIdent]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     z
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               z
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorDesignatorActPars(
                        DesignatorIdent(
                         saberi
                        ) [DesignatorIdent]
                        NoActPars(
                        ) [NoActPars]
                      ) [FactorDesignatorActPars]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       z
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  01:40:25,724 - ===================================
INFO  01:40:25,725 - Pocetak programa test301.
INFO  01:40:25,725 - Deklarisana je konstanta nula na liniji 5
INFO  01:40:25,725 - Deklarisana je konstanta jedan na liniji 6
INFO  01:40:25,725 - Deklarisana je konstanta pet na liniji 7
INFO  01:40:25,725 - Deklarisana je promenljiva niz na liniji 9
INFO  01:40:25,725 - Deklarisana je promenljiva niz2 na liniji 9
INFO  01:40:25,725 - Deklarisana je promenljiva nizch na liniji 10
INFO  01:40:25,726 - Obradjuje se funkcija saberi na liniji 13
INFO  01:40:25,726 - Deklarisan je parametar funkcije z na liniji 13
INFO  01:40:25,726 - Deklarisana je promenljiva a na liniji 14
INFO  01:40:25,726 - Deklarisana je promenljiva b na liniji 14
INFO  01:40:25,726 - Obradjena funkcija PRINT na liniji 16
INFO  01:40:25,726 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  01:40:25,726 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  01:40:25,726 - Dobra povratna vrednost funkcije na liniji 18
INFO  01:40:25,726 - Obradjuje se funkcija main na liniji 21
INFO  01:40:25,726 - Deklarisana je promenljiva i na liniji 22
INFO  01:40:25,726 - Deklarisana je promenljiva y na liniji 22
INFO  01:40:25,727 - Deklarisana je promenljiva z na liniji 22
ERROR 01:40:25,727 - Greska, neodgovarajuci broj parametara pozvane funkcije na liniji 25
ERROR 01:40:25,727 - Greska na liniji 25 designator i expr nisu istog tipa
INFO  01:40:25,727 - Obradjena funkcija PRINT na liniji 26
INFO  01:40:25,727 - ===================================
ERROR 01:40:25,728 - Parsiranje NIJE uspesno zavrseno!
