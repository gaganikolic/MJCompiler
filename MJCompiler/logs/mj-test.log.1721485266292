INFO  16:20:27,786 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3022.mj
INFO  16:20:27,833 - #2 program
INFO  16:20:27,833 - #3 test302
INFO  16:20:27,834 - #7 const
INFO  16:20:27,834 - #3 int
INFO  16:20:27,834 - #3 jedan
INFO  16:20:27,835 - #8 =
INFO  16:20:27,836 - #42 1
INFO  16:20:27,836 - #9 ;
INFO  16:20:27,837 - #3 int
INFO  16:20:27,837 - #3 i
INFO  16:20:27,837 - #9 ;
INFO  16:20:27,839 - #3 bool
INFO  16:20:27,839 - #3 ibool
INFO  16:20:27,839 - #9 ;
INFO  16:20:27,839 - #3 int
INFO  16:20:27,839 - #3 niz2
INFO  16:20:27,840 - #9 ;
INFO  16:20:27,840 - #3 int
INFO  16:20:27,840 - #3 niz
INFO  16:20:27,841 - #11 [
INFO  16:20:27,841 - #12 ]
INFO  16:20:27,841 - #10 ,
INFO  16:20:27,841 - #3 niz_2
INFO  16:20:27,841 - #11 [
INFO  16:20:27,842 - #12 ]
INFO  16:20:27,842 - #10 ,
INFO  16:20:27,842 - #3 niz_3
INFO  16:20:27,842 - #9 ;
INFO  16:20:27,842 - #3 int
INFO  16:20:27,842 - #3 a
INFO  16:20:27,842 - #9 ;
INFO  16:20:27,843 - #4 {
INFO  16:20:27,843 - #3 int
INFO  16:20:27,844 - #3 sum
INFO  16:20:27,844 - #21 (
INFO  16:20:27,844 - #3 int
INFO  16:20:27,844 - #3 z
INFO  16:20:27,844 - #10 ,
INFO  16:20:27,844 - #3 int
INFO  16:20:27,844 - #3 d
INFO  16:20:27,844 - #22 )
INFO  16:20:27,845 - #4 {
INFO  16:20:27,845 - #19 return
INFO  16:20:27,846 - #3 z
INFO  16:20:27,846 - #38 +
INFO  16:20:27,847 - #3 d
INFO  16:20:27,848 - #9 ;
INFO  16:20:27,849 - #5 }
INFO  16:20:27,850 - #3 int
INFO  16:20:27,851 - #3 inkrement
INFO  16:20:27,851 - #21 (
INFO  16:20:27,851 - #3 int
INFO  16:20:27,851 - #3 a
INFO  16:20:27,851 - #10 ,
INFO  16:20:27,851 - #3 int
INFO  16:20:27,851 - #3 inc
INFO  16:20:27,851 - #22 )
INFO  16:20:27,851 - #3 int
INFO  16:20:27,851 - #3 pom
INFO  16:20:27,851 - #9 ;
INFO  16:20:27,851 - #4 {
INFO  16:20:27,852 - #15 if
INFO  16:20:27,852 - #21 (
INFO  16:20:27,852 - #3 inc
INFO  16:20:27,852 - #32 ==
INFO  16:20:27,852 - #3 jedan
INFO  16:20:27,853 - #22 )
INFO  16:20:27,855 - #3 pom
INFO  16:20:27,855 - #8 =
INFO  16:20:27,855 - #42 1
INFO  16:20:27,856 - #9 ;
INFO  16:20:27,856 - #16 else
INFO  16:20:27,856 - #15 if
INFO  16:20:27,856 - #21 (
INFO  16:20:27,856 - #3 inc
INFO  16:20:27,857 - #32 ==
INFO  16:20:27,857 - #42 2
INFO  16:20:27,857 - #22 )
INFO  16:20:27,857 - #3 pom
INFO  16:20:27,857 - #8 =
INFO  16:20:27,857 - #3 a
INFO  16:20:27,857 - #9 ;
INFO  16:20:27,857 - #19 return
INFO  16:20:27,858 - #3 sum
INFO  16:20:27,859 - #21 (
INFO  16:20:27,859 - #3 a
INFO  16:20:27,859 - #10 ,
INFO  16:20:27,859 - #3 pom
INFO  16:20:27,859 - #22 )
INFO  16:20:27,860 - #9 ;
INFO  16:20:27,860 - #5 }
INFO  16:20:27,860 - #3 bool
INFO  16:20:27,860 - #3 verify
INFO  16:20:27,861 - #21 (
INFO  16:20:27,861 - #22 )
INFO  16:20:27,861 - #4 {
INFO  16:20:27,862 - #23 print
INFO  16:20:27,862 - #21 (
INFO  16:20:27,862 - #43 v
INFO  16:20:27,862 - #22 )
INFO  16:20:27,863 - #9 ;
INFO  16:20:27,863 - #19 return
INFO  16:20:27,863 - #44 false
INFO  16:20:27,863 - #9 ;
INFO  16:20:27,863 - #5 }
INFO  16:20:27,864 - #45 void
INFO  16:20:27,864 - #3 main
INFO  16:20:27,864 - #21 (
INFO  16:20:27,864 - #22 )
INFO  16:20:27,864 - #4 {
INFO  16:20:27,864 - #15 if
INFO  16:20:27,864 - #21 (
INFO  16:20:27,864 - #42 1
INFO  16:20:27,864 - #33 !=
INFO  16:20:27,864 - #42 1
INFO  16:20:27,865 - #22 )
INFO  16:20:27,865 - #23 print
INFO  16:20:27,865 - #21 (
INFO  16:20:27,865 - #29 -
INFO  16:20:27,865 - #42 6
INFO  16:20:27,866 - #22 )
INFO  16:20:27,866 - #9 ;
INFO  16:20:27,866 - #16 else
INFO  16:20:27,866 - #23 print
INFO  16:20:27,866 - #21 (
INFO  16:20:27,866 - #42 0
INFO  16:20:27,866 - #22 )
INFO  16:20:27,866 - #9 ;
INFO  16:20:27,866 - #3 ibool
INFO  16:20:27,867 - #8 =
INFO  16:20:27,867 - #44 false
INFO  16:20:27,867 - #9 ;
INFO  16:20:27,867 - #3 i
INFO  16:20:27,867 - #8 =
INFO  16:20:27,867 - #42 0
INFO  16:20:27,867 - #9 ;
INFO  16:20:27,867 - #24 for
ERROR 16:20:27,867 - 
Sintaksna greska na liniji 44
ERROR 16:20:27,868 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 44
