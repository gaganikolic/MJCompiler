INFO  21:18:04,322 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  21:18:04,374 - #2 program
INFO  21:18:04,374 - #49 test302
INFO  21:18:04,374 - #6 const
INFO  21:18:04,376 - #49 int
INFO  21:18:04,376 - #49 jedan
INFO  21:18:04,377 - #7 =
INFO  21:18:04,377 - #48 1
INFO  21:18:04,377 - #8 ;
INFO  21:18:04,377 - #49 int
INFO  21:18:04,378 - #49 i
INFO  21:18:04,378 - #8 ;
INFO  21:18:04,378 - #49 bool
INFO  21:18:04,379 - #49 ibool
INFO  21:18:04,379 - #8 ;
INFO  21:18:04,379 - #49 int
INFO  21:18:04,379 - #49 niz2
INFO  21:18:04,379 - #8 ;
INFO  21:18:04,379 - #49 int
INFO  21:18:04,379 - #49 niz
INFO  21:18:04,380 - #10 [
INFO  21:18:04,380 - #11 ]
INFO  21:18:04,382 - #9 ,
INFO  21:18:04,382 - #49 niz_2
INFO  21:18:04,382 - #10 [
INFO  21:18:04,382 - #11 ]
INFO  21:18:04,383 - #9 ,
INFO  21:18:04,383 - #49 niz_3
INFO  21:18:04,383 - #10 [
INFO  21:18:04,383 - #11 ]
INFO  21:18:04,383 - #8 ;
INFO  21:18:04,383 - #49 int
INFO  21:18:04,383 - #49 a
INFO  21:18:04,383 - #8 ;
INFO  21:18:04,383 - #4 {
INFO  21:18:04,383 - #41 void
INFO  21:18:04,384 - #49 main
INFO  21:18:04,384 - #20 (
INFO  21:18:04,385 - #21 )
INFO  21:18:04,385 - #4 {
INFO  21:18:04,386 - #49 i
INFO  21:18:04,386 - #7 =
INFO  21:18:04,386 - #48 0
INFO  21:18:04,387 - #8 ;
INFO  21:18:04,388 - #23 for
INFO  21:18:04,388 - #20 (
INFO  21:18:04,389 - #49 i
INFO  21:18:04,389 - #7 =
INFO  21:18:04,389 - #48 0
INFO  21:18:04,389 - #8 ;
INFO  21:18:04,389 - #49 i
INFO  21:18:04,390 - #35 <
INFO  21:18:04,390 - #48 10
INFO  21:18:04,391 - #8 ;
INFO  21:18:04,392 - #49 i
INFO  21:18:04,393 - #24 ++
INFO  21:18:04,393 - #21 )
INFO  21:18:04,394 - #4 {
INFO  21:18:04,395 - #22 print
INFO  21:18:04,395 - #20 (
INFO  21:18:04,395 - #49 i
INFO  21:18:04,395 - #21 )
INFO  21:18:04,395 - #8 ;
INFO  21:18:04,395 - #5 }
INFO  21:18:04,396 - #5 }
INFO  21:18:04,397 - #5 }
INFO  21:18:04,407 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDeclaration(
                ConstDeclarationList(
                  Type(
                   int
                  ) [Type]
                  ConstDeclarationsEnd(
                    ConstNum(
                     jedan
                     1
                    ) [ConstNum]
                  ) [ConstDeclarationsEnd]
                ) [ConstDeclarationList]
              ) [ConstDeclaration]
            ) [Declarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     i
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               bool
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                  VarName(
                   ibool
                  ) [VarName]
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 niz2
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
            VarDeclarations(
              VarArr(
                VarName(
                 niz_2
                ) [VarName]
              ) [VarArr]
              VarDeclarationsEnd(
                VarArr(
                  VarName(
                   niz_3
                  ) [VarName]
                ) [VarArr]
              ) [VarDeclarationsEnd]
            ) [VarDeclarations]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             a
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoDeclarations(
      ) [NoDeclarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               i
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementForCondFact(
            ForSt(
            ) [ForSt]
            DesignatorStatementOne(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   i
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           0
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [DesignatorStatementOne]
            LSemiFor(
            ) [LSemiFor]
            CondFactFor(
              CondFactRelop(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           i
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                Less(
                ) [Less]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         10
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [CondFactRelop]
            ) [CondFactFor]
            RSemiFor(
            ) [RSemiFor]
            DesignatorStatementListSecond(
              DesignatorStatementOne(
                DesignatorStatementMatched(
                  DesignatorStatementIncrement(
                    DesignatorIdent(
                     i
                    ) [DesignatorIdent]
                  ) [DesignatorStatementIncrement]
                ) [DesignatorStatementMatched]
              ) [DesignatorStatementOne]
            ) [DesignatorStatementListSecond]
            RParenFor(
            ) [RParenFor]
            StatementForBody(
              StatementStatementList(
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               i
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  NoStatement(
                  ) [NoStatement]
                ) [Statements]
              ) [StatementStatementList]
            ) [StatementForBody]
          ) [StatementForCondFact]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  21:18:04,407 - ===================================
INFO  21:18:04,407 - Pocetak programa test302.
INFO  21:18:04,408 - Deklarisana je konstanta jedan na liniji 5
INFO  21:18:04,408 - Deklarisana je promenljiva i na liniji 7
INFO  21:18:04,408 - Deklarisana je promenljiva ibool na liniji 8
INFO  21:18:04,408 - Deklarisana je promenljiva niz2 na liniji 10
INFO  21:18:04,408 - Deklarisana je promenljiva niz na liniji 12
INFO  21:18:04,408 - Deklarisana je promenljiva niz_2 na liniji 12
INFO  21:18:04,408 - Deklarisana je promenljiva niz_3 na liniji 12
INFO  21:18:04,408 - Deklarisana je promenljiva a na liniji 13
INFO  21:18:04,408 - Obradjuje se funkcija main na liniji 19
INFO  21:18:04,408 - Designator i expr su odgovarajuceg tipa na liniji 22
INFO  21:18:04,408 - Designator i expr su odgovarajuceg tipa na liniji 23
INFO  21:18:04,409 - Obradjena funkcija PRINT na liniji 24
INFO  21:18:04,409 - ===================================
INFO  21:18:04,416 - Parsiranje uspesno zavrseno!
