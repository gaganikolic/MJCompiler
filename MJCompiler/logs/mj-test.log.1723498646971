INFO  23:36:02,296 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  23:36:02,371 - #2 program
INFO  23:36:02,371 - #49 test302
INFO  23:36:02,371 - #6 const
INFO  23:36:02,372 - #49 int
INFO  23:36:02,372 - #49 jedan
INFO  23:36:02,373 - #7 =
INFO  23:36:02,373 - #48 1
INFO  23:36:02,373 - #8 ;
INFO  23:36:02,374 - #49 int
INFO  23:36:02,374 - #49 i
INFO  23:36:02,374 - #8 ;
INFO  23:36:02,375 - #49 bool
INFO  23:36:02,376 - #49 ibool
INFO  23:36:02,376 - #8 ;
INFO  23:36:02,376 - #49 int
INFO  23:36:02,377 - #49 niz2
INFO  23:36:02,377 - #8 ;
INFO  23:36:02,378 - #49 int
INFO  23:36:02,378 - #49 niz
INFO  23:36:02,378 - #10 [
INFO  23:36:02,378 - #11 ]
INFO  23:36:02,379 - #9 ,
INFO  23:36:02,379 - #49 niz_2
INFO  23:36:02,379 - #10 [
INFO  23:36:02,379 - #11 ]
INFO  23:36:02,379 - #9 ,
INFO  23:36:02,379 - #49 niz_3
INFO  23:36:02,379 - #10 [
INFO  23:36:02,380 - #11 ]
INFO  23:36:02,380 - #8 ;
INFO  23:36:02,380 - #49 int
INFO  23:36:02,380 - #49 a
INFO  23:36:02,380 - #8 ;
INFO  23:36:02,380 - #4 {
INFO  23:36:02,380 - #49 int
INFO  23:36:02,381 - #49 sum
INFO  23:36:02,381 - #20 (
INFO  23:36:02,381 - #49 int
INFO  23:36:02,382 - #49 z
INFO  23:36:02,382 - #9 ,
INFO  23:36:02,382 - #49 int
INFO  23:36:02,382 - #49 d
INFO  23:36:02,382 - #21 )
INFO  23:36:02,383 - #4 {
INFO  23:36:02,383 - #18 return
INFO  23:36:02,383 - #49 z
INFO  23:36:02,383 - #37 +
INFO  23:36:02,385 - #49 d
INFO  23:36:02,387 - #8 ;
INFO  23:36:02,387 - #5 }
INFO  23:36:02,388 - #49 int
INFO  23:36:02,389 - #49 inkrement
INFO  23:36:02,389 - #20 (
INFO  23:36:02,389 - #49 int
INFO  23:36:02,389 - #49 a
INFO  23:36:02,389 - #9 ,
INFO  23:36:02,389 - #49 int
INFO  23:36:02,389 - #49 inc
INFO  23:36:02,389 - #21 )
INFO  23:36:02,390 - #49 int
INFO  23:36:02,390 - #49 pom
INFO  23:36:02,390 - #8 ;
INFO  23:36:02,390 - #4 {
INFO  23:36:02,390 - #18 return
INFO  23:36:02,390 - #49 sum
INFO  23:36:02,390 - #20 (
INFO  23:36:02,390 - #49 a
INFO  23:36:02,390 - #9 ,
INFO  23:36:02,391 - #49 inc
INFO  23:36:02,391 - #21 )
INFO  23:36:02,391 - #8 ;
INFO  23:36:02,391 - #5 }
INFO  23:36:02,391 - #49 bool
INFO  23:36:02,391 - #49 verify
INFO  23:36:02,391 - #20 (
INFO  23:36:02,392 - #21 )
INFO  23:36:02,392 - #4 {
INFO  23:36:02,393 - #22 print
INFO  23:36:02,393 - #20 (
INFO  23:36:02,393 - #50 v
INFO  23:36:02,393 - #21 )
INFO  23:36:02,394 - #8 ;
INFO  23:36:02,394 - #18 return
INFO  23:36:02,394 - #51 false
INFO  23:36:02,394 - #8 ;
INFO  23:36:02,394 - #5 }
INFO  23:36:02,394 - #41 void
INFO  23:36:02,394 - #49 main
INFO  23:36:02,394 - #20 (
INFO  23:36:02,394 - #21 )
INFO  23:36:02,394 - #4 {
INFO  23:36:02,395 - #49 i
INFO  23:36:02,395 - #7 =
INFO  23:36:02,395 - #48 0
INFO  23:36:02,395 - #8 ;
INFO  23:36:02,396 - #23 for
INFO  23:36:02,396 - #20 (
INFO  23:36:02,397 - #49 i
INFO  23:36:02,397 - #7 =
INFO  23:36:02,397 - #48 0
INFO  23:36:02,397 - #8 ;
INFO  23:36:02,397 - #49 i
INFO  23:36:02,399 - #35 <
INFO  23:36:02,399 - #48 10
INFO  23:36:02,400 - #8 ;
INFO  23:36:02,401 - #21 )
INFO  23:36:02,403 - #4 {
INFO  23:36:02,404 - #49 i
INFO  23:36:02,404 - #24 ++
INFO  23:36:02,404 - #8 ;
INFO  23:36:02,405 - #22 print
INFO  23:36:02,405 - #20 (
INFO  23:36:02,405 - #49 i
INFO  23:36:02,405 - #21 )
INFO  23:36:02,405 - #8 ;
INFO  23:36:02,405 - #5 }
INFO  23:36:02,405 - #5 }
INFO  23:36:02,406 - #5 }
INFO  23:36:02,419 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDeclaration(
                ConstDeclarationList(
                  Type(
                   int
                  ) [Type]
                  ConstDeclarationsEnd(
                    ConstNum(
                     jedan
                     1
                    ) [ConstNum]
                  ) [ConstDeclarationsEnd]
                ) [ConstDeclarationList]
              ) [ConstDeclaration]
            ) [Declarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     i
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               bool
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                  VarName(
                   ibool
                  ) [VarName]
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 niz2
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
            VarDeclarations(
              VarArr(
                VarName(
                 niz_2
                ) [VarName]
              ) [VarArr]
              VarDeclarationsEnd(
                VarArr(
                  VarName(
                   niz_3
                  ) [VarName]
                ) [VarArr]
              ) [VarDeclarationsEnd]
            ) [VarDeclarations]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             a
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationList(
          NoMethodDeclaration(
          ) [NoMethodDeclaration]
          MethodDecl(
            MethodNameAnyType(
              Type(
               int
              ) [Type]
             sum
            ) [MethodNameAnyType]
            MethodParameters(
              FormParsList(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 z
                ) [FormParsVar]
                FormParsEnd(
                  FormParsVar(
                    Type(
                     int
                    ) [Type]
                   d
                  ) [FormParsVar]
                ) [FormParsEnd]
              ) [FormParsList]
            ) [MethodParameters]
            NoDeclarations(
            ) [NoDeclarations]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopList(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             z
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                    Plus(
                    ) [Plus]
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           d
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopList]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarationList]
        MethodDecl(
          MethodNameAnyType(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodNameAnyType]
          MethodParameters(
            FormParsList(
              FormParsVar(
                Type(
                 int
                ) [Type]
               a
              ) [FormParsVar]
              FormParsEnd(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 inc
                ) [FormParsVar]
              ) [FormParsEnd]
            ) [FormParsList]
          ) [MethodParameters]
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     pom
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          Statements(
            StatementReturnExpr(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorDesignatorActPars(
                        DesignatorIdent(
                         sum
                        ) [DesignatorIdent]
                        ActualParsList(
                          ActParsList(
                            ActParsEnd(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [ActParsEnd]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       inc
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [ActParsList]
                        ) [ActualParsList]
                      ) [FactorDesignatorActPars]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementReturnExpr]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarationList]
      MethodDecl(
        MethodNameAnyType(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodNameAnyType]
        NoMethodParameters(
        ) [NoMethodParameters]
        NoDeclarations(
        ) [NoDeclarations]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorChar(
                     v
                    ) [FactorChar]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementReturnExpr(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorBool(
                       false
                      ) [FactorBool]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementReturnExpr]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoDeclarations(
      ) [NoDeclarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               i
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementForCondFact(
            ForSt(
            ) [ForSt]
            DesignatorStatementOne(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   i
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           0
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [DesignatorStatementOne]
            LSemiFor(
            ) [LSemiFor]
            CondFactFor(
              CondFactRelop(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           i
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                Less(
                ) [Less]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         10
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [CondFactRelop]
            ) [CondFactFor]
            RSemiFor(
            ) [RSemiFor]
            DesignatorStatementListSecond(
              DesignatorStatementEnd(
              ) [DesignatorStatementEnd]
            ) [DesignatorStatementListSecond]
            RParenFor(
            ) [RParenFor]
            StatementStatementList(
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementIncrement(
                      DesignatorIdent(
                       i
                      ) [DesignatorIdent]
                    ) [DesignatorStatementIncrement]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               i
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  NoStatement(
                  ) [NoStatement]
                ) [Statements]
              ) [Statements]
            ) [StatementStatementList]
          ) [StatementForCondFact]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  23:36:02,421 - ===================================
INFO  23:36:02,421 - Pocetak programa test302.
INFO  23:36:02,421 - Deklarisana je konstanta jedan na liniji 5
INFO  23:36:02,421 - Deklarisana je promenljiva i na liniji 7
INFO  23:36:02,421 - Deklarisana je promenljiva ibool na liniji 8
INFO  23:36:02,422 - Deklarisana je promenljiva niz2 na liniji 10
INFO  23:36:02,422 - Deklarisana je promenljiva niz na liniji 12
INFO  23:36:02,422 - Deklarisana je promenljiva niz_2 na liniji 12
INFO  23:36:02,422 - Deklarisana je promenljiva niz_3 na liniji 12
INFO  23:36:02,422 - Deklarisana je promenljiva a na liniji 13
INFO  23:36:02,422 - Obradjuje se funkcija sum na liniji 18
INFO  23:36:02,423 - Deklarisan je parametar funkcije z na liniji 18
INFO  23:36:02,423 - Deklarisan je parametar funkcije d na liniji 18
INFO  23:36:02,423 - Dobra povratna vrednost funkcije na liniji 20
INFO  23:36:02,423 - Obradjuje se funkcija inkrement na liniji 23
INFO  23:36:02,423 - Deklarisan je parametar funkcije a na liniji 23
INFO  23:36:02,423 - Deklarisan je parametar funkcije inc na liniji 23
INFO  23:36:02,423 - Deklarisana je promenljiva pom na liniji 24
INFO  23:36:02,424 - Pronadjen poziv funkcije sum na liniji 28
INFO  23:36:02,424 - Dobra povratna vrednost funkcije na liniji 28
INFO  23:36:02,424 - Obradjuje se funkcija verify na liniji 31
INFO  23:36:02,424 - Obradjena funkcija PRINT na liniji 32
INFO  23:36:02,424 - Dobra povratna vrednost funkcije na liniji 33
INFO  23:36:02,424 - Obradjuje se funkcija main na liniji 36
INFO  23:36:02,425 - Designator i expr su odgovarajuceg tipa na liniji 41
INFO  23:36:02,425 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  23:36:02,425 - Obradjena funkcija PRINT na liniji 44
INFO  23:36:02,425 - ===================================
INFO  23:36:02,433 - Parsiranje uspesno zavrseno!
