INFO  12:44:32,975 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:44:33,030 - #2 program
INFO  12:44:33,031 - #49 test302
INFO  12:44:33,031 - #6 const
INFO  12:44:33,032 - #49 int
INFO  12:44:33,032 - #49 jedan
INFO  12:44:33,033 - #7 =
INFO  12:44:33,033 - #48 1
INFO  12:44:33,033 - #8 ;
INFO  12:44:33,033 - #49 int
INFO  12:44:33,034 - #49 mat
INFO  12:44:33,034 - #10 [
INFO  12:44:33,035 - #11 ]
INFO  12:44:33,035 - #10 [
INFO  12:44:33,036 - #11 ]
INFO  12:44:33,036 - #9 ,
INFO  12:44:33,036 - #49 mat1
INFO  12:44:33,036 - #10 [
INFO  12:44:33,036 - #11 ]
INFO  12:44:33,036 - #10 [
INFO  12:44:33,036 - #11 ]
INFO  12:44:33,036 - #8 ;
INFO  12:44:33,039 - #49 int
INFO  12:44:33,039 - #49 niz
INFO  12:44:33,039 - #10 [
INFO  12:44:33,039 - #11 ]
INFO  12:44:33,039 - #9 ,
INFO  12:44:33,039 - #49 niz1
INFO  12:44:33,039 - #10 [
INFO  12:44:33,040 - #11 ]
INFO  12:44:33,040 - #8 ;
INFO  12:44:33,040 - #49 int
INFO  12:44:33,040 - #49 a
INFO  12:44:33,040 - #8 ;
INFO  12:44:33,040 - #4 {
INFO  12:44:33,040 - #41 void
INFO  12:44:33,041 - #49 main
INFO  12:44:33,041 - #20 (
INFO  12:44:33,041 - #21 )
INFO  12:44:33,042 - #4 {
INFO  12:44:33,042 - #49 niz
INFO  12:44:33,042 - #10 [
INFO  12:44:33,043 - #48 0
INFO  12:44:33,043 - #11 ]
INFO  12:44:33,045 - #7 =
INFO  12:44:33,045 - #48 1
INFO  12:44:33,045 - #8 ;
INFO  12:44:33,046 - #14 if
INFO  12:44:33,046 - #20 (
INFO  12:44:33,046 - #49 niz
INFO  12:44:33,047 - #10 [
INFO  12:44:33,047 - #48 0
INFO  12:44:33,047 - #11 ]
INFO  12:44:33,047 - #31 ==
INFO  12:44:33,047 - #48 1
INFO  12:44:33,049 - #21 )
INFO  12:44:33,049 - #22 print
INFO  12:44:33,050 - #20 (
INFO  12:44:33,050 - #50 t
INFO  12:44:33,050 - #21 )
INFO  12:44:33,050 - #8 ;
INFO  12:44:33,050 - #15 else
INFO  12:44:33,051 - #22 print
INFO  12:44:33,051 - #20 (
INFO  12:44:33,051 - #49 mat
INFO  12:44:33,051 - #10 [
INFO  12:44:33,051 - #48 0
INFO  12:44:33,052 - #11 ]
INFO  12:44:33,052 - #10 [
INFO  12:44:33,052 - #48 0
INFO  12:44:33,052 - #11 ]
INFO  12:44:33,052 - #21 )
INFO  12:44:33,052 - #8 ;
INFO  12:44:33,052 - #5 }
INFO  12:44:33,053 - #5 }
INFO  12:44:33,062 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstNum(
                 jedan
                 1
                ) [ConstNum]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarMatrix(
                Arr(
                  VarName(
                   mat
                  ) [VarName]
                ) [Arr]
              ) [VarMatrix]
              VarDeclarationsEnd(
                VarMatrix(
                  Arr(
                    VarName(
                     mat1
                    ) [VarName]
                  ) [Arr]
                ) [VarMatrix]
              ) [VarDeclarationsEnd]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              Arr(
                VarName(
                 niz
                ) [VarName]
              ) [Arr]
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
                Arr(
                  VarName(
                   niz1
                  ) [VarName]
                ) [Arr]
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             a
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoDeclarations(
      ) [NoDeclarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorExpr(
                DesignatorName(
                 niz
                ) [DesignatorName]
                ArrayDecl(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           0
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [ArrayDecl]
              ) [DesignatorExpr]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       1
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementIfElse(
            LParenIf(
            ) [LParenIf]
            OneCondTerm(
              OneCondFact(
                CondFactRelop(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ArrayDecl(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         0
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [ArrayDecl]
                            ) [DesignatorExpr]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                  EqualTo(
                  ) [EqualTo]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [CondFactRelop]
              ) [OneCondFact]
            ) [OneCondTerm]
            RParenIf(
            ) [RParenIf]
            StatementPrint(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorChar(
                       t
                      ) [FactorChar]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementPrint]
            ElseSt(
            ) [ElseSt]
            StatementPrint(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorDesignator(
                        DesignatorExpr(
                          DesignatorName(
                           mat
                          ) [DesignatorName]
                          MatrixDecl(
                            ArrayDecl(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorNum(
                                       0
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [ArrayDecl]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorNum(
                                     0
                                    ) [FactorNum]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [MatrixDecl]
                        ) [DesignatorExpr]
                      ) [FactorDesignator]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementPrint]
          ) [StatementIfElse]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:44:33,062 - ===================================
INFO  12:44:33,062 - Pocetak programa test302.
INFO  12:44:33,063 - Deklarisana je konstanta jedan na liniji 5
INFO  12:44:33,063 - Deklarisana je promenljiva mat na liniji 7
INFO  12:44:33,063 - Deklarisana je promenljiva mat1 na liniji 7
INFO  12:44:33,063 - Deklarisana je promenljiva niz na liniji 8
INFO  12:44:33,063 - Deklarisana je promenljiva niz1 na liniji 8
INFO  12:44:33,063 - Deklarisana je promenljiva a na liniji 9
INFO  12:44:33,063 - Obradjuje se funkcija main na liniji 13
INFO  12:44:33,063 - Kreiran/promenjen element niza niz
INFO  12:44:33,064 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:44:33,064 - Kreiran/promenjen element niza niz
INFO  12:44:33,064 - Obradjena funkcija PRINT na liniji 19
INFO  12:44:33,064 - Kreiran/promenjen element matrice mat
INFO  12:44:33,064 - Obradjena funkcija PRINT na liniji 20
INFO  12:44:33,064 - ===================================
INFO  12:44:33,070 - Parsiranje uspesno zavrseno!
