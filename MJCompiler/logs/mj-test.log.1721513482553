INFO  00:02:13,194 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3023.mj
INFO  00:02:13,251 - #2 program
INFO  00:02:13,251 - #3 test_303
INFO  00:02:13,251 - #7 const
INFO  00:02:13,252 - #3 int
INFO  00:02:13,252 - #3 cinilac
INFO  00:02:13,253 - #8 =
INFO  00:02:13,253 - #42 4
INFO  00:02:13,253 - #10 ,
INFO  00:02:13,253 - #3 delilac
INFO  00:02:13,253 - #8 =
INFO  00:02:13,254 - #42 3
INFO  00:02:13,254 - #9 ;
INFO  00:02:13,254 - #47 class
INFO  00:02:13,255 - #3 Predmet
INFO  00:02:13,255 - #4 {
INFO  00:02:13,255 - #3 int
INFO  00:02:13,256 - #3 tezina
INFO  00:02:13,256 - #9 ;
INFO  00:02:13,257 - #3 char
INFO  00:02:13,257 - #3 vrsta
INFO  00:02:13,258 - #9 ;
INFO  00:02:13,258 - #4 {
INFO  00:02:13,258 - #45 void
INFO  00:02:13,259 - #3 postaviTezinu
INFO  00:02:13,259 - #21 (
INFO  00:02:13,259 - #3 int
INFO  00:02:13,259 - #3 tezina
INFO  00:02:13,259 - #22 )
INFO  00:02:13,260 - #4 {
INFO  00:02:13,260 - #3 this
INFO  00:02:13,260 - #31 .
INFO  00:02:13,260 - #3 tezina
INFO  00:02:13,260 - #8 =
INFO  00:02:13,262 - #3 tezina
INFO  00:02:13,263 - #9 ;
INFO  00:02:13,265 - #5 }
INFO  00:02:13,265 - #45 void
INFO  00:02:13,266 - #3 ucitajTezinu
INFO  00:02:13,266 - #21 (
INFO  00:02:13,266 - #22 )
INFO  00:02:13,267 - #4 {
INFO  00:02:13,267 - #20 read
INFO  00:02:13,267 - #21 (
INFO  00:02:13,267 - #3 tezina
INFO  00:02:13,267 - #22 )
INFO  00:02:13,267 - #9 ;
INFO  00:02:13,267 - #5 }
INFO  00:02:13,267 - #3 int
INFO  00:02:13,267 - #3 zapremina
INFO  00:02:13,268 - #21 (
INFO  00:02:13,268 - #22 )
INFO  00:02:13,268 - #4 {
INFO  00:02:13,268 - #19 return
INFO  00:02:13,268 - #42 0
INFO  00:02:13,268 - #9 ;
INFO  00:02:13,268 - #5 }
INFO  00:02:13,268 - #3 int
INFO  00:02:13,269 - #3 Q
INFO  00:02:13,269 - #21 (
INFO  00:02:13,269 - #22 )
INFO  00:02:13,269 - #4 {
INFO  00:02:13,269 - #19 return
INFO  00:02:13,269 - #3 zapremina
INFO  00:02:13,269 - #21 (
INFO  00:02:13,269 - #22 )
INFO  00:02:13,269 - #39 *
INFO  00:02:13,270 - #3 tezina
INFO  00:02:13,271 - #9 ;
INFO  00:02:13,271 - #5 }
INFO  00:02:13,271 - #45 void
INFO  00:02:13,271 - #3 postaviVrstu
INFO  00:02:13,271 - #21 (
INFO  00:02:13,272 - #3 char
INFO  00:02:13,272 - #3 vrsta
INFO  00:02:13,272 - #22 )
INFO  00:02:13,272 - #4 {
INFO  00:02:13,272 - #3 this
INFO  00:02:13,272 - #31 .
INFO  00:02:13,272 - #3 vrsta
INFO  00:02:13,272 - #8 =
INFO  00:02:13,272 - #3 vrsta
INFO  00:02:13,272 - #9 ;
INFO  00:02:13,272 - #5 }
INFO  00:02:13,272 - #3 char
INFO  00:02:13,273 - #3 dohvVrstu
INFO  00:02:13,273 - #21 (
INFO  00:02:13,273 - #22 )
INFO  00:02:13,273 - #4 {
INFO  00:02:13,273 - #19 return
INFO  00:02:13,273 - #3 vrsta
INFO  00:02:13,273 - #9 ;
INFO  00:02:13,273 - #5 }
INFO  00:02:13,273 - #3 int
INFO  00:02:13,273 - #3 dohvTezinu
INFO  00:02:13,273 - #21 (
INFO  00:02:13,273 - #22 )
INFO  00:02:13,273 - #4 {
INFO  00:02:13,274 - #19 return
INFO  00:02:13,274 - #3 tezina
INFO  00:02:13,274 - #9 ;
INFO  00:02:13,274 - #5 }
INFO  00:02:13,274 - #45 void
INFO  00:02:13,274 - #3 ispisi
INFO  00:02:13,274 - #21 (
INFO  00:02:13,274 - #22 )
INFO  00:02:13,274 - #4 {
INFO  00:02:13,274 - #23 print
INFO  00:02:13,274 - #21 (
INFO  00:02:13,274 - #3 vrsta
INFO  00:02:13,274 - #22 )
INFO  00:02:13,274 - #9 ;
INFO  00:02:13,275 - #23 print
INFO  00:02:13,275 - #21 (
INFO  00:02:13,275 - #3 Q
INFO  00:02:13,275 - #21 (
INFO  00:02:13,275 - #22 )
INFO  00:02:13,275 - #22 )
INFO  00:02:13,275 - #9 ;
INFO  00:02:13,275 - #5 }
INFO  00:02:13,275 - #5 }
INFO  00:02:13,275 - #5 }
INFO  00:02:13,275 - #47 class
INFO  00:02:13,276 - #3 Sfera
INFO  00:02:13,276 - #49 extends
INFO  00:02:13,276 - #3 Predmet
INFO  00:02:13,276 - #4 {
INFO  00:02:13,276 - #3 int
INFO  00:02:13,276 - #3 r
INFO  00:02:13,276 - #9 ;
INFO  00:02:13,276 - #4 {
INFO  00:02:13,276 - #45 void
INFO  00:02:13,276 - #3 postaviPoluprecnik
INFO  00:02:13,276 - #21 (
INFO  00:02:13,277 - #3 int
INFO  00:02:13,277 - #3 r
INFO  00:02:13,277 - #22 )
INFO  00:02:13,277 - #4 {
INFO  00:02:13,277 - #3 this
INFO  00:02:13,277 - #31 .
INFO  00:02:13,277 - #3 r
INFO  00:02:13,277 - #8 =
INFO  00:02:13,277 - #3 r
INFO  00:02:13,277 - #9 ;
INFO  00:02:13,277 - #5 }
INFO  00:02:13,277 - #3 int
INFO  00:02:13,277 - #3 zapremina
INFO  00:02:13,277 - #21 (
INFO  00:02:13,277 - #22 )
INFO  00:02:13,277 - #3 int
INFO  00:02:13,278 - #3 z
INFO  00:02:13,278 - #9 ;
INFO  00:02:13,278 - #4 {
INFO  00:02:13,278 - #3 z
INFO  00:02:13,278 - #8 =
INFO  00:02:13,278 - #3 cinilac
INFO  00:02:13,278 - #9 ;
INFO  00:02:13,278 - #19 return
INFO  00:02:13,278 - #3 z
INFO  00:02:13,278 - #39 *
INFO  00:02:13,278 - #21 (
INFO  00:02:13,278 - #3 r
INFO  00:02:13,278 - #40 /
INFO  00:02:13,278 - #3 delilac
INFO  00:02:13,279 - #22 )
INFO  00:02:13,279 - #9 ;
INFO  00:02:13,279 - #5 }
INFO  00:02:13,279 - #5 }
INFO  00:02:13,279 - #5 }
INFO  00:02:13,279 - #47 class
INFO  00:02:13,280 - #3 Kvadar
INFO  00:02:13,280 - #49 extends
INFO  00:02:13,280 - #3 Predmet
INFO  00:02:13,280 - #4 {
INFO  00:02:13,280 - #3 int
INFO  00:02:13,280 - #3 a
INFO  00:02:13,280 - #10 ,
INFO  00:02:13,280 - #3 b
INFO  00:02:13,280 - #10 ,
INFO  00:02:13,280 - #3 c
INFO  00:02:13,280 - #9 ;
INFO  00:02:13,280 - #4 {
INFO  00:02:13,280 - #45 void
INFO  00:02:13,280 - #3 postaviStranice
INFO  00:02:13,280 - #21 (
INFO  00:02:13,281 - #3 int
INFO  00:02:13,281 - #3 a
INFO  00:02:13,281 - #10 ,
INFO  00:02:13,281 - #3 int
INFO  00:02:13,281 - #3 b
INFO  00:02:13,281 - #10 ,
INFO  00:02:13,281 - #3 int
INFO  00:02:13,281 - #3 c
INFO  00:02:13,281 - #22 )
INFO  00:02:13,281 - #4 {
INFO  00:02:13,281 - #3 this
INFO  00:02:13,281 - #31 .
INFO  00:02:13,281 - #3 a
INFO  00:02:13,281 - #8 =
INFO  00:02:13,281 - #3 a
INFO  00:02:13,281 - #9 ;
INFO  00:02:13,281 - #3 this
INFO  00:02:13,282 - #31 .
INFO  00:02:13,282 - #3 b
INFO  00:02:13,282 - #8 =
INFO  00:02:13,282 - #3 b
INFO  00:02:13,282 - #9 ;
INFO  00:02:13,282 - #3 this
INFO  00:02:13,282 - #31 .
INFO  00:02:13,282 - #3 c
INFO  00:02:13,282 - #8 =
INFO  00:02:13,282 - #3 c
INFO  00:02:13,282 - #9 ;
INFO  00:02:13,282 - #5 }
INFO  00:02:13,282 - #3 int
INFO  00:02:13,283 - #3 zapremina
INFO  00:02:13,283 - #21 (
INFO  00:02:13,283 - #22 )
INFO  00:02:13,283 - #3 int
INFO  00:02:13,283 - #3 z
INFO  00:02:13,283 - #9 ;
INFO  00:02:13,283 - #4 {
INFO  00:02:13,283 - #3 z
INFO  00:02:13,283 - #8 =
INFO  00:02:13,283 - #3 a
INFO  00:02:13,283 - #39 *
INFO  00:02:13,283 - #3 b
INFO  00:02:13,283 - #39 *
INFO  00:02:13,283 - #3 c
INFO  00:02:13,283 - #9 ;
INFO  00:02:13,283 - #19 return
INFO  00:02:13,283 - #3 z
INFO  00:02:13,283 - #9 ;
INFO  00:02:13,283 - #5 }
INFO  00:02:13,283 - #5 }
INFO  00:02:13,284 - #5 }
INFO  00:02:13,284 - #47 class
INFO  00:02:13,284 - #3 ProstiBrojevi
INFO  00:02:13,284 - #4 {
INFO  00:02:13,284 - #13 static
INFO  00:02:13,284 - #3 int
INFO  00:02:13,284 - #3 prosti
INFO  00:02:13,284 - #11 [
INFO  00:02:13,284 - #12 ]
INFO  00:02:13,284 - #9 ;
INFO  00:02:13,284 - #13 static
INFO  00:02:13,284 - #3 int
INFO  00:02:13,284 - #3 X
INFO  00:02:13,284 - #10 ,
INFO  00:02:13,284 - #3 i
INFO  00:02:13,285 - #10 ,
INFO  00:02:13,285 - #3 j
INFO  00:02:13,285 - #9 ;
INFO  00:02:13,285 - #13 static
INFO  00:02:13,285 - #3 bool
INFO  00:02:13,285 - #3 flag
INFO  00:02:13,285 - #9 ;
INFO  00:02:13,285 - #13 static
INFO  00:02:13,285 - #4 {
INFO  00:02:13,285 - #23 print
INFO  00:02:13,285 - #21 (
INFO  00:02:13,285 - #43 s
INFO  00:02:13,285 - #22 )
INFO  00:02:13,286 - #9 ;
INFO  00:02:13,286 - #23 print
INFO  00:02:13,286 - #21 (
INFO  00:02:13,286 - #43 t
INFO  00:02:13,286 - #22 )
INFO  00:02:13,286 - #9 ;
INFO  00:02:13,286 - #23 print
INFO  00:02:13,286 - #21 (
INFO  00:02:13,286 - #43 a
INFO  00:02:13,286 - #22 )
INFO  00:02:13,286 - #9 ;
INFO  00:02:13,286 - #23 print
INFO  00:02:13,286 - #21 (
INFO  00:02:13,286 - #43 t
INFO  00:02:13,286 - #22 )
INFO  00:02:13,287 - #9 ;
INFO  00:02:13,287 - #23 print
INFO  00:02:13,287 - #21 (
INFO  00:02:13,287 - #43 i
INFO  00:02:13,287 - #22 )
INFO  00:02:13,287 - #9 ;
INFO  00:02:13,287 - #23 print
INFO  00:02:13,287 - #21 (
INFO  00:02:13,287 - #43 c
INFO  00:02:13,287 - #22 )
INFO  00:02:13,287 - #9 ;
INFO  00:02:13,287 - #23 print
INFO  00:02:13,287 - #21 (
INFO  00:02:13,287 - #3 eol
INFO  00:02:13,287 - #22 )
INFO  00:02:13,287 - #9 ;
INFO  00:02:13,287 - #3 prosti
INFO  00:02:13,287 - #8 =
INFO  00:02:13,288 - #30 new
INFO  00:02:13,288 - #3 int
INFO  00:02:13,288 - #11 [
INFO  00:02:13,288 - #42 10
INFO  00:02:13,288 - #12 ]
INFO  00:02:13,288 - #9 ;
INFO  00:02:13,288 - #24 for
INFO  00:02:13,288 - #21 (
INFO  00:02:13,288 - #3 X
INFO  00:02:13,288 - #8 =
INFO  00:02:13,288 - #42 0
INFO  00:02:13,288 - #10 ,
ERROR 00:02:13,288 - 
Sintaksna greska na liniji 66
ERROR 00:02:13,288 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 66
