INFO  00:22:22,315 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  00:22:22,373 - #2 program
INFO  00:22:22,373 - #49 test302
INFO  00:22:22,373 - #6 const
INFO  00:22:22,374 - #49 int
INFO  00:22:22,375 - #49 jedan
INFO  00:22:22,375 - #7 =
INFO  00:22:22,375 - #48 1
INFO  00:22:22,375 - #8 ;
INFO  00:22:22,376 - #49 int
INFO  00:22:22,376 - #49 i
INFO  00:22:22,376 - #8 ;
INFO  00:22:22,377 - #49 bool
INFO  00:22:22,377 - #49 ibool
INFO  00:22:22,377 - #8 ;
INFO  00:22:22,377 - #49 int
INFO  00:22:22,377 - #49 niz2
INFO  00:22:22,378 - #8 ;
INFO  00:22:22,378 - #49 int
INFO  00:22:22,378 - #49 niz
INFO  00:22:22,378 - #10 [
INFO  00:22:22,378 - #11 ]
INFO  00:22:22,380 - #9 ,
INFO  00:22:22,381 - #49 niz_2
INFO  00:22:22,381 - #10 [
INFO  00:22:22,381 - #11 ]
INFO  00:22:22,381 - #9 ,
INFO  00:22:22,381 - #49 niz_3
INFO  00:22:22,381 - #10 [
INFO  00:22:22,381 - #11 ]
INFO  00:22:22,381 - #8 ;
INFO  00:22:22,381 - #49 int
INFO  00:22:22,382 - #49 a
INFO  00:22:22,382 - #8 ;
INFO  00:22:22,382 - #4 {
INFO  00:22:22,382 - #49 int
INFO  00:22:22,382 - #49 sum
INFO  00:22:22,383 - #20 (
INFO  00:22:22,383 - #49 int
INFO  00:22:22,383 - #49 z
INFO  00:22:22,383 - #9 ,
INFO  00:22:22,383 - #49 int
INFO  00:22:22,383 - #49 d
INFO  00:22:22,383 - #21 )
INFO  00:22:22,384 - #4 {
INFO  00:22:22,384 - #18 return
INFO  00:22:22,384 - #49 z
INFO  00:22:22,384 - #37 +
INFO  00:22:22,385 - #49 d
INFO  00:22:22,387 - #8 ;
INFO  00:22:22,387 - #5 }
INFO  00:22:22,388 - #49 int
INFO  00:22:22,389 - #49 inkrement
INFO  00:22:22,389 - #20 (
INFO  00:22:22,389 - #49 int
INFO  00:22:22,389 - #49 a
INFO  00:22:22,389 - #9 ,
INFO  00:22:22,389 - #49 int
INFO  00:22:22,389 - #49 inc
INFO  00:22:22,389 - #21 )
INFO  00:22:22,389 - #49 int
INFO  00:22:22,389 - #49 pom
INFO  00:22:22,389 - #8 ;
INFO  00:22:22,390 - #4 {
INFO  00:22:22,390 - #14 if
INFO  00:22:22,390 - #20 (
INFO  00:22:22,390 - #49 inc
INFO  00:22:22,390 - #31 ==
INFO  00:22:22,391 - #49 jedan
INFO  00:22:22,392 - #21 )
INFO  00:22:22,392 - #49 pom
INFO  00:22:22,393 - #7 =
INFO  00:22:22,393 - #48 1
INFO  00:22:22,393 - #8 ;
INFO  00:22:22,394 - #15 else
INFO  00:22:22,394 - #14 if
INFO  00:22:22,395 - #20 (
INFO  00:22:22,395 - #49 inc
INFO  00:22:22,395 - #31 ==
INFO  00:22:22,395 - #48 2
INFO  00:22:22,395 - #21 )
INFO  00:22:22,395 - #49 pom
INFO  00:22:22,395 - #7 =
INFO  00:22:22,395 - #49 a
INFO  00:22:22,395 - #8 ;
INFO  00:22:22,395 - #18 return
INFO  00:22:22,396 - #49 sum
INFO  00:22:22,396 - #20 (
INFO  00:22:22,396 - #49 a
INFO  00:22:22,396 - #9 ,
INFO  00:22:22,396 - #49 pom
INFO  00:22:22,396 - #21 )
INFO  00:22:22,396 - #8 ;
INFO  00:22:22,396 - #5 }
INFO  00:22:22,397 - #49 bool
INFO  00:22:22,397 - #49 verify
INFO  00:22:22,397 - #20 (
INFO  00:22:22,397 - #21 )
INFO  00:22:22,398 - #4 {
INFO  00:22:22,398 - #22 print
INFO  00:22:22,398 - #20 (
INFO  00:22:22,398 - #50 v
INFO  00:22:22,398 - #21 )
INFO  00:22:22,398 - #8 ;
INFO  00:22:22,399 - #18 return
INFO  00:22:22,399 - #51 false
INFO  00:22:22,399 - #8 ;
INFO  00:22:22,399 - #5 }
INFO  00:22:22,399 - #41 void
INFO  00:22:22,399 - #49 main
INFO  00:22:22,399 - #20 (
INFO  00:22:22,399 - #21 )
INFO  00:22:22,400 - #4 {
INFO  00:22:22,400 - #14 if
INFO  00:22:22,400 - #20 (
INFO  00:22:22,400 - #48 1
INFO  00:22:22,400 - #32 !=
INFO  00:22:22,401 - #48 1
INFO  00:22:22,401 - #21 )
INFO  00:22:22,401 - #22 print
INFO  00:22:22,401 - #20 (
INFO  00:22:22,402 - #28 -
INFO  00:22:22,402 - #48 6
INFO  00:22:22,402 - #21 )
INFO  00:22:22,402 - #8 ;
INFO  00:22:22,402 - #15 else
INFO  00:22:22,402 - #22 print
INFO  00:22:22,402 - #20 (
INFO  00:22:22,402 - #48 0
INFO  00:22:22,402 - #21 )
INFO  00:22:22,402 - #8 ;
INFO  00:22:22,402 - #49 ibool
INFO  00:22:22,402 - #7 =
INFO  00:22:22,403 - #51 false
INFO  00:22:22,403 - #8 ;
INFO  00:22:22,403 - #49 i
INFO  00:22:22,403 - #7 =
INFO  00:22:22,403 - #48 0
INFO  00:22:22,403 - #8 ;
INFO  00:22:22,403 - #23 for
INFO  00:22:22,403 - #20 (
INFO  00:22:22,404 - #49 i
INFO  00:22:22,404 - #7 =
INFO  00:22:22,404 - #48 0
INFO  00:22:22,404 - #8 ;
INFO  00:22:22,404 - #49 i
INFO  00:22:22,405 - #35 <
INFO  00:22:22,406 - #48 10
INFO  00:22:22,406 - #8 ;
INFO  00:22:22,408 - #49 i
INFO  00:22:22,408 - #24 ++
INFO  00:22:22,408 - #21 )
INFO  00:22:22,409 - #4 {
INFO  00:22:22,410 - #14 if
INFO  00:22:22,410 - #20 (
INFO  00:22:22,410 - #49 i
INFO  00:22:22,410 - #31 ==
INFO  00:22:22,410 - #48 2
INFO  00:22:22,410 - #21 )
INFO  00:22:22,410 - #49 ibool
INFO  00:22:22,410 - #7 =
INFO  00:22:22,410 - #51 true
INFO  00:22:22,410 - #8 ;
INFO  00:22:22,410 - #49 i
INFO  00:22:22,410 - #24 ++
INFO  00:22:22,410 - #8 ;
INFO  00:22:22,410 - #5 }
INFO  00:22:22,410 - #14 if
INFO  00:22:22,411 - #20 (
INFO  00:22:22,411 - #49 ibool
INFO  00:22:22,411 - #21 )
INFO  00:22:22,411 - #14 if
INFO  00:22:22,411 - #20 (
INFO  00:22:22,411 - #49 i
INFO  00:22:22,411 - #31 ==
INFO  00:22:22,411 - #48 5
INFO  00:22:22,411 - #21 )
INFO  00:22:22,411 - #22 print
INFO  00:22:22,411 - #20 (
INFO  00:22:22,411 - #48 1
INFO  00:22:22,411 - #21 )
INFO  00:22:22,411 - #8 ;
INFO  00:22:22,411 - #15 else
INFO  00:22:22,411 - #22 print
INFO  00:22:22,411 - #20 (
INFO  00:22:22,412 - #28 -
INFO  00:22:22,412 - #48 1
INFO  00:22:22,412 - #21 )
INFO  00:22:22,412 - #8 ;
INFO  00:22:22,412 - #49 a
INFO  00:22:22,412 - #7 =
INFO  00:22:22,412 - #48 2
INFO  00:22:22,412 - #8 ;
INFO  00:22:22,412 - #49 niz
INFO  00:22:22,412 - #7 =
INFO  00:22:22,412 - #29 new
INFO  00:22:22,412 - #49 int
INFO  00:22:22,412 - #10 [
INFO  00:22:22,412 - #48 3
INFO  00:22:22,412 - #11 ]
INFO  00:22:22,412 - #8 ;
INFO  00:22:22,413 - #49 niz
INFO  00:22:22,413 - #10 [
INFO  00:22:22,413 - #48 0
INFO  00:22:22,414 - #11 ]
INFO  00:22:22,414 - #7 =
INFO  00:22:22,414 - #48 1
INFO  00:22:22,414 - #38 *
INFO  00:22:22,414 - #49 a
INFO  00:22:22,415 - #8 ;
INFO  00:22:22,415 - #49 niz
INFO  00:22:22,415 - #10 [
INFO  00:22:22,415 - #48 1
INFO  00:22:22,415 - #11 ]
INFO  00:22:22,416 - #7 =
INFO  00:22:22,416 - #48 2
INFO  00:22:22,416 - #38 *
INFO  00:22:22,416 - #49 a
INFO  00:22:22,416 - #8 ;
INFO  00:22:22,416 - #49 niz
INFO  00:22:22,416 - #10 [
INFO  00:22:22,416 - #48 2
INFO  00:22:22,416 - #11 ]
INFO  00:22:22,416 - #7 =
INFO  00:22:22,416 - #49 sum
INFO  00:22:22,416 - #20 (
INFO  00:22:22,416 - #49 niz
INFO  00:22:22,416 - #10 [
INFO  00:22:22,416 - #48 1
INFO  00:22:22,416 - #11 ]
INFO  00:22:22,416 - #9 ,
INFO  00:22:22,416 - #49 niz
INFO  00:22:22,416 - #10 [
INFO  00:22:22,416 - #48 0
INFO  00:22:22,416 - #11 ]
INFO  00:22:22,416 - #21 )
INFO  00:22:22,416 - #38 *
INFO  00:22:22,417 - #49 a
INFO  00:22:22,417 - #37 +
INFO  00:22:22,417 - #48 1
INFO  00:22:22,417 - #8 ;
INFO  00:22:22,417 - #22 print
INFO  00:22:22,417 - #20 (
INFO  00:22:22,417 - #49 niz
INFO  00:22:22,417 - #10 [
INFO  00:22:22,417 - #48 0
INFO  00:22:22,417 - #11 ]
INFO  00:22:22,417 - #21 )
INFO  00:22:22,417 - #8 ;
INFO  00:22:22,417 - #22 print
INFO  00:22:22,417 - #20 (
INFO  00:22:22,417 - #49 niz
INFO  00:22:22,417 - #10 [
INFO  00:22:22,417 - #48 1
INFO  00:22:22,417 - #11 ]
INFO  00:22:22,417 - #21 )
INFO  00:22:22,417 - #8 ;
INFO  00:22:22,417 - #22 print
INFO  00:22:22,418 - #20 (
INFO  00:22:22,418 - #49 niz
INFO  00:22:22,418 - #10 [
INFO  00:22:22,418 - #48 2
INFO  00:22:22,418 - #11 ]
INFO  00:22:22,418 - #21 )
INFO  00:22:22,418 - #8 ;
INFO  00:22:22,418 - #14 if
INFO  00:22:22,418 - #20 (
INFO  00:22:22,418 - #49 verify
INFO  00:22:22,419 - #20 (
INFO  00:22:22,419 - #21 )
INFO  00:22:22,420 - #27 ||
INFO  00:22:22,420 - #49 niz
INFO  00:22:22,422 - #10 [
INFO  00:22:22,422 - #48 2
INFO  00:22:22,422 - #11 ]
INFO  00:22:22,422 - #31 ==
INFO  00:22:22,422 - #48 4
INFO  00:22:22,422 - #21 )
INFO  00:22:22,422 - #22 print
INFO  00:22:22,422 - #20 (
INFO  00:22:22,422 - #49 ord
INFO  00:22:22,422 - #20 (
INFO  00:22:22,422 - #50 A
INFO  00:22:22,422 - #21 )
INFO  00:22:22,422 - #21 )
INFO  00:22:22,423 - #8 ;
INFO  00:22:22,423 - #15 else
INFO  00:22:22,423 - #22 print
INFO  00:22:22,423 - #20 (
INFO  00:22:22,423 - #49 ord
INFO  00:22:22,423 - #20 (
INFO  00:22:22,423 - #50 a
INFO  00:22:22,423 - #21 )
INFO  00:22:22,423 - #21 )
INFO  00:22:22,423 - #8 ;
INFO  00:22:22,423 - #49 i
INFO  00:22:22,423 - #7 =
INFO  00:22:22,423 - #48 0
INFO  00:22:22,423 - #8 ;
INFO  00:22:22,423 - #23 for
INFO  00:22:22,423 - #20 (
INFO  00:22:22,423 - #49 i
INFO  00:22:22,423 - #7 =
INFO  00:22:22,423 - #48 0
INFO  00:22:22,423 - #8 ;
INFO  00:22:22,423 - #49 i
INFO  00:22:22,423 - #35 <
INFO  00:22:22,423 - #48 10
INFO  00:22:22,424 - #8 ;
INFO  00:22:22,424 - #21 )
INFO  00:22:22,424 - #4 {
INFO  00:22:22,424 - #14 if
INFO  00:22:22,424 - #20 (
INFO  00:22:22,424 - #49 i
INFO  00:22:22,425 - #31 ==
INFO  00:22:22,425 - #48 3
INFO  00:22:22,425 - #21 )
INFO  00:22:22,425 - #4 {
INFO  00:22:22,425 - #49 i
INFO  00:22:22,425 - #24 ++
INFO  00:22:22,425 - #8 ;
INFO  00:22:22,425 - #17 continue
INFO  00:22:22,425 - #8 ;
INFO  00:22:22,425 - #5 }
INFO  00:22:22,426 - #14 if
INFO  00:22:22,426 - #20 (
INFO  00:22:22,426 - #49 i
INFO  00:22:22,426 - #31 ==
INFO  00:22:22,426 - #48 4
INFO  00:22:22,426 - #21 )
INFO  00:22:22,427 - #16 break
INFO  00:22:22,427 - #8 ;
INFO  00:22:22,427 - #49 i
INFO  00:22:22,427 - #7 =
INFO  00:22:22,428 - #49 inkrement
INFO  00:22:22,428 - #20 (
INFO  00:22:22,428 - #49 i
INFO  00:22:22,428 - #9 ,
INFO  00:22:22,428 - #48 1
INFO  00:22:22,428 - #21 )
INFO  00:22:22,428 - #8 ;
INFO  00:22:22,428 - #5 }
INFO  00:22:22,428 - #14 if
INFO  00:22:22,428 - #20 (
INFO  00:22:22,428 - #49 i
INFO  00:22:22,428 - #31 ==
INFO  00:22:22,428 - #48 3
INFO  00:22:22,428 - #26 &&
INFO  00:22:22,428 - #49 verify
INFO  00:22:22,429 - #20 (
INFO  00:22:22,429 - #21 )
INFO  00:22:22,429 - #21 )
INFO  00:22:22,429 - #22 print
INFO  00:22:22,429 - #20 (
INFO  00:22:22,429 - #28 -
INFO  00:22:22,429 - #48 4
INFO  00:22:22,429 - #21 )
INFO  00:22:22,429 - #8 ;
INFO  00:22:22,429 - #15 else
INFO  00:22:22,429 - #22 print
INFO  00:22:22,429 - #20 (
INFO  00:22:22,429 - #48 4
INFO  00:22:22,429 - #21 )
INFO  00:22:22,429 - #8 ;
INFO  00:22:22,429 - #19 read
INFO  00:22:22,429 - #20 (
INFO  00:22:22,429 - #49 niz
INFO  00:22:22,429 - #10 [
INFO  00:22:22,429 - #48 0
INFO  00:22:22,429 - #11 ]
INFO  00:22:22,429 - #21 )
INFO  00:22:22,429 - #8 ;
INFO  00:22:22,429 - #19 read
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 niz
INFO  00:22:22,430 - #10 [
INFO  00:22:22,430 - #48 1
INFO  00:22:22,430 - #11 ]
INFO  00:22:22,430 - #21 )
INFO  00:22:22,430 - #8 ;
INFO  00:22:22,430 - #19 read
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 niz
INFO  00:22:22,430 - #10 [
INFO  00:22:22,430 - #48 2
INFO  00:22:22,430 - #11 ]
INFO  00:22:22,430 - #21 )
INFO  00:22:22,430 - #8 ;
INFO  00:22:22,430 - #22 print
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 eol
INFO  00:22:22,430 - #21 )
INFO  00:22:22,430 - #8 ;
INFO  00:22:22,430 - #22 print
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 sum
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 sum
INFO  00:22:22,430 - #20 (
INFO  00:22:22,430 - #49 niz
INFO  00:22:22,430 - #10 [
INFO  00:22:22,430 - #48 0
INFO  00:22:22,430 - #11 ]
INFO  00:22:22,431 - #9 ,
INFO  00:22:22,431 - #49 niz
INFO  00:22:22,431 - #10 [
INFO  00:22:22,431 - #48 1
INFO  00:22:22,431 - #11 ]
INFO  00:22:22,431 - #21 )
INFO  00:22:22,431 - #9 ,
INFO  00:22:22,431 - #49 niz
INFO  00:22:22,431 - #10 [
INFO  00:22:22,431 - #48 2
INFO  00:22:22,431 - #11 ]
INFO  00:22:22,431 - #21 )
INFO  00:22:22,431 - #21 )
INFO  00:22:22,431 - #8 ;
INFO  00:22:22,431 - #22 print
INFO  00:22:22,431 - #20 (
INFO  00:22:22,431 - #49 eol
INFO  00:22:22,431 - #21 )
INFO  00:22:22,431 - #8 ;
INFO  00:22:22,431 - #22 print
INFO  00:22:22,431 - #20 (
INFO  00:22:22,431 - #49 inkrement
INFO  00:22:22,431 - #20 (
INFO  00:22:22,431 - #49 niz
INFO  00:22:22,431 - #10 [
INFO  00:22:22,431 - #48 2
INFO  00:22:22,431 - #11 ]
INFO  00:22:22,432 - #9 ,
INFO  00:22:22,432 - #48 2
INFO  00:22:22,432 - #21 )
INFO  00:22:22,432 - #21 )
INFO  00:22:22,432 - #8 ;
INFO  00:22:22,432 - #49 a
INFO  00:22:22,432 - #7 =
INFO  00:22:22,432 - #48 3
INFO  00:22:22,432 - #8 ;
INFO  00:22:22,432 - #23 for
INFO  00:22:22,432 - #20 (
INFO  00:22:22,432 - #49 i
INFO  00:22:22,432 - #7 =
INFO  00:22:22,432 - #48 0
INFO  00:22:22,432 - #8 ;
INFO  00:22:22,432 - #49 i
INFO  00:22:22,432 - #35 <
INFO  00:22:22,432 - #48 3
INFO  00:22:22,432 - #8 ;
INFO  00:22:22,432 - #49 i
INFO  00:22:22,432 - #24 ++
INFO  00:22:22,432 - #21 )
INFO  00:22:22,432 - #4 {
INFO  00:22:22,432 - #49 niz
INFO  00:22:22,432 - #10 [
INFO  00:22:22,432 - #49 i
INFO  00:22:22,432 - #11 ]
INFO  00:22:22,432 - #7 =
INFO  00:22:22,432 - #49 niz
INFO  00:22:22,432 - #10 [
INFO  00:22:22,433 - #49 i
INFO  00:22:22,433 - #11 ]
INFO  00:22:22,433 - #38 *
INFO  00:22:22,433 - #48 2
INFO  00:22:22,433 - #38 *
INFO  00:22:22,433 - #49 a
INFO  00:22:22,433 - #8 ;
INFO  00:22:22,433 - #22 print
INFO  00:22:22,433 - #20 (
INFO  00:22:22,433 - #49 niz
INFO  00:22:22,433 - #10 [
INFO  00:22:22,433 - #49 i
INFO  00:22:22,433 - #11 ]
INFO  00:22:22,433 - #21 )
INFO  00:22:22,433 - #8 ;
INFO  00:22:22,433 - #5 }
INFO  00:22:22,433 - #5 }
INFO  00:22:22,433 - #5 }
INFO  00:22:22,452 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDeclaration(
                ConstDeclarationList(
                  Type(
                   int
                  ) [Type]
                  ConstDeclarationsEnd(
                    ConstNum(
                     jedan
                     1
                    ) [ConstNum]
                  ) [ConstDeclarationsEnd]
                ) [ConstDeclarationList]
              ) [ConstDeclaration]
            ) [Declarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     i
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               bool
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                  VarName(
                   ibool
                  ) [VarName]
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 niz2
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
              VarName(
               niz
              ) [VarName]
            ) [VarArr]
            VarDeclarations(
              VarArr(
                VarName(
                 niz_2
                ) [VarName]
              ) [VarArr]
              VarDeclarationsEnd(
                VarArr(
                  VarName(
                   niz_3
                  ) [VarName]
                ) [VarArr]
              ) [VarDeclarationsEnd]
            ) [VarDeclarations]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             a
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationList(
          NoMethodDeclaration(
          ) [NoMethodDeclaration]
          MethodDecl(
            MethodNameAnyType(
              Type(
               int
              ) [Type]
             sum
            ) [MethodNameAnyType]
            MethodParameters(
              FormParsList(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 z
                ) [FormParsVar]
                FormParsEnd(
                  FormParsVar(
                    Type(
                     int
                    ) [Type]
                   d
                  ) [FormParsVar]
                ) [FormParsEnd]
              ) [FormParsList]
            ) [MethodParameters]
            NoDeclarations(
            ) [NoDeclarations]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopList(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             z
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                    Plus(
                    ) [Plus]
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           d
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopList]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarationList]
        MethodDecl(
          MethodNameAnyType(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodNameAnyType]
          MethodParameters(
            FormParsList(
              FormParsVar(
                Type(
                 int
                ) [Type]
               a
              ) [FormParsVar]
              FormParsEnd(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 inc
                ) [FormParsVar]
              ) [FormParsEnd]
            ) [FormParsList]
          ) [MethodParameters]
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     pom
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          Statements(
            StatementIfElse(
              LParenIf(
              ) [LParenIf]
              OneCondTerm(
                OneCondFact(
                  CondFactRelop(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               inc
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                    EqualTo(
                    ) [EqualTo]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               jedan
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [CondFactRelop]
                ) [OneCondFact]
              ) [OneCondTerm]
              RParenIf(
              ) [RParenIf]
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     pom
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              ElseSt(
              ) [ElseSt]
              StatementIf(
                LParenIf(
                ) [LParenIf]
                OneCondTerm(
                  OneCondFact(
                    CondFactRelop(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 inc
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                      EqualTo(
                      ) [EqualTo]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               2
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [CondFactRelop]
                  ) [OneCondFact]
                ) [OneCondTerm]
                RParenIf(
                ) [RParenIf]
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementAssignop(
                      DesignatorIdent(
                       pom
                      ) [DesignatorIdent]
                      Assignop(
                      ) [Assignop]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 a
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
              ) [StatementIf]
            ) [StatementIfElse]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignatorActPars(
                          DesignatorIdent(
                           sum
                          ) [DesignatorIdent]
                          ActualParsList(
                            ActParsList(
                              ActParsEnd(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorDesignator(
                                          DesignatorIdent(
                                           a
                                          ) [DesignatorIdent]
                                        ) [FactorDesignator]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [ActParsEnd]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         pom
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [ActParsList]
                          ) [ActualParsList]
                        ) [FactorDesignatorActPars]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarationList]
      MethodDecl(
        MethodNameAnyType(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodNameAnyType]
        NoMethodParameters(
        ) [NoMethodParameters]
        NoDeclarations(
        ) [NoDeclarations]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorChar(
                     v
                    ) [FactorChar]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementReturnExpr(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorBool(
                       false
                      ) [FactorBool]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementReturnExpr]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoDeclarations(
      ) [NoDeclarations]
      Statements(
        StatementIfElse(
          LParenIf(
          ) [LParenIf]
          OneCondTerm(
            OneCondFact(
              CondFactRelop(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         1
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                NotEqualTo(
                ) [NotEqualTo]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         1
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [CondFactRelop]
            ) [OneCondFact]
          ) [OneCondTerm]
          RParenIf(
          ) [RParenIf]
          StatementPrint(
            ExprNegativ(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     6
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprNegativ]
          ) [StatementPrint]
          ElseSt(
          ) [ElseSt]
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     0
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
        ) [StatementIfElse]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 ibool
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorBool(
                         false
                        ) [FactorBool]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   i
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           0
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementForCondFact(
                ForSt(
                ) [ForSt]
                DesignatorStatementOne(
                  DesignatorStatementMatched(
                    DesignatorStatementAssignop(
                      DesignatorIdent(
                       i
                      ) [DesignatorIdent]
                      Assignop(
                      ) [Assignop]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               0
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementMatched]
                ) [DesignatorStatementOne]
                LSemiFor(
                ) [LSemiFor]
                CondFactFor(
                  CondFactRelop(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               i
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                    Less(
                    ) [Less]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             10
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [CondFactRelop]
                ) [CondFactFor]
                RSemiFor(
                ) [RSemiFor]
                DesignatorStatementListSecond(
                  DesignatorStatementOne(
                    DesignatorStatementMatched(
                      DesignatorStatementIncrement(
                        DesignatorIdent(
                         i
                        ) [DesignatorIdent]
                      ) [DesignatorStatementIncrement]
                    ) [DesignatorStatementMatched]
                  ) [DesignatorStatementOne]
                ) [DesignatorStatementListSecond]
                RParenFor(
                ) [RParenFor]
                StatementStatementList(
                  Statements(
                    StatementIf(
                      LParenIf(
                      ) [LParenIf]
                      OneCondTerm(
                        OneCondFact(
                          CondFactRelop(
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       i
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                            EqualTo(
                            ) [EqualTo]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [CondFactRelop]
                        ) [OneCondFact]
                      ) [OneCondTerm]
                      RParenIf(
                      ) [RParenIf]
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorIdent(
                             ibool
                            ) [DesignatorIdent]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                    ) [StatementIf]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementIncrement(
                            DesignatorIdent(
                             i
                            ) [DesignatorIdent]
                          ) [DesignatorStatementIncrement]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      NoStatement(
                      ) [NoStatement]
                    ) [Statements]
                  ) [Statements]
                ) [StatementStatementList]
              ) [StatementForCondFact]
              Statements(
                StatementIf(
                  LParenIf(
                  ) [LParenIf]
                  OneCondTerm(
                    OneCondFact(
                      CondFactExpr(
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorDesignator(
                                  DesignatorIdent(
                                   ibool
                                  ) [DesignatorIdent]
                                ) [FactorDesignator]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [CondFactExpr]
                    ) [OneCondFact]
                  ) [OneCondTerm]
                  RParenIf(
                  ) [RParenIf]
                  StatementIfElse(
                    LParenIf(
                    ) [LParenIf]
                    OneCondTerm(
                      OneCondFact(
                        CondFactRelop(
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     i
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                          EqualTo(
                          ) [EqualTo]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorNum(
                                   5
                                  ) [FactorNum]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [CondFactRelop]
                      ) [OneCondFact]
                    ) [OneCondTerm]
                    RParenIf(
                    ) [RParenIf]
                    StatementPrint(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               1
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [StatementPrint]
                    ElseSt(
                    ) [ElseSt]
                    StatementPrint(
                      ExprNegativ(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               1
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprNegativ]
                    ) [StatementPrint]
                  ) [StatementIfElse]
                ) [StatementIf]
                Statements(
                  StatementDesignator(
                    DesignatorStatementMatched(
                      DesignatorStatementAssignop(
                        DesignatorIdent(
                         a
                        ) [DesignatorIdent]
                        Assignop(
                        ) [Assignop]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorNum(
                                 2
                                ) [FactorNum]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementMatched]
                  ) [StatementDesignator]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           niz
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorNew(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprPositive(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorNum(
                                             3
                                            ) [FactorNum]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprPositive]
                                  ) [FactorNew]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorNum(
                                       0
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopList(
                                    MulopEnd(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                    Star(
                                    ) [Star]
                                    FactorDesignator(
                                      DesignatorIdent(
                                       a
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [MulopList]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         1
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopList(
                                      MulopEnd(
                                        FactorNum(
                                         2
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                      Star(
                                      ) [Star]
                                      FactorDesignator(
                                        DesignatorIdent(
                                         a
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopList]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementDesignator(
                            DesignatorStatementMatched(
                              DesignatorStatementAssignop(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorNum(
                                           2
                                          ) [FactorNum]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                                Assignop(
                                ) [Assignop]
                                ExprPositive(
                                  AddopList(
                                    AddopEnd(
                                      Term(
                                        MulopList(
                                          MulopEnd(
                                            FactorDesignatorActPars(
                                              DesignatorIdent(
                                               sum
                                              ) [DesignatorIdent]
                                              ActualParsList(
                                                ActParsList(
                                                  ActParsEnd(
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorDesignator(
                                                              DesignatorExpr(
                                                                DesignatorName(
                                                                 niz
                                                                ) [DesignatorName]
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorNum(
                                                                         1
                                                                        ) [FactorNum]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                              ) [DesignatorExpr]
                                                            ) [FactorDesignator]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [ActParsEnd]
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorDesignator(
                                                            DesignatorExpr(
                                                              DesignatorName(
                                                               niz
                                                              ) [DesignatorName]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorNum(
                                                                       0
                                                                      ) [FactorNum]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [DesignatorExpr]
                                                          ) [FactorDesignator]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [ActParsList]
                                              ) [ActualParsList]
                                            ) [FactorDesignatorActPars]
                                          ) [MulopEnd]
                                          Star(
                                          ) [Star]
                                          FactorDesignator(
                                            DesignatorIdent(
                                             a
                                            ) [DesignatorIdent]
                                          ) [FactorDesignator]
                                        ) [MulopList]
                                      ) [Term]
                                    ) [AddopEnd]
                                    Plus(
                                    ) [Plus]
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         1
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopList]
                                ) [ExprPositive]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementMatched]
                          ) [StatementDesignator]
                          Statements(
                            StatementPrint(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [StatementPrint]
                            Statements(
                              StatementPrint(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorNum(
                                                     1
                                                    ) [FactorNum]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [StatementPrint]
                              Statements(
                                StatementPrint(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       2
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [StatementPrint]
                                Statements(
                                  StatementIfElse(
                                    LParenIf(
                                    ) [LParenIf]
                                    Conditions(
                                      OneCondTerm(
                                        OneCondFact(
                                          CondFactExpr(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorDesignatorActPars(
                                                      DesignatorIdent(
                                                       verify
                                                      ) [DesignatorIdent]
                                                      NoActPars(
                                                      ) [NoActPars]
                                                    ) [FactorDesignatorActPars]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [CondFactExpr]
                                        ) [OneCondFact]
                                      ) [OneCondTerm]
                                      OrCond(
                                      ) [OrCond]
                                      OneCondFact(
                                        CondFactRelop(
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorDesignator(
                                                    DesignatorExpr(
                                                      DesignatorName(
                                                       niz
                                                      ) [DesignatorName]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorNum(
                                                               2
                                                              ) [FactorNum]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorExpr]
                                                  ) [FactorDesignator]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                          EqualTo(
                                          ) [EqualTo]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorNum(
                                                   4
                                                  ) [FactorNum]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [CondFactRelop]
                                      ) [OneCondFact]
                                    ) [Conditions]
                                    RParenIf(
                                    ) [RParenIf]
                                    StatementPrint(
                                      ExprPositive(
                                        AddopEnd(
                                          Term(
                                            MulopEnd(
                                              FactorDesignatorActPars(
                                                DesignatorIdent(
                                                 ord
                                                ) [DesignatorIdent]
                                                ActualParsList(
                                                  ActParsEnd(
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorChar(
                                                             A
                                                            ) [FactorChar]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [ActParsEnd]
                                                ) [ActualParsList]
                                              ) [FactorDesignatorActPars]
                                            ) [MulopEnd]
                                          ) [Term]
                                        ) [AddopEnd]
                                      ) [ExprPositive]
                                    ) [StatementPrint]
                                    ElseSt(
                                    ) [ElseSt]
                                    StatementPrint(
                                      ExprPositive(
                                        AddopEnd(
                                          Term(
                                            MulopEnd(
                                              FactorDesignatorActPars(
                                                DesignatorIdent(
                                                 ord
                                                ) [DesignatorIdent]
                                                ActualParsList(
                                                  ActParsEnd(
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorChar(
                                                             a
                                                            ) [FactorChar]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [ActParsEnd]
                                                ) [ActualParsList]
                                              ) [FactorDesignatorActPars]
                                            ) [MulopEnd]
                                          ) [Term]
                                        ) [AddopEnd]
                                      ) [ExprPositive]
                                    ) [StatementPrint]
                                  ) [StatementIfElse]
                                  Statements(
                                    StatementDesignator(
                                      DesignatorStatementMatched(
                                        DesignatorStatementAssignop(
                                          DesignatorIdent(
                                           i
                                          ) [DesignatorIdent]
                                          Assignop(
                                          ) [Assignop]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorStatementAssignop]
                                      ) [DesignatorStatementMatched]
                                    ) [StatementDesignator]
                                    Statements(
                                      StatementForCondFact(
                                        ForSt(
                                        ) [ForSt]
                                        DesignatorStatementOne(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorIdent(
                                               i
                                              ) [DesignatorIdent]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       0
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [DesignatorStatementOne]
                                        LSemiFor(
                                        ) [LSemiFor]
                                        CondFactFor(
                                          CondFactRelop(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       i
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                            Less(
                                            ) [Less]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorNum(
                                                     10
                                                    ) [FactorNum]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [CondFactRelop]
                                        ) [CondFactFor]
                                        RSemiFor(
                                        ) [RSemiFor]
                                        DesignatorStatementListSecond(
                                          DesignatorStatementEnd(
                                          ) [DesignatorStatementEnd]
                                        ) [DesignatorStatementListSecond]
                                        RParenFor(
                                        ) [RParenFor]
                                        StatementStatementList(
                                          Statements(
                                            StatementIf(
                                              LParenIf(
                                              ) [LParenIf]
                                              OneCondTerm(
                                                OneCondFact(
                                                  CondFactRelop(
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorDesignator(
                                                              DesignatorIdent(
                                                               i
                                                              ) [DesignatorIdent]
                                                            ) [FactorDesignator]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                    EqualTo(
                                                    ) [EqualTo]
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorNum(
                                                             3
                                                            ) [FactorNum]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [CondFactRelop]
                                                ) [OneCondFact]
                                              ) [OneCondTerm]
                                              RParenIf(
                                              ) [RParenIf]
                                              StatementStatementList(
                                                Statements(
                                                  StatementDesignator(
                                                    DesignatorStatementMatched(
                                                      DesignatorStatementIncrement(
                                                        DesignatorIdent(
                                                         i
                                                        ) [DesignatorIdent]
                                                      ) [DesignatorStatementIncrement]
                                                    ) [DesignatorStatementMatched]
                                                  ) [StatementDesignator]
                                                  Statements(
                                                    StatementContinue(
                                                    ) [StatementContinue]
                                                    NoStatement(
                                                    ) [NoStatement]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [StatementStatementList]
                                            ) [StatementIf]
                                            Statements(
                                              StatementIf(
                                                LParenIf(
                                                ) [LParenIf]
                                                OneCondTerm(
                                                  OneCondFact(
                                                    CondFactRelop(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 i
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                      EqualTo(
                                                      ) [EqualTo]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorNum(
                                                               4
                                                              ) [FactorNum]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [CondFactRelop]
                                                  ) [OneCondFact]
                                                ) [OneCondTerm]
                                                RParenIf(
                                                ) [RParenIf]
                                                StatementBreak(
                                                ) [StatementBreak]
                                              ) [StatementIf]
                                              Statements(
                                                StatementDesignator(
                                                  DesignatorStatementMatched(
                                                    DesignatorStatementAssignop(
                                                      DesignatorIdent(
                                                       i
                                                      ) [DesignatorIdent]
                                                      Assignop(
                                                      ) [Assignop]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorDesignatorActPars(
                                                                DesignatorIdent(
                                                                 inkrement
                                                                ) [DesignatorIdent]
                                                                ActualParsList(
                                                                  ActParsList(
                                                                    ActParsEnd(
                                                                      ExprPositive(
                                                                        AddopEnd(
                                                                          Term(
                                                                            MulopEnd(
                                                                              FactorDesignator(
                                                                                DesignatorIdent(
                                                                                 i
                                                                                ) [DesignatorIdent]
                                                                              ) [FactorDesignator]
                                                                            ) [MulopEnd]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                      ) [ExprPositive]
                                                                    ) [ActParsEnd]
                                                                    ExprPositive(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorNum(
                                                                             1
                                                                            ) [FactorNum]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                    ) [ExprPositive]
                                                                  ) [ActParsList]
                                                                ) [ActualParsList]
                                                              ) [FactorDesignatorActPars]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorStatementAssignop]
                                                  ) [DesignatorStatementMatched]
                                                ) [StatementDesignator]
                                                NoStatement(
                                                ) [NoStatement]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [StatementStatementList]
                                      ) [StatementForCondFact]
                                      Statements(
                                        StatementIfElse(
                                          LParenIf(
                                          ) [LParenIf]
                                          OneCondTerm(
                                            CondTerms(
                                              OneCondFact(
                                                CondFactRelop(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorDesignator(
                                                            DesignatorIdent(
                                                             i
                                                            ) [DesignatorIdent]
                                                          ) [FactorDesignator]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                  EqualTo(
                                                  ) [EqualTo]
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorNum(
                                                           3
                                                          ) [FactorNum]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [CondFactRelop]
                                              ) [OneCondFact]
                                              CondFactExpr(
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      MulopEnd(
                                                        FactorDesignatorActPars(
                                                          DesignatorIdent(
                                                           verify
                                                          ) [DesignatorIdent]
                                                          NoActPars(
                                                          ) [NoActPars]
                                                        ) [FactorDesignatorActPars]
                                                      ) [MulopEnd]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [CondFactExpr]
                                            ) [CondTerms]
                                          ) [OneCondTerm]
                                          RParenIf(
                                          ) [RParenIf]
                                          StatementPrint(
                                            ExprNegativ(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorNum(
                                                     4
                                                    ) [FactorNum]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprNegativ]
                                          ) [StatementPrint]
                                          ElseSt(
                                          ) [ElseSt]
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorNum(
                                                     4
                                                    ) [FactorNum]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                        ) [StatementIfElse]
                                        Statements(
                                          StatementRead(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       0
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [StatementRead]
                                          Statements(
                                            StatementRead(
                                              DesignatorExpr(
                                                DesignatorName(
                                                 niz
                                                ) [DesignatorName]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      MulopEnd(
                                                        FactorNum(
                                                         1
                                                        ) [FactorNum]
                                                      ) [MulopEnd]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [DesignatorExpr]
                                            ) [StatementRead]
                                            Statements(
                                              StatementRead(
                                                DesignatorExpr(
                                                  DesignatorName(
                                                   niz
                                                  ) [DesignatorName]
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorNum(
                                                           2
                                                          ) [FactorNum]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [DesignatorExpr]
                                              ) [StatementRead]
                                              Statements(
                                                StatementPrint(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorDesignator(
                                                            DesignatorIdent(
                                                             eol
                                                            ) [DesignatorIdent]
                                                          ) [FactorDesignator]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [StatementPrint]
                                                Statements(
                                                  StatementPrint(
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          MulopEnd(
                                                            FactorDesignatorActPars(
                                                              DesignatorIdent(
                                                               sum
                                                              ) [DesignatorIdent]
                                                              ActualParsList(
                                                                ActParsList(
                                                                  ActParsEnd(
                                                                    ExprPositive(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorDesignatorActPars(
                                                                              DesignatorIdent(
                                                                               sum
                                                                              ) [DesignatorIdent]
                                                                              ActualParsList(
                                                                                ActParsList(
                                                                                  ActParsEnd(
                                                                                    ExprPositive(
                                                                                      AddopEnd(
                                                                                        Term(
                                                                                          MulopEnd(
                                                                                            FactorDesignator(
                                                                                              DesignatorExpr(
                                                                                                DesignatorName(
                                                                                                 niz
                                                                                                ) [DesignatorName]
                                                                                                ExprPositive(
                                                                                                  AddopEnd(
                                                                                                    Term(
                                                                                                      MulopEnd(
                                                                                                        FactorNum(
                                                                                                         0
                                                                                                        ) [FactorNum]
                                                                                                      ) [MulopEnd]
                                                                                                    ) [Term]
                                                                                                  ) [AddopEnd]
                                                                                                ) [ExprPositive]
                                                                                              ) [DesignatorExpr]
                                                                                            ) [FactorDesignator]
                                                                                          ) [MulopEnd]
                                                                                        ) [Term]
                                                                                      ) [AddopEnd]
                                                                                    ) [ExprPositive]
                                                                                  ) [ActParsEnd]
                                                                                  ExprPositive(
                                                                                    AddopEnd(
                                                                                      Term(
                                                                                        MulopEnd(
                                                                                          FactorDesignator(
                                                                                            DesignatorExpr(
                                                                                              DesignatorName(
                                                                                               niz
                                                                                              ) [DesignatorName]
                                                                                              ExprPositive(
                                                                                                AddopEnd(
                                                                                                  Term(
                                                                                                    MulopEnd(
                                                                                                      FactorNum(
                                                                                                       1
                                                                                                      ) [FactorNum]
                                                                                                    ) [MulopEnd]
                                                                                                  ) [Term]
                                                                                                ) [AddopEnd]
                                                                                              ) [ExprPositive]
                                                                                            ) [DesignatorExpr]
                                                                                          ) [FactorDesignator]
                                                                                        ) [MulopEnd]
                                                                                      ) [Term]
                                                                                    ) [AddopEnd]
                                                                                  ) [ExprPositive]
                                                                                ) [ActParsList]
                                                                              ) [ActualParsList]
                                                                            ) [FactorDesignatorActPars]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                    ) [ExprPositive]
                                                                  ) [ActParsEnd]
                                                                  ExprPositive(
                                                                    AddopEnd(
                                                                      Term(
                                                                        MulopEnd(
                                                                          FactorDesignator(
                                                                            DesignatorExpr(
                                                                              DesignatorName(
                                                                               niz
                                                                              ) [DesignatorName]
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorNum(
                                                                                       2
                                                                                      ) [FactorNum]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [DesignatorExpr]
                                                                          ) [FactorDesignator]
                                                                        ) [MulopEnd]
                                                                      ) [Term]
                                                                    ) [AddopEnd]
                                                                  ) [ExprPositive]
                                                                ) [ActParsList]
                                                              ) [ActualParsList]
                                                            ) [FactorDesignatorActPars]
                                                          ) [MulopEnd]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [StatementPrint]
                                                  Statements(
                                                    StatementPrint(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 eol
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [StatementPrint]
                                                    Statements(
                                                      StatementPrint(
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              MulopEnd(
                                                                FactorDesignatorActPars(
                                                                  DesignatorIdent(
                                                                   inkrement
                                                                  ) [DesignatorIdent]
                                                                  ActualParsList(
                                                                    ActParsList(
                                                                      ActParsEnd(
                                                                        ExprPositive(
                                                                          AddopEnd(
                                                                            Term(
                                                                              MulopEnd(
                                                                                FactorDesignator(
                                                                                  DesignatorExpr(
                                                                                    DesignatorName(
                                                                                     niz
                                                                                    ) [DesignatorName]
                                                                                    ExprPositive(
                                                                                      AddopEnd(
                                                                                        Term(
                                                                                          MulopEnd(
                                                                                            FactorNum(
                                                                                             2
                                                                                            ) [FactorNum]
                                                                                          ) [MulopEnd]
                                                                                        ) [Term]
                                                                                      ) [AddopEnd]
                                                                                    ) [ExprPositive]
                                                                                  ) [DesignatorExpr]
                                                                                ) [FactorDesignator]
                                                                              ) [MulopEnd]
                                                                            ) [Term]
                                                                          ) [AddopEnd]
                                                                        ) [ExprPositive]
                                                                      ) [ActParsEnd]
                                                                      ExprPositive(
                                                                        AddopEnd(
                                                                          Term(
                                                                            MulopEnd(
                                                                              FactorNum(
                                                                               2
                                                                              ) [FactorNum]
                                                                            ) [MulopEnd]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                      ) [ExprPositive]
                                                                    ) [ActParsList]
                                                                  ) [ActualParsList]
                                                                ) [FactorDesignatorActPars]
                                                              ) [MulopEnd]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [StatementPrint]
                                                      Statements(
                                                        StatementDesignator(
                                                          DesignatorStatementMatched(
                                                            DesignatorStatementAssignop(
                                                              DesignatorIdent(
                                                               a
                                                              ) [DesignatorIdent]
                                                              Assignop(
                                                              ) [Assignop]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorNum(
                                                                       3
                                                                      ) [FactorNum]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [DesignatorStatementAssignop]
                                                          ) [DesignatorStatementMatched]
                                                        ) [StatementDesignator]
                                                        Statements(
                                                          StatementForCondFact(
                                                            ForSt(
                                                            ) [ForSt]
                                                            DesignatorStatementOne(
                                                              DesignatorStatementMatched(
                                                                DesignatorStatementAssignop(
                                                                  DesignatorIdent(
                                                                   i
                                                                  ) [DesignatorIdent]
                                                                  Assignop(
                                                                  ) [Assignop]
                                                                  ExprPositive(
                                                                    AddopEnd(
                                                                      Term(
                                                                        MulopEnd(
                                                                          FactorNum(
                                                                           0
                                                                          ) [FactorNum]
                                                                        ) [MulopEnd]
                                                                      ) [Term]
                                                                    ) [AddopEnd]
                                                                  ) [ExprPositive]
                                                                ) [DesignatorStatementAssignop]
                                                              ) [DesignatorStatementMatched]
                                                            ) [DesignatorStatementOne]
                                                            LSemiFor(
                                                            ) [LSemiFor]
                                                            CondFactFor(
                                                              CondFactRelop(
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           i
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                                Less(
                                                                ) [Less]
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorNum(
                                                                         3
                                                                        ) [FactorNum]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                              ) [CondFactRelop]
                                                            ) [CondFactFor]
                                                            RSemiFor(
                                                            ) [RSemiFor]
                                                            DesignatorStatementListSecond(
                                                              DesignatorStatementOne(
                                                                DesignatorStatementMatched(
                                                                  DesignatorStatementIncrement(
                                                                    DesignatorIdent(
                                                                     i
                                                                    ) [DesignatorIdent]
                                                                  ) [DesignatorStatementIncrement]
                                                                ) [DesignatorStatementMatched]
                                                              ) [DesignatorStatementOne]
                                                            ) [DesignatorStatementListSecond]
                                                            RParenFor(
                                                            ) [RParenFor]
                                                            StatementStatementList(
                                                              Statements(
                                                                StatementDesignator(
                                                                  DesignatorStatementMatched(
                                                                    DesignatorStatementAssignop(
                                                                      DesignatorExpr(
                                                                        DesignatorName(
                                                                         niz
                                                                        ) [DesignatorName]
                                                                        ExprPositive(
                                                                          AddopEnd(
                                                                            Term(
                                                                              MulopEnd(
                                                                                FactorDesignator(
                                                                                  DesignatorIdent(
                                                                                   i
                                                                                  ) [DesignatorIdent]
                                                                                ) [FactorDesignator]
                                                                              ) [MulopEnd]
                                                                            ) [Term]
                                                                          ) [AddopEnd]
                                                                        ) [ExprPositive]
                                                                      ) [DesignatorExpr]
                                                                      Assignop(
                                                                      ) [Assignop]
                                                                      ExprPositive(
                                                                        AddopEnd(
                                                                          Term(
                                                                            MulopList(
                                                                              MulopList(
                                                                                MulopEnd(
                                                                                  FactorDesignator(
                                                                                    DesignatorExpr(
                                                                                      DesignatorName(
                                                                                       niz
                                                                                      ) [DesignatorName]
                                                                                      ExprPositive(
                                                                                        AddopEnd(
                                                                                          Term(
                                                                                            MulopEnd(
                                                                                              FactorDesignator(
                                                                                                DesignatorIdent(
                                                                                                 i
                                                                                                ) [DesignatorIdent]
                                                                                              ) [FactorDesignator]
                                                                                            ) [MulopEnd]
                                                                                          ) [Term]
                                                                                        ) [AddopEnd]
                                                                                      ) [ExprPositive]
                                                                                    ) [DesignatorExpr]
                                                                                  ) [FactorDesignator]
                                                                                ) [MulopEnd]
                                                                                Star(
                                                                                ) [Star]
                                                                                FactorNum(
                                                                                 2
                                                                                ) [FactorNum]
                                                                              ) [MulopList]
                                                                              Star(
                                                                              ) [Star]
                                                                              FactorDesignator(
                                                                                DesignatorIdent(
                                                                                 a
                                                                                ) [DesignatorIdent]
                                                                              ) [FactorDesignator]
                                                                            ) [MulopList]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                      ) [ExprPositive]
                                                                    ) [DesignatorStatementAssignop]
                                                                  ) [DesignatorStatementMatched]
                                                                ) [StatementDesignator]
                                                                Statements(
                                                                  StatementPrint(
                                                                    ExprPositive(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorDesignator(
                                                                              DesignatorExpr(
                                                                                DesignatorName(
                                                                                 niz
                                                                                ) [DesignatorName]
                                                                                ExprPositive(
                                                                                  AddopEnd(
                                                                                    Term(
                                                                                      MulopEnd(
                                                                                        FactorDesignator(
                                                                                          DesignatorIdent(
                                                                                           i
                                                                                          ) [DesignatorIdent]
                                                                                        ) [FactorDesignator]
                                                                                      ) [MulopEnd]
                                                                                    ) [Term]
                                                                                  ) [AddopEnd]
                                                                                ) [ExprPositive]
                                                                              ) [DesignatorExpr]
                                                                            ) [FactorDesignator]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                    ) [ExprPositive]
                                                                  ) [StatementPrint]
                                                                  NoStatement(
                                                                  ) [NoStatement]
                                                                ) [Statements]
                                                              ) [Statements]
                                                            ) [StatementStatementList]
                                                          ) [StatementForCondFact]
                                                          NoStatement(
                                                          ) [NoStatement]
                                                        ) [Statements]
                                                      ) [Statements]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  00:22:22,455 - ===================================
INFO  00:22:22,455 - Pocetak programa test302.
INFO  00:22:22,456 - Deklarisana je konstanta jedan na liniji 5
INFO  00:22:22,456 - Deklarisana je promenljiva i na liniji 7
INFO  00:22:22,456 - Deklarisana je promenljiva ibool na liniji 8
INFO  00:22:22,456 - Deklarisana je promenljiva niz2 na liniji 10
INFO  00:22:22,456 - Deklarisana je promenljiva niz na liniji 12
INFO  00:22:22,456 - Deklarisana je promenljiva niz_2 na liniji 12
INFO  00:22:22,456 - Deklarisana je promenljiva niz_3 na liniji 12
INFO  00:22:22,456 - Deklarisana je promenljiva a na liniji 13
INFO  00:22:22,456 - Obradjuje se funkcija sum na liniji 18
INFO  00:22:22,456 - Deklarisan je parametar funkcije z na liniji 18
INFO  00:22:22,456 - Deklarisan je parametar funkcije d na liniji 18
INFO  00:22:22,456 - Dobra povratna vrednost funkcije na liniji 20
INFO  00:22:22,456 - Obradjuje se funkcija inkrement na liniji 23
INFO  00:22:22,456 - Deklarisan je parametar funkcije a na liniji 23
INFO  00:22:22,456 - Deklarisan je parametar funkcije inc na liniji 23
INFO  00:22:22,456 - Deklarisana je promenljiva pom na liniji 24
INFO  00:22:22,456 - Designator i expr su odgovarajuceg tipa na liniji 26
INFO  00:22:22,456 - Designator i expr su odgovarajuceg tipa na liniji 27
INFO  00:22:22,457 - Pronadjen poziv funkcije sum na liniji 29
INFO  00:22:22,457 - Dobra povratna vrednost funkcije na liniji 29
INFO  00:22:22,457 - Obradjuje se funkcija verify na liniji 32
INFO  00:22:22,457 - Obradjena funkcija PRINT na liniji 33
INFO  00:22:22,457 - Dobra povratna vrednost funkcije na liniji 34
INFO  00:22:22,457 - Obradjuje se funkcija main na liniji 37
INFO  00:22:22,457 - Obradjena funkcija PRINT na liniji 39
INFO  00:22:22,457 - Obradjena funkcija PRINT na liniji 40
INFO  00:22:22,457 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  00:22:22,457 - Designator i expr su odgovarajuceg tipa na liniji 43
INFO  00:22:22,457 - Designator i expr su odgovarajuceg tipa na liniji 44
INFO  00:22:22,457 - Designator i expr su odgovarajuceg tipa na liniji 45
INFO  00:22:22,457 - Obradjena funkcija PRINT na liniji 50
INFO  00:22:22,458 - Obradjena funkcija PRINT na liniji 51
INFO  00:22:22,458 - Designator i expr su odgovarajuceg tipa na liniji 52
INFO  00:22:22,458 - Designator i expr su odgovarajuceg tipa na liniji 53
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Designator i expr su odgovarajuceg tipa na liniji 55
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Designator i expr su odgovarajuceg tipa na liniji 56
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Pronadjen poziv funkcije sum na liniji 57
INFO  00:22:22,458 - Designator i expr su odgovarajuceg tipa na liniji 57
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Obradjena funkcija PRINT na liniji 58
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Obradjena funkcija PRINT na liniji 58
INFO  00:22:22,458 - Kreiran/promenjen element niza niz
INFO  00:22:22,458 - Obradjena funkcija PRINT na liniji 58
INFO  00:22:22,459 - Pronadjen poziv funkcije verify na liniji 59
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Pronadjen poziv funkcije ord na liniji 59
INFO  00:22:22,459 - Obradjena funkcija PRINT na liniji 59
INFO  00:22:22,459 - Pronadjen poziv funkcije ord na liniji 60
INFO  00:22:22,459 - Obradjena funkcija PRINT na liniji 60
INFO  00:22:22,459 - Designator i expr su odgovarajuceg tipa na liniji 63
INFO  00:22:22,459 - Designator i expr su odgovarajuceg tipa na liniji 64
INFO  00:22:22,459 - Pronadjen poziv funkcije inkrement na liniji 71
INFO  00:22:22,459 - Designator i expr su odgovarajuceg tipa na liniji 71
INFO  00:22:22,459 - Pronadjen poziv funkcije verify na liniji 73
INFO  00:22:22,459 - Obradjena funkcija PRINT na liniji 73
INFO  00:22:22,459 - Obradjena funkcija PRINT na liniji 74
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Funkciji READ je prosledjen element niza 
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Funkciji READ je prosledjen element niza 
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Funkciji READ je prosledjen element niza 
INFO  00:22:22,459 - Obradjena funkcija PRINT na liniji 80
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,459 - Pronadjen poziv funkcije sum na liniji 81
INFO  00:22:22,459 - Kreiran/promenjen element niza niz
INFO  00:22:22,460 - Pronadjen poziv funkcije sum na liniji 81
INFO  00:22:22,460 - Obradjena funkcija PRINT na liniji 81
INFO  00:22:22,460 - Obradjena funkcija PRINT na liniji 83
INFO  00:22:22,460 - Kreiran/promenjen element niza niz
INFO  00:22:22,460 - Pronadjen poziv funkcije inkrement na liniji 84
INFO  00:22:22,460 - Obradjena funkcija PRINT na liniji 84
INFO  00:22:22,460 - Designator i expr su odgovarajuceg tipa na liniji 86
INFO  00:22:22,460 - Designator i expr su odgovarajuceg tipa na liniji 87
INFO  00:22:22,460 - Kreiran/promenjen element niza niz
INFO  00:22:22,460 - Kreiran/promenjen element niza niz
INFO  00:22:22,460 - Designator i expr su odgovarajuceg tipa na liniji 88
INFO  00:22:22,460 - Kreiran/promenjen element niza niz
INFO  00:22:22,460 - Obradjena funkcija PRINT na liniji 89
INFO  00:22:22,460 - ===================================
INFO  00:22:22,468 - Parsiranje uspesno zavrseno!
