INFO  01:11:11,253 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  01:11:11,305 - #2 program
INFO  01:11:11,305 - #49 test302
INFO  01:11:11,305 - #49 int
INFO  01:11:11,306 - #49 i
INFO  01:11:11,307 - #8 ;
INFO  01:11:11,307 - #49 bool
INFO  01:11:11,308 - #49 ibool
INFO  01:11:11,308 - #8 ;
INFO  01:11:11,308 - #49 int
INFO  01:11:11,308 - #49 niz
INFO  01:11:11,308 - #10 [
INFO  01:11:11,308 - #11 ]
INFO  01:11:11,308 - #9 ,
INFO  01:11:11,308 - #49 niz2
INFO  01:11:11,308 - #10 [
INFO  01:11:11,308 - #11 ]
INFO  01:11:11,309 - #9 ,
INFO  01:11:11,309 - #49 niz3
INFO  01:11:11,309 - #10 [
INFO  01:11:11,309 - #11 ]
INFO  01:11:11,309 - #8 ;
INFO  01:11:11,310 - #49 int
INFO  01:11:11,310 - #49 a
INFO  01:11:11,310 - #9 ,
INFO  01:11:11,310 - #49 b
INFO  01:11:11,310 - #8 ;
INFO  01:11:11,310 - #49 int
INFO  01:11:11,310 - #49 nizr
INFO  01:11:11,310 - #8 ;
INFO  01:11:11,310 - #4 {
INFO  01:11:11,310 - #49 int
INFO  01:11:11,311 - #49 sum
INFO  01:11:11,311 - #20 (
INFO  01:11:11,311 - #49 int
INFO  01:11:11,311 - #49 z
INFO  01:11:11,312 - #9 ,
INFO  01:11:11,312 - #49 int
INFO  01:11:11,312 - #49 d
INFO  01:11:11,312 - #21 )
INFO  01:11:11,312 - #4 {
INFO  01:11:11,312 - #18 return
INFO  01:11:11,312 - #49 z
INFO  01:11:11,312 - #37 +
INFO  01:11:11,313 - #49 d
INFO  01:11:11,315 - #8 ;
INFO  01:11:11,315 - #5 }
INFO  01:11:11,316 - #49 int
INFO  01:11:11,317 - #49 inkrement
INFO  01:11:11,317 - #20 (
INFO  01:11:11,317 - #49 int
INFO  01:11:11,317 - #49 a
INFO  01:11:11,317 - #9 ,
INFO  01:11:11,317 - #49 int
INFO  01:11:11,317 - #49 inc
INFO  01:11:11,317 - #21 )
INFO  01:11:11,317 - #49 int
INFO  01:11:11,317 - #49 pom
INFO  01:11:11,317 - #8 ;
INFO  01:11:11,317 - #4 {
INFO  01:11:11,317 - #14 if
INFO  01:11:11,318 - #20 (
INFO  01:11:11,318 - #49 inc
INFO  01:11:11,318 - #31 ==
INFO  01:11:11,318 - #48 1
INFO  01:11:11,319 - #21 )
INFO  01:11:11,320 - #49 pom
INFO  01:11:11,320 - #7 =
INFO  01:11:11,320 - #48 1
INFO  01:11:11,321 - #8 ;
INFO  01:11:11,321 - #15 else
INFO  01:11:11,321 - #14 if
INFO  01:11:11,322 - #20 (
INFO  01:11:11,322 - #49 inc
INFO  01:11:11,322 - #31 ==
INFO  01:11:11,322 - #48 2
INFO  01:11:11,322 - #21 )
INFO  01:11:11,322 - #49 pom
INFO  01:11:11,322 - #7 =
INFO  01:11:11,322 - #49 a
INFO  01:11:11,322 - #8 ;
INFO  01:11:11,322 - #18 return
INFO  01:11:11,322 - #49 sum
INFO  01:11:11,322 - #20 (
INFO  01:11:11,322 - #49 a
INFO  01:11:11,323 - #9 ,
INFO  01:11:11,323 - #49 pom
INFO  01:11:11,323 - #21 )
INFO  01:11:11,323 - #8 ;
INFO  01:11:11,323 - #5 }
INFO  01:11:11,323 - #49 bool
INFO  01:11:11,323 - #49 verify
INFO  01:11:11,323 - #20 (
INFO  01:11:11,323 - #21 )
INFO  01:11:11,324 - #4 {
INFO  01:11:11,324 - #22 print
INFO  01:11:11,324 - #20 (
INFO  01:11:11,324 - #50 v
INFO  01:11:11,325 - #21 )
INFO  01:11:11,325 - #8 ;
INFO  01:11:11,325 - #18 return
INFO  01:11:11,325 - #51 false
INFO  01:11:11,325 - #8 ;
INFO  01:11:11,325 - #5 }
INFO  01:11:11,325 - #41 void
INFO  01:11:11,325 - #49 main
INFO  01:11:11,326 - #20 (
INFO  01:11:11,326 - #21 )
INFO  01:11:11,326 - #4 {
INFO  01:11:11,326 - #14 if
INFO  01:11:11,326 - #20 (
INFO  01:11:11,326 - #48 1
INFO  01:11:11,326 - #32 !=
INFO  01:11:11,326 - #48 1
INFO  01:11:11,327 - #21 )
INFO  01:11:11,327 - #22 print
INFO  01:11:11,327 - #20 (
INFO  01:11:11,327 - #28 -
INFO  01:11:11,327 - #48 6
INFO  01:11:11,327 - #21 )
INFO  01:11:11,327 - #8 ;
INFO  01:11:11,327 - #15 else
INFO  01:11:11,327 - #22 print
INFO  01:11:11,327 - #20 (
INFO  01:11:11,328 - #48 0
INFO  01:11:11,328 - #21 )
INFO  01:11:11,328 - #8 ;
INFO  01:11:11,328 - #49 ibool
INFO  01:11:11,328 - #7 =
INFO  01:11:11,328 - #51 false
INFO  01:11:11,328 - #8 ;
INFO  01:11:11,328 - #23 for
INFO  01:11:11,328 - #20 (
INFO  01:11:11,329 - #49 i
INFO  01:11:11,329 - #7 =
INFO  01:11:11,329 - #48 0
INFO  01:11:11,329 - #8 ;
INFO  01:11:11,329 - #49 i
INFO  01:11:11,330 - #35 <
INFO  01:11:11,330 - #48 5
INFO  01:11:11,331 - #8 ;
INFO  01:11:11,331 - #49 i
INFO  01:11:11,332 - #24 ++
INFO  01:11:11,332 - #21 )
INFO  01:11:11,333 - #4 {
INFO  01:11:11,333 - #14 if
INFO  01:11:11,333 - #20 (
INFO  01:11:11,333 - #49 i
INFO  01:11:11,333 - #31 ==
INFO  01:11:11,334 - #48 2
INFO  01:11:11,334 - #21 )
INFO  01:11:11,334 - #49 ibool
INFO  01:11:11,334 - #7 =
INFO  01:11:11,334 - #51 true
INFO  01:11:11,334 - #8 ;
INFO  01:11:11,334 - #5 }
INFO  01:11:11,334 - #14 if
INFO  01:11:11,334 - #20 (
INFO  01:11:11,334 - #49 ibool
INFO  01:11:11,334 - #21 )
INFO  01:11:11,334 - #14 if
INFO  01:11:11,334 - #20 (
INFO  01:11:11,334 - #49 i
INFO  01:11:11,334 - #31 ==
INFO  01:11:11,334 - #48 5
INFO  01:11:11,334 - #21 )
INFO  01:11:11,335 - #22 print
INFO  01:11:11,335 - #20 (
INFO  01:11:11,335 - #48 1
INFO  01:11:11,335 - #21 )
INFO  01:11:11,335 - #8 ;
INFO  01:11:11,335 - #15 else
INFO  01:11:11,335 - #22 print
INFO  01:11:11,335 - #20 (
INFO  01:11:11,335 - #28 -
INFO  01:11:11,335 - #48 1
INFO  01:11:11,335 - #21 )
INFO  01:11:11,335 - #8 ;
INFO  01:11:11,335 - #49 a
INFO  01:11:11,335 - #7 =
INFO  01:11:11,335 - #48 2
INFO  01:11:11,335 - #8 ;
INFO  01:11:11,335 - #49 niz
INFO  01:11:11,335 - #7 =
INFO  01:11:11,336 - #29 new
INFO  01:11:11,336 - #49 int
INFO  01:11:11,336 - #10 [
INFO  01:11:11,336 - #48 3
INFO  01:11:11,336 - #11 ]
INFO  01:11:11,336 - #8 ;
INFO  01:11:11,336 - #49 niz
INFO  01:11:11,336 - #10 [
INFO  01:11:11,337 - #48 0
INFO  01:11:11,337 - #11 ]
INFO  01:11:11,337 - #7 =
INFO  01:11:11,337 - #48 1
INFO  01:11:11,337 - #38 *
INFO  01:11:11,337 - #49 a
INFO  01:11:11,338 - #8 ;
INFO  01:11:11,338 - #49 niz
INFO  01:11:11,338 - #10 [
INFO  01:11:11,338 - #48 1
INFO  01:11:11,338 - #11 ]
INFO  01:11:11,338 - #7 =
INFO  01:11:11,338 - #48 2
INFO  01:11:11,338 - #38 *
INFO  01:11:11,338 - #49 a
INFO  01:11:11,338 - #8 ;
INFO  01:11:11,338 - #49 niz
INFO  01:11:11,339 - #10 [
INFO  01:11:11,339 - #48 2
INFO  01:11:11,339 - #11 ]
INFO  01:11:11,339 - #7 =
INFO  01:11:11,339 - #49 sum
INFO  01:11:11,339 - #20 (
INFO  01:11:11,339 - #49 niz
INFO  01:11:11,339 - #10 [
INFO  01:11:11,339 - #48 1
INFO  01:11:11,339 - #11 ]
INFO  01:11:11,339 - #9 ,
INFO  01:11:11,339 - #49 niz
INFO  01:11:11,339 - #10 [
INFO  01:11:11,339 - #48 0
INFO  01:11:11,339 - #11 ]
INFO  01:11:11,339 - #21 )
INFO  01:11:11,339 - #38 *
INFO  01:11:11,339 - #49 a
INFO  01:11:11,339 - #37 +
INFO  01:11:11,339 - #48 1
INFO  01:11:11,339 - #8 ;
INFO  01:11:11,339 - #14 if
INFO  01:11:11,339 - #20 (
INFO  01:11:11,339 - #49 verify
INFO  01:11:11,340 - #20 (
INFO  01:11:11,340 - #21 )
INFO  01:11:11,340 - #27 ||
INFO  01:11:11,340 - #49 niz
INFO  01:11:11,341 - #10 [
INFO  01:11:11,341 - #48 2
INFO  01:11:11,341 - #11 ]
INFO  01:11:11,341 - #31 ==
INFO  01:11:11,341 - #48 4
INFO  01:11:11,341 - #21 )
INFO  01:11:11,341 - #22 print
INFO  01:11:11,341 - #20 (
INFO  01:11:11,341 - #49 ord
INFO  01:11:11,341 - #20 (
INFO  01:11:11,341 - #50 A
INFO  01:11:11,341 - #21 )
INFO  01:11:11,341 - #21 )
INFO  01:11:11,341 - #8 ;
INFO  01:11:11,341 - #15 else
INFO  01:11:11,341 - #22 print
INFO  01:11:11,341 - #20 (
INFO  01:11:11,341 - #49 ord
INFO  01:11:11,341 - #20 (
INFO  01:11:11,342 - #50 a
INFO  01:11:11,342 - #21 )
INFO  01:11:11,342 - #21 )
INFO  01:11:11,342 - #8 ;
INFO  01:11:11,342 - #22 print
INFO  01:11:11,342 - #20 (
INFO  01:11:11,342 - #49 eol
INFO  01:11:11,342 - #21 )
INFO  01:11:11,342 - #8 ;
INFO  01:11:11,342 - #23 for
INFO  01:11:11,342 - #20 (
INFO  01:11:11,342 - #49 i
INFO  01:11:11,342 - #7 =
INFO  01:11:11,342 - #48 0
INFO  01:11:11,342 - #8 ;
INFO  01:11:11,342 - #49 i
INFO  01:11:11,342 - #35 <
INFO  01:11:11,342 - #48 10
INFO  01:11:11,342 - #8 ;
INFO  01:11:11,342 - #21 )
INFO  01:11:11,343 - #4 {
INFO  01:11:11,343 - #14 if
INFO  01:11:11,343 - #20 (
INFO  01:11:11,343 - #49 i
INFO  01:11:11,343 - #31 ==
INFO  01:11:11,343 - #48 3
INFO  01:11:11,343 - #21 )
INFO  01:11:11,343 - #4 {
INFO  01:11:11,343 - #49 i
INFO  01:11:11,343 - #24 ++
INFO  01:11:11,344 - #8 ;
INFO  01:11:11,344 - #17 continue
INFO  01:11:11,344 - #8 ;
INFO  01:11:11,344 - #5 }
INFO  01:11:11,344 - #14 if
INFO  01:11:11,344 - #20 (
INFO  01:11:11,344 - #49 i
INFO  01:11:11,344 - #31 ==
INFO  01:11:11,344 - #48 4
INFO  01:11:11,344 - #21 )
INFO  01:11:11,345 - #16 break
INFO  01:11:11,345 - #8 ;
INFO  01:11:11,345 - #49 i
INFO  01:11:11,345 - #7 =
INFO  01:11:11,345 - #49 inkrement
INFO  01:11:11,345 - #20 (
INFO  01:11:11,345 - #49 i
INFO  01:11:11,345 - #9 ,
INFO  01:11:11,345 - #48 1
INFO  01:11:11,345 - #21 )
INFO  01:11:11,345 - #8 ;
INFO  01:11:11,345 - #5 }
INFO  01:11:11,345 - #14 if
INFO  01:11:11,346 - #20 (
INFO  01:11:11,346 - #49 i
INFO  01:11:11,346 - #31 ==
INFO  01:11:11,346 - #48 3
INFO  01:11:11,346 - #26 &&
INFO  01:11:11,346 - #49 verify
INFO  01:11:11,346 - #20 (
INFO  01:11:11,346 - #21 )
INFO  01:11:11,346 - #21 )
INFO  01:11:11,346 - #22 print
INFO  01:11:11,346 - #20 (
INFO  01:11:11,346 - #28 -
INFO  01:11:11,346 - #48 4
INFO  01:11:11,346 - #21 )
INFO  01:11:11,346 - #8 ;
INFO  01:11:11,346 - #15 else
INFO  01:11:11,346 - #22 print
INFO  01:11:11,346 - #20 (
INFO  01:11:11,346 - #48 4
INFO  01:11:11,346 - #21 )
INFO  01:11:11,346 - #8 ;
INFO  01:11:11,346 - #19 read
INFO  01:11:11,346 - #20 (
INFO  01:11:11,346 - #49 niz
INFO  01:11:11,346 - #10 [
INFO  01:11:11,347 - #48 0
INFO  01:11:11,347 - #11 ]
INFO  01:11:11,347 - #21 )
INFO  01:11:11,347 - #8 ;
INFO  01:11:11,347 - #19 read
INFO  01:11:11,347 - #20 (
INFO  01:11:11,347 - #49 niz
INFO  01:11:11,347 - #10 [
INFO  01:11:11,347 - #48 1
INFO  01:11:11,347 - #11 ]
INFO  01:11:11,347 - #21 )
INFO  01:11:11,347 - #8 ;
INFO  01:11:11,347 - #19 read
INFO  01:11:11,347 - #20 (
INFO  01:11:11,347 - #49 niz
INFO  01:11:11,347 - #10 [
INFO  01:11:11,347 - #48 2
INFO  01:11:11,347 - #11 ]
INFO  01:11:11,347 - #21 )
INFO  01:11:11,347 - #8 ;
INFO  01:11:11,347 - #22 print
INFO  01:11:11,347 - #20 (
INFO  01:11:11,347 - #49 eol
INFO  01:11:11,347 - #21 )
INFO  01:11:11,347 - #8 ;
INFO  01:11:11,348 - #22 print
INFO  01:11:11,348 - #20 (
INFO  01:11:11,348 - #49 sum
INFO  01:11:11,348 - #20 (
INFO  01:11:11,348 - #49 sum
INFO  01:11:11,348 - #20 (
INFO  01:11:11,348 - #49 niz
INFO  01:11:11,348 - #10 [
INFO  01:11:11,348 - #48 0
INFO  01:11:11,348 - #11 ]
INFO  01:11:11,348 - #9 ,
INFO  01:11:11,348 - #49 niz
INFO  01:11:11,348 - #10 [
INFO  01:11:11,348 - #48 1
INFO  01:11:11,348 - #11 ]
INFO  01:11:11,348 - #21 )
INFO  01:11:11,348 - #9 ,
INFO  01:11:11,348 - #49 niz
INFO  01:11:11,348 - #10 [
INFO  01:11:11,348 - #48 2
INFO  01:11:11,348 - #11 ]
INFO  01:11:11,348 - #21 )
INFO  01:11:11,348 - #21 )
INFO  01:11:11,348 - #8 ;
INFO  01:11:11,348 - #22 print
INFO  01:11:11,349 - #20 (
INFO  01:11:11,349 - #49 eol
INFO  01:11:11,349 - #21 )
INFO  01:11:11,349 - #8 ;
INFO  01:11:11,349 - #22 print
INFO  01:11:11,349 - #20 (
INFO  01:11:11,349 - #49 inkrement
INFO  01:11:11,349 - #20 (
INFO  01:11:11,349 - #49 niz
INFO  01:11:11,349 - #10 [
INFO  01:11:11,349 - #48 2
INFO  01:11:11,349 - #11 ]
INFO  01:11:11,349 - #9 ,
INFO  01:11:11,349 - #48 2
INFO  01:11:11,349 - #21 )
INFO  01:11:11,349 - #21 )
INFO  01:11:11,349 - #8 ;
INFO  01:11:11,349 - #49 a
INFO  01:11:11,349 - #7 =
INFO  01:11:11,349 - #48 3
INFO  01:11:11,349 - #8 ;
INFO  01:11:11,349 - #23 for
INFO  01:11:11,349 - #20 (
INFO  01:11:11,349 - #49 i
INFO  01:11:11,349 - #7 =
INFO  01:11:11,349 - #48 0
INFO  01:11:11,349 - #8 ;
INFO  01:11:11,349 - #49 i
INFO  01:11:11,350 - #35 <
INFO  01:11:11,350 - #48 3
INFO  01:11:11,350 - #8 ;
INFO  01:11:11,350 - #49 i
INFO  01:11:11,350 - #24 ++
INFO  01:11:11,350 - #21 )
INFO  01:11:11,350 - #4 {
INFO  01:11:11,350 - #49 niz
INFO  01:11:11,350 - #10 [
INFO  01:11:11,350 - #49 i
INFO  01:11:11,350 - #11 ]
INFO  01:11:11,350 - #7 =
INFO  01:11:11,350 - #49 niz
INFO  01:11:11,350 - #10 [
INFO  01:11:11,350 - #49 i
INFO  01:11:11,350 - #11 ]
INFO  01:11:11,350 - #38 *
INFO  01:11:11,350 - #48 2
INFO  01:11:11,350 - #38 *
INFO  01:11:11,350 - #49 a
INFO  01:11:11,350 - #8 ;
INFO  01:11:11,350 - #5 }
INFO  01:11:11,350 - #23 for
INFO  01:11:11,350 - #20 (
INFO  01:11:11,350 - #49 i
INFO  01:11:11,350 - #7 =
INFO  01:11:11,351 - #48 0
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #35 <
INFO  01:11:11,351 - #48 3
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #24 ++
INFO  01:11:11,351 - #21 )
INFO  01:11:11,351 - #22 print
INFO  01:11:11,351 - #20 (
INFO  01:11:11,351 - #49 niz
INFO  01:11:11,351 - #10 [
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #11 ]
INFO  01:11:11,351 - #21 )
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #22 print
INFO  01:11:11,351 - #20 (
INFO  01:11:11,351 - #49 eol
INFO  01:11:11,351 - #21 )
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #49 nizr
INFO  01:11:11,351 - #7 =
INFO  01:11:11,351 - #48 0
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #23 for
INFO  01:11:11,351 - #20 (
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #7 =
INFO  01:11:11,351 - #48 0
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #35 <
INFO  01:11:11,351 - #48 3
INFO  01:11:11,351 - #8 ;
INFO  01:11:11,351 - #49 i
INFO  01:11:11,351 - #24 ++
INFO  01:11:11,351 - #21 )
INFO  01:11:11,352 - #49 nizr
INFO  01:11:11,352 - #7 =
INFO  01:11:11,352 - #49 nizr
INFO  01:11:11,352 - #37 +
INFO  01:11:11,352 - #49 niz
INFO  01:11:11,352 - #10 [
INFO  01:11:11,352 - #49 i
INFO  01:11:11,352 - #11 ]
INFO  01:11:11,352 - #38 *
INFO  01:11:11,352 - #49 niz
INFO  01:11:11,352 - #10 [
INFO  01:11:11,352 - #49 i
INFO  01:11:11,352 - #11 ]
INFO  01:11:11,352 - #8 ;
INFO  01:11:11,352 - #22 print
INFO  01:11:11,352 - #20 (
INFO  01:11:11,352 - #49 nizr
INFO  01:11:11,352 - #21 )
INFO  01:11:11,352 - #8 ;
INFO  01:11:11,352 - #49 niz2
INFO  01:11:11,352 - #7 =
INFO  01:11:11,352 - #29 new
INFO  01:11:11,352 - #49 int
INFO  01:11:11,352 - #10 [
INFO  01:11:11,352 - #48 2
INFO  01:11:11,352 - #11 ]
INFO  01:11:11,352 - #8 ;
INFO  01:11:11,352 - #49 niz3
INFO  01:11:11,352 - #7 =
INFO  01:11:11,352 - #29 new
INFO  01:11:11,352 - #49 int
INFO  01:11:11,352 - #10 [
INFO  01:11:11,352 - #48 1
INFO  01:11:11,352 - #11 ]
INFO  01:11:11,352 - #8 ;
INFO  01:11:11,353 - #49 niz2
INFO  01:11:11,353 - #10 [
INFO  01:11:11,353 - #48 0
INFO  01:11:11,353 - #11 ]
INFO  01:11:11,353 - #7 =
INFO  01:11:11,353 - #48 2
INFO  01:11:11,353 - #8 ;
INFO  01:11:11,353 - #49 niz2
INFO  01:11:11,353 - #10 [
INFO  01:11:11,353 - #48 1
INFO  01:11:11,353 - #11 ]
INFO  01:11:11,353 - #7 =
INFO  01:11:11,353 - #48 2
INFO  01:11:11,353 - #8 ;
INFO  01:11:11,353 - #49 niz3
INFO  01:11:11,353 - #10 [
INFO  01:11:11,353 - #48 0
INFO  01:11:11,353 - #11 ]
INFO  01:11:11,353 - #7 =
INFO  01:11:11,353 - #48 3
INFO  01:11:11,353 - #8 ;
INFO  01:11:11,353 - #22 print
INFO  01:11:11,353 - #20 (
INFO  01:11:11,353 - #49 niz2
INFO  01:11:11,353 - #10 [
INFO  01:11:11,353 - #48 0
INFO  01:11:11,353 - #11 ]
INFO  01:11:11,353 - #21 )
INFO  01:11:11,354 - #8 ;
INFO  01:11:11,354 - #22 print
INFO  01:11:11,354 - #20 (
INFO  01:11:11,354 - #49 niz2
INFO  01:11:11,355 - #10 [
INFO  01:11:11,355 - #48 1
INFO  01:11:11,355 - #11 ]
INFO  01:11:11,355 - #21 )
INFO  01:11:11,355 - #8 ;
INFO  01:11:11,355 - #22 print
INFO  01:11:11,355 - #20 (
INFO  01:11:11,356 - #49 niz3
INFO  01:11:11,356 - #10 [
INFO  01:11:11,356 - #48 0
INFO  01:11:11,356 - #11 ]
INFO  01:11:11,356 - #21 )
INFO  01:11:11,356 - #8 ;
INFO  01:11:11,356 - #22 print
INFO  01:11:11,356 - #20 (
INFO  01:11:11,356 - #49 eol
INFO  01:11:11,356 - #21 )
INFO  01:11:11,356 - #8 ;
INFO  01:11:11,356 - #5 }
INFO  01:11:11,356 - #5 }
INFO  01:11:11,385 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     i
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               bool
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                  VarName(
                   ibool
                  ) [VarName]
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarArr(
                VarName(
                 niz
                ) [VarName]
              ) [VarArr]
              VarDeclarations(
                VarArr(
                  VarName(
                   niz2
                  ) [VarName]
                ) [VarArr]
                VarDeclarationsEnd(
                  VarArr(
                    VarName(
                     niz3
                    ) [VarName]
                  ) [VarArr]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarIdent(
              VarName(
               a
              ) [VarName]
            ) [VarIdent]
            VarDeclarationsEnd(
              VarIdent(
                VarName(
                 b
                ) [VarName]
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         int
        ) [Type]
        VarDeclarationsEnd(
          VarIdent(
            VarName(
             nizr
            ) [VarName]
          ) [VarIdent]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      MethodDeclarationList(
        MethodDeclarationList(
          NoMethodDeclaration(
          ) [NoMethodDeclaration]
          MethodDecl(
            MethodNameAnyType(
              Type(
               int
              ) [Type]
             sum
            ) [MethodNameAnyType]
            MethodParameters(
              FormParsList(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 z
                ) [FormParsVar]
                FormParsEnd(
                  FormParsVar(
                    Type(
                     int
                    ) [Type]
                   d
                  ) [FormParsVar]
                ) [FormParsEnd]
              ) [FormParsList]
            ) [MethodParameters]
            NoDeclarations(
            ) [NoDeclarations]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopList(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             z
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                    Plus(
                    ) [Plus]
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           d
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopList]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarationList]
        MethodDecl(
          MethodNameAnyType(
            Type(
             int
            ) [Type]
           inkrement
          ) [MethodNameAnyType]
          MethodParameters(
            FormParsList(
              FormParsVar(
                Type(
                 int
                ) [Type]
               a
              ) [FormParsVar]
              FormParsEnd(
                FormParsVar(
                  Type(
                   int
                  ) [Type]
                 inc
                ) [FormParsVar]
              ) [FormParsEnd]
            ) [FormParsList]
          ) [MethodParameters]
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclaration(
              VarDeclarationList(
                Type(
                 int
                ) [Type]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     pom
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarationList]
            ) [VarDeclaration]
          ) [Declarations]
          Statements(
            StatementIfElse(
              LParenIf(
              ) [LParenIf]
              OneCondTerm(
                OneCondFact(
                  CondFactRelop(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorDesignator(
                              DesignatorIdent(
                               inc
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                    EqualTo(
                    ) [EqualTo]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [CondFactRelop]
                ) [OneCondFact]
              ) [OneCondTerm]
              RParenIf(
              ) [RParenIf]
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     pom
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              ElseSt(
              ) [ElseSt]
              StatementIf(
                LParenIf(
                ) [LParenIf]
                OneCondTerm(
                  OneCondFact(
                    CondFactRelop(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 inc
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                      EqualTo(
                      ) [EqualTo]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               2
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [CondFactRelop]
                  ) [OneCondFact]
                ) [OneCondTerm]
                RParenIf(
                ) [RParenIf]
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementAssignop(
                      DesignatorIdent(
                       pom
                      ) [DesignatorIdent]
                      Assignop(
                      ) [Assignop]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 a
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
              ) [StatementIf]
            ) [StatementIfElse]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorDesignatorActPars(
                          DesignatorIdent(
                           sum
                          ) [DesignatorIdent]
                          ActualParsList(
                            ActParsList(
                              ActParsEnd(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorDesignator(
                                          DesignatorIdent(
                                           a
                                          ) [DesignatorIdent]
                                        ) [FactorDesignator]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [ActParsEnd]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         pom
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [ActParsList]
                          ) [ActualParsList]
                        ) [FactorDesignatorActPars]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarationList]
      MethodDecl(
        MethodNameAnyType(
          Type(
           bool
          ) [Type]
         verify
        ) [MethodNameAnyType]
        NoMethodParameters(
        ) [NoMethodParameters]
        NoDeclarations(
        ) [NoDeclarations]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorChar(
                     v
                    ) [FactorChar]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementReturnExpr(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorBool(
                       false
                      ) [FactorBool]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementReturnExpr]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoDeclarations(
      ) [NoDeclarations]
      Statements(
        StatementIfElse(
          LParenIf(
          ) [LParenIf]
          OneCondTerm(
            OneCondFact(
              CondFactRelop(
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         1
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                NotEqualTo(
                ) [NotEqualTo]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         1
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [CondFactRelop]
            ) [OneCondFact]
          ) [OneCondTerm]
          RParenIf(
          ) [RParenIf]
          StatementPrint(
            ExprNegativ(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     6
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprNegativ]
          ) [StatementPrint]
          ElseSt(
          ) [ElseSt]
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     0
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
        ) [StatementIfElse]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 ibool
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorBool(
                         false
                        ) [FactorBool]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementForCondFact(
              ForSt(
              ) [ForSt]
              DesignatorStatementOne(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     i
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             0
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [DesignatorStatementOne]
              LSemiFor(
              ) [LSemiFor]
              CondFactFor(
                CondFactRelop(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             i
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                  Less(
                  ) [Less]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorNum(
                           5
                          ) [FactorNum]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [CondFactRelop]
              ) [CondFactFor]
              RSemiFor(
              ) [RSemiFor]
              DesignatorStatementListSecond(
                DesignatorStatementOne(
                  DesignatorStatementMatched(
                    DesignatorStatementIncrement(
                      DesignatorIdent(
                       i
                      ) [DesignatorIdent]
                    ) [DesignatorStatementIncrement]
                  ) [DesignatorStatementMatched]
                ) [DesignatorStatementOne]
              ) [DesignatorStatementListSecond]
              RParenFor(
              ) [RParenFor]
              StatementStatementList(
                Statements(
                  StatementIf(
                    LParenIf(
                    ) [LParenIf]
                    OneCondTerm(
                      OneCondFact(
                        CondFactRelop(
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     i
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                          EqualTo(
                          ) [EqualTo]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorNum(
                                   2
                                  ) [FactorNum]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [CondFactRelop]
                      ) [OneCondFact]
                    ) [OneCondTerm]
                    RParenIf(
                    ) [RParenIf]
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           ibool
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopEnd(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [MulopEnd]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                  ) [StatementIf]
                  NoStatement(
                  ) [NoStatement]
                ) [Statements]
              ) [StatementStatementList]
            ) [StatementForCondFact]
            Statements(
              StatementIf(
                LParenIf(
                ) [LParenIf]
                OneCondTerm(
                  OneCondFact(
                    CondFactExpr(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 ibool
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [CondFactExpr]
                  ) [OneCondFact]
                ) [OneCondTerm]
                RParenIf(
                ) [RParenIf]
                StatementIfElse(
                  LParenIf(
                  ) [LParenIf]
                  OneCondTerm(
                    OneCondFact(
                      CondFactRelop(
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorDesignator(
                                  DesignatorIdent(
                                   i
                                  ) [DesignatorIdent]
                                ) [FactorDesignator]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                        EqualTo(
                        ) [EqualTo]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorNum(
                                 5
                                ) [FactorNum]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [CondFactRelop]
                    ) [OneCondFact]
                  ) [OneCondTerm]
                  RParenIf(
                  ) [RParenIf]
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  ElseSt(
                  ) [ElseSt]
                  StatementPrint(
                    ExprNegativ(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprNegativ]
                  ) [StatementPrint]
                ) [StatementIfElse]
              ) [StatementIf]
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementAssignop(
                      DesignatorIdent(
                       a
                      ) [DesignatorIdent]
                      Assignop(
                      ) [Assignop]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               2
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementDesignator(
                    DesignatorStatementMatched(
                      DesignatorStatementAssignop(
                        DesignatorIdent(
                         niz
                        ) [DesignatorIdent]
                        Assignop(
                        ) [Assignop]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorNew(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorNum(
                                           3
                                          ) [FactorNum]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [FactorNew]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementMatched]
                  ) [StatementDesignator]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorExpr(
                            DesignatorName(
                             niz
                            ) [DesignatorName]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopEnd(
                                    FactorNum(
                                     0
                                    ) [FactorNum]
                                  ) [MulopEnd]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorExpr]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                MulopList(
                                  MulopEnd(
                                    FactorNum(
                                     1
                                    ) [FactorNum]
                                  ) [MulopEnd]
                                  Star(
                                  ) [Star]
                                  FactorDesignator(
                                    DesignatorIdent(
                                     a
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                ) [MulopList]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  MulopList(
                                    MulopEnd(
                                      FactorNum(
                                       2
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                    Star(
                                    ) [Star]
                                    FactorDesignator(
                                      DesignatorIdent(
                                       a
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                  ) [MulopList]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      MulopEnd(
                                        FactorNum(
                                         2
                                        ) [FactorNum]
                                      ) [MulopEnd]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopList(
                                  AddopEnd(
                                    Term(
                                      MulopList(
                                        MulopEnd(
                                          FactorDesignatorActPars(
                                            DesignatorIdent(
                                             sum
                                            ) [DesignatorIdent]
                                            ActualParsList(
                                              ActParsList(
                                                ActParsEnd(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        MulopEnd(
                                                          FactorDesignator(
                                                            DesignatorExpr(
                                                              DesignatorName(
                                                               niz
                                                              ) [DesignatorName]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorNum(
                                                                       1
                                                                      ) [FactorNum]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [DesignatorExpr]
                                                          ) [FactorDesignator]
                                                        ) [MulopEnd]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [ActParsEnd]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      MulopEnd(
                                                        FactorDesignator(
                                                          DesignatorExpr(
                                                            DesignatorName(
                                                             niz
                                                            ) [DesignatorName]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  MulopEnd(
                                                                    FactorNum(
                                                                     0
                                                                    ) [FactorNum]
                                                                  ) [MulopEnd]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [DesignatorExpr]
                                                        ) [FactorDesignator]
                                                      ) [MulopEnd]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [ActParsList]
                                            ) [ActualParsList]
                                          ) [FactorDesignatorActPars]
                                        ) [MulopEnd]
                                        Star(
                                        ) [Star]
                                        FactorDesignator(
                                          DesignatorIdent(
                                           a
                                          ) [DesignatorIdent]
                                        ) [FactorDesignator]
                                      ) [MulopList]
                                    ) [Term]
                                  ) [AddopEnd]
                                  Plus(
                                  ) [Plus]
                                  Term(
                                    MulopEnd(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopList]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementIfElse(
                            LParenIf(
                            ) [LParenIf]
                            Conditions(
                              OneCondTerm(
                                OneCondFact(
                                  CondFactExpr(
                                    ExprPositive(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorDesignatorActPars(
                                              DesignatorIdent(
                                               verify
                                              ) [DesignatorIdent]
                                              NoActPars(
                                              ) [NoActPars]
                                            ) [FactorDesignatorActPars]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprPositive]
                                  ) [CondFactExpr]
                                ) [OneCondFact]
                              ) [OneCondTerm]
                              OrCond(
                              ) [OrCond]
                              OneCondFact(
                                CondFactRelop(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       2
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                  EqualTo(
                                  ) [EqualTo]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        MulopEnd(
                                          FactorNum(
                                           4
                                          ) [FactorNum]
                                        ) [MulopEnd]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [CondFactRelop]
                              ) [OneCondFact]
                            ) [Conditions]
                            RParenIf(
                            ) [RParenIf]
                            StatementPrint(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignatorActPars(
                                        DesignatorIdent(
                                         ord
                                        ) [DesignatorIdent]
                                        ActualParsList(
                                          ActParsEnd(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorChar(
                                                     A
                                                    ) [FactorChar]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [ActParsEnd]
                                        ) [ActualParsList]
                                      ) [FactorDesignatorActPars]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [StatementPrint]
                            ElseSt(
                            ) [ElseSt]
                            StatementPrint(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignatorActPars(
                                        DesignatorIdent(
                                         ord
                                        ) [DesignatorIdent]
                                        ActualParsList(
                                          ActParsEnd(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorChar(
                                                     a
                                                    ) [FactorChar]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [ActParsEnd]
                                        ) [ActualParsList]
                                      ) [FactorDesignatorActPars]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [StatementPrint]
                          ) [StatementIfElse]
                          Statements(
                            StatementPrint(
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    MulopEnd(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         eol
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                    ) [MulopEnd]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [StatementPrint]
                            Statements(
                              StatementForCondFact(
                                ForSt(
                                ) [ForSt]
                                DesignatorStatementOne(
                                  DesignatorStatementMatched(
                                    DesignatorStatementAssignop(
                                      DesignatorIdent(
                                       i
                                      ) [DesignatorIdent]
                                      Assignop(
                                      ) [Assignop]
                                      ExprPositive(
                                        AddopEnd(
                                          Term(
                                            MulopEnd(
                                              FactorNum(
                                               0
                                              ) [FactorNum]
                                            ) [MulopEnd]
                                          ) [Term]
                                        ) [AddopEnd]
                                      ) [ExprPositive]
                                    ) [DesignatorStatementAssignop]
                                  ) [DesignatorStatementMatched]
                                ) [DesignatorStatementOne]
                                LSemiFor(
                                ) [LSemiFor]
                                CondFactFor(
                                  CondFactRelop(
                                    ExprPositive(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorDesignator(
                                              DesignatorIdent(
                                               i
                                              ) [DesignatorIdent]
                                            ) [FactorDesignator]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprPositive]
                                    Less(
                                    ) [Less]
                                    ExprPositive(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorNum(
                                             10
                                            ) [FactorNum]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprPositive]
                                  ) [CondFactRelop]
                                ) [CondFactFor]
                                RSemiFor(
                                ) [RSemiFor]
                                DesignatorStatementListSecond(
                                  DesignatorStatementEnd(
                                  ) [DesignatorStatementEnd]
                                ) [DesignatorStatementListSecond]
                                RParenFor(
                                ) [RParenFor]
                                StatementStatementList(
                                  Statements(
                                    StatementIf(
                                      LParenIf(
                                      ) [LParenIf]
                                      OneCondTerm(
                                        OneCondFact(
                                          CondFactRelop(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       i
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                            EqualTo(
                                            ) [EqualTo]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorNum(
                                                     3
                                                    ) [FactorNum]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [CondFactRelop]
                                        ) [OneCondFact]
                                      ) [OneCondTerm]
                                      RParenIf(
                                      ) [RParenIf]
                                      StatementStatementList(
                                        Statements(
                                          StatementDesignator(
                                            DesignatorStatementMatched(
                                              DesignatorStatementIncrement(
                                                DesignatorIdent(
                                                 i
                                                ) [DesignatorIdent]
                                              ) [DesignatorStatementIncrement]
                                            ) [DesignatorStatementMatched]
                                          ) [StatementDesignator]
                                          Statements(
                                            StatementContinue(
                                            ) [StatementContinue]
                                            NoStatement(
                                            ) [NoStatement]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [StatementStatementList]
                                    ) [StatementIf]
                                    Statements(
                                      StatementIf(
                                        LParenIf(
                                        ) [LParenIf]
                                        OneCondTerm(
                                          OneCondFact(
                                            CondFactRelop(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorDesignator(
                                                        DesignatorIdent(
                                                         i
                                                        ) [DesignatorIdent]
                                                      ) [FactorDesignator]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                              EqualTo(
                                              ) [EqualTo]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorNum(
                                                       4
                                                      ) [FactorNum]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [CondFactRelop]
                                          ) [OneCondFact]
                                        ) [OneCondTerm]
                                        RParenIf(
                                        ) [RParenIf]
                                        StatementBreak(
                                        ) [StatementBreak]
                                      ) [StatementIf]
                                      Statements(
                                        StatementDesignator(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorIdent(
                                               i
                                              ) [DesignatorIdent]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorDesignatorActPars(
                                                        DesignatorIdent(
                                                         inkrement
                                                        ) [DesignatorIdent]
                                                        ActualParsList(
                                                          ActParsList(
                                                            ActParsEnd(
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         i
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [ActParsEnd]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  MulopEnd(
                                                                    FactorNum(
                                                                     1
                                                                    ) [FactorNum]
                                                                  ) [MulopEnd]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [ActParsList]
                                                        ) [ActualParsList]
                                                      ) [FactorDesignatorActPars]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [StatementDesignator]
                                        NoStatement(
                                        ) [NoStatement]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [StatementStatementList]
                              ) [StatementForCondFact]
                              Statements(
                                StatementIfElse(
                                  LParenIf(
                                  ) [LParenIf]
                                  OneCondTerm(
                                    CondTerms(
                                      OneCondFact(
                                        CondFactRelop(
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     i
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                          EqualTo(
                                          ) [EqualTo]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorNum(
                                                   3
                                                  ) [FactorNum]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [CondFactRelop]
                                      ) [OneCondFact]
                                      CondFactExpr(
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              MulopEnd(
                                                FactorDesignatorActPars(
                                                  DesignatorIdent(
                                                   verify
                                                  ) [DesignatorIdent]
                                                  NoActPars(
                                                  ) [NoActPars]
                                                ) [FactorDesignatorActPars]
                                              ) [MulopEnd]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [CondFactExpr]
                                    ) [CondTerms]
                                  ) [OneCondTerm]
                                  RParenIf(
                                  ) [RParenIf]
                                  StatementPrint(
                                    ExprNegativ(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorNum(
                                             4
                                            ) [FactorNum]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprNegativ]
                                  ) [StatementPrint]
                                  ElseSt(
                                  ) [ElseSt]
                                  StatementPrint(
                                    ExprPositive(
                                      AddopEnd(
                                        Term(
                                          MulopEnd(
                                            FactorNum(
                                             4
                                            ) [FactorNum]
                                          ) [MulopEnd]
                                        ) [Term]
                                      ) [AddopEnd]
                                    ) [ExprPositive]
                                  ) [StatementPrint]
                                ) [StatementIfElse]
                                Statements(
                                  StatementRead(
                                    DesignatorExpr(
                                      DesignatorName(
                                       niz
                                      ) [DesignatorName]
                                      ExprPositive(
                                        AddopEnd(
                                          Term(
                                            MulopEnd(
                                              FactorNum(
                                               0
                                              ) [FactorNum]
                                            ) [MulopEnd]
                                          ) [Term]
                                        ) [AddopEnd]
                                      ) [ExprPositive]
                                    ) [DesignatorExpr]
                                  ) [StatementRead]
                                  Statements(
                                    StatementRead(
                                      DesignatorExpr(
                                        DesignatorName(
                                         niz
                                        ) [DesignatorName]
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              MulopEnd(
                                                FactorNum(
                                                 1
                                                ) [FactorNum]
                                              ) [MulopEnd]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [DesignatorExpr]
                                    ) [StatementRead]
                                    Statements(
                                      StatementRead(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [StatementRead]
                                      Statements(
                                        StatementPrint(
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                MulopEnd(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     eol
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                ) [MulopEnd]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [StatementPrint]
                                        Statements(
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  MulopEnd(
                                                    FactorDesignatorActPars(
                                                      DesignatorIdent(
                                                       sum
                                                      ) [DesignatorIdent]
                                                      ActualParsList(
                                                        ActParsList(
                                                          ActParsEnd(
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  MulopEnd(
                                                                    FactorDesignatorActPars(
                                                                      DesignatorIdent(
                                                                       sum
                                                                      ) [DesignatorIdent]
                                                                      ActualParsList(
                                                                        ActParsList(
                                                                          ActParsEnd(
                                                                            ExprPositive(
                                                                              AddopEnd(
                                                                                Term(
                                                                                  MulopEnd(
                                                                                    FactorDesignator(
                                                                                      DesignatorExpr(
                                                                                        DesignatorName(
                                                                                         niz
                                                                                        ) [DesignatorName]
                                                                                        ExprPositive(
                                                                                          AddopEnd(
                                                                                            Term(
                                                                                              MulopEnd(
                                                                                                FactorNum(
                                                                                                 0
                                                                                                ) [FactorNum]
                                                                                              ) [MulopEnd]
                                                                                            ) [Term]
                                                                                          ) [AddopEnd]
                                                                                        ) [ExprPositive]
                                                                                      ) [DesignatorExpr]
                                                                                    ) [FactorDesignator]
                                                                                  ) [MulopEnd]
                                                                                ) [Term]
                                                                              ) [AddopEnd]
                                                                            ) [ExprPositive]
                                                                          ) [ActParsEnd]
                                                                          ExprPositive(
                                                                            AddopEnd(
                                                                              Term(
                                                                                MulopEnd(
                                                                                  FactorDesignator(
                                                                                    DesignatorExpr(
                                                                                      DesignatorName(
                                                                                       niz
                                                                                      ) [DesignatorName]
                                                                                      ExprPositive(
                                                                                        AddopEnd(
                                                                                          Term(
                                                                                            MulopEnd(
                                                                                              FactorNum(
                                                                                               1
                                                                                              ) [FactorNum]
                                                                                            ) [MulopEnd]
                                                                                          ) [Term]
                                                                                        ) [AddopEnd]
                                                                                      ) [ExprPositive]
                                                                                    ) [DesignatorExpr]
                                                                                  ) [FactorDesignator]
                                                                                ) [MulopEnd]
                                                                              ) [Term]
                                                                            ) [AddopEnd]
                                                                          ) [ExprPositive]
                                                                        ) [ActParsList]
                                                                      ) [ActualParsList]
                                                                    ) [FactorDesignatorActPars]
                                                                  ) [MulopEnd]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [ActParsEnd]
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                MulopEnd(
                                                                  FactorDesignator(
                                                                    DesignatorExpr(
                                                                      DesignatorName(
                                                                       niz
                                                                      ) [DesignatorName]
                                                                      ExprPositive(
                                                                        AddopEnd(
                                                                          Term(
                                                                            MulopEnd(
                                                                              FactorNum(
                                                                               2
                                                                              ) [FactorNum]
                                                                            ) [MulopEnd]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                      ) [ExprPositive]
                                                                    ) [DesignatorExpr]
                                                                  ) [FactorDesignator]
                                                                ) [MulopEnd]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [ActParsList]
                                                      ) [ActualParsList]
                                                    ) [FactorDesignatorActPars]
                                                  ) [MulopEnd]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                          Statements(
                                            StatementPrint(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    MulopEnd(
                                                      FactorDesignator(
                                                        DesignatorIdent(
                                                         eol
                                                        ) [DesignatorIdent]
                                                      ) [FactorDesignator]
                                                    ) [MulopEnd]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [StatementPrint]
                                            Statements(
                                              StatementPrint(
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      MulopEnd(
                                                        FactorDesignatorActPars(
                                                          DesignatorIdent(
                                                           inkrement
                                                          ) [DesignatorIdent]
                                                          ActualParsList(
                                                            ActParsList(
                                                              ActParsEnd(
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorDesignator(
                                                                          DesignatorExpr(
                                                                            DesignatorName(
                                                                             niz
                                                                            ) [DesignatorName]
                                                                            ExprPositive(
                                                                              AddopEnd(
                                                                                Term(
                                                                                  MulopEnd(
                                                                                    FactorNum(
                                                                                     2
                                                                                    ) [FactorNum]
                                                                                  ) [MulopEnd]
                                                                                ) [Term]
                                                                              ) [AddopEnd]
                                                                            ) [ExprPositive]
                                                                          ) [DesignatorExpr]
                                                                        ) [FactorDesignator]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                              ) [ActParsEnd]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorNum(
                                                                       2
                                                                      ) [FactorNum]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [ActParsList]
                                                          ) [ActualParsList]
                                                        ) [FactorDesignatorActPars]
                                                      ) [MulopEnd]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [StatementPrint]
                                              Statements(
                                                StatementDesignator(
                                                  DesignatorStatementMatched(
                                                    DesignatorStatementAssignop(
                                                      DesignatorIdent(
                                                       a
                                                      ) [DesignatorIdent]
                                                      Assignop(
                                                      ) [Assignop]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            MulopEnd(
                                                              FactorNum(
                                                               3
                                                              ) [FactorNum]
                                                            ) [MulopEnd]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorStatementAssignop]
                                                  ) [DesignatorStatementMatched]
                                                ) [StatementDesignator]
                                                Statements(
                                                  StatementForCondFact(
                                                    ForSt(
                                                    ) [ForSt]
                                                    DesignatorStatementOne(
                                                      DesignatorStatementMatched(
                                                        DesignatorStatementAssignop(
                                                          DesignatorIdent(
                                                           i
                                                          ) [DesignatorIdent]
                                                          Assignop(
                                                          ) [Assignop]
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                MulopEnd(
                                                                  FactorNum(
                                                                   0
                                                                  ) [FactorNum]
                                                                ) [MulopEnd]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [DesignatorStatementAssignop]
                                                      ) [DesignatorStatementMatched]
                                                    ) [DesignatorStatementOne]
                                                    LSemiFor(
                                                    ) [LSemiFor]
                                                    CondFactFor(
                                                      CondFactRelop(
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              MulopEnd(
                                                                FactorDesignator(
                                                                  DesignatorIdent(
                                                                   i
                                                                  ) [DesignatorIdent]
                                                                ) [FactorDesignator]
                                                              ) [MulopEnd]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                        Less(
                                                        ) [Less]
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              MulopEnd(
                                                                FactorNum(
                                                                 3
                                                                ) [FactorNum]
                                                              ) [MulopEnd]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [CondFactRelop]
                                                    ) [CondFactFor]
                                                    RSemiFor(
                                                    ) [RSemiFor]
                                                    DesignatorStatementListSecond(
                                                      DesignatorStatementOne(
                                                        DesignatorStatementMatched(
                                                          DesignatorStatementIncrement(
                                                            DesignatorIdent(
                                                             i
                                                            ) [DesignatorIdent]
                                                          ) [DesignatorStatementIncrement]
                                                        ) [DesignatorStatementMatched]
                                                      ) [DesignatorStatementOne]
                                                    ) [DesignatorStatementListSecond]
                                                    RParenFor(
                                                    ) [RParenFor]
                                                    StatementStatementList(
                                                      Statements(
                                                        StatementDesignator(
                                                          DesignatorStatementMatched(
                                                            DesignatorStatementAssignop(
                                                              DesignatorExpr(
                                                                DesignatorName(
                                                                 niz
                                                                ) [DesignatorName]
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           i
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                              ) [DesignatorExpr]
                                                              Assignop(
                                                              ) [Assignop]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopList(
                                                                      MulopList(
                                                                        MulopEnd(
                                                                          FactorDesignator(
                                                                            DesignatorExpr(
                                                                              DesignatorName(
                                                                               niz
                                                                              ) [DesignatorName]
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorDesignator(
                                                                                        DesignatorIdent(
                                                                                         i
                                                                                        ) [DesignatorIdent]
                                                                                      ) [FactorDesignator]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [DesignatorExpr]
                                                                          ) [FactorDesignator]
                                                                        ) [MulopEnd]
                                                                        Star(
                                                                        ) [Star]
                                                                        FactorNum(
                                                                         2
                                                                        ) [FactorNum]
                                                                      ) [MulopList]
                                                                      Star(
                                                                      ) [Star]
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         a
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                    ) [MulopList]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [DesignatorStatementAssignop]
                                                          ) [DesignatorStatementMatched]
                                                        ) [StatementDesignator]
                                                        NoStatement(
                                                        ) [NoStatement]
                                                      ) [Statements]
                                                    ) [StatementStatementList]
                                                  ) [StatementForCondFact]
                                                  Statements(
                                                    StatementForCondFact(
                                                      ForSt(
                                                      ) [ForSt]
                                                      DesignatorStatementOne(
                                                        DesignatorStatementMatched(
                                                          DesignatorStatementAssignop(
                                                            DesignatorIdent(
                                                             i
                                                            ) [DesignatorIdent]
                                                            Assignop(
                                                            ) [Assignop]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  MulopEnd(
                                                                    FactorNum(
                                                                     0
                                                                    ) [FactorNum]
                                                                  ) [MulopEnd]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [DesignatorStatementAssignop]
                                                        ) [DesignatorStatementMatched]
                                                      ) [DesignatorStatementOne]
                                                      LSemiFor(
                                                      ) [LSemiFor]
                                                      CondFactFor(
                                                        CondFactRelop(
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                MulopEnd(
                                                                  FactorDesignator(
                                                                    DesignatorIdent(
                                                                     i
                                                                    ) [DesignatorIdent]
                                                                  ) [FactorDesignator]
                                                                ) [MulopEnd]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                          Less(
                                                          ) [Less]
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                MulopEnd(
                                                                  FactorNum(
                                                                   3
                                                                  ) [FactorNum]
                                                                ) [MulopEnd]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [CondFactRelop]
                                                      ) [CondFactFor]
                                                      RSemiFor(
                                                      ) [RSemiFor]
                                                      DesignatorStatementListSecond(
                                                        DesignatorStatementOne(
                                                          DesignatorStatementMatched(
                                                            DesignatorStatementIncrement(
                                                              DesignatorIdent(
                                                               i
                                                              ) [DesignatorIdent]
                                                            ) [DesignatorStatementIncrement]
                                                          ) [DesignatorStatementMatched]
                                                        ) [DesignatorStatementOne]
                                                      ) [DesignatorStatementListSecond]
                                                      RParenFor(
                                                      ) [RParenFor]
                                                      StatementPrint(
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              MulopEnd(
                                                                FactorDesignator(
                                                                  DesignatorExpr(
                                                                    DesignatorName(
                                                                     niz
                                                                    ) [DesignatorName]
                                                                    ExprPositive(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorDesignator(
                                                                              DesignatorIdent(
                                                                               i
                                                                              ) [DesignatorIdent]
                                                                            ) [FactorDesignator]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                    ) [ExprPositive]
                                                                  ) [DesignatorExpr]
                                                                ) [FactorDesignator]
                                                              ) [MulopEnd]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [StatementPrint]
                                                    ) [StatementForCondFact]
                                                    Statements(
                                                      StatementPrint(
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              MulopEnd(
                                                                FactorDesignator(
                                                                  DesignatorIdent(
                                                                   eol
                                                                  ) [DesignatorIdent]
                                                                ) [FactorDesignator]
                                                              ) [MulopEnd]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [StatementPrint]
                                                      Statements(
                                                        StatementDesignator(
                                                          DesignatorStatementMatched(
                                                            DesignatorStatementAssignop(
                                                              DesignatorIdent(
                                                               nizr
                                                              ) [DesignatorIdent]
                                                              Assignop(
                                                              ) [Assignop]
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorNum(
                                                                       0
                                                                      ) [FactorNum]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [DesignatorStatementAssignop]
                                                          ) [DesignatorStatementMatched]
                                                        ) [StatementDesignator]
                                                        Statements(
                                                          StatementForCondFact(
                                                            ForSt(
                                                            ) [ForSt]
                                                            DesignatorStatementOne(
                                                              DesignatorStatementMatched(
                                                                DesignatorStatementAssignop(
                                                                  DesignatorIdent(
                                                                   i
                                                                  ) [DesignatorIdent]
                                                                  Assignop(
                                                                  ) [Assignop]
                                                                  ExprPositive(
                                                                    AddopEnd(
                                                                      Term(
                                                                        MulopEnd(
                                                                          FactorNum(
                                                                           0
                                                                          ) [FactorNum]
                                                                        ) [MulopEnd]
                                                                      ) [Term]
                                                                    ) [AddopEnd]
                                                                  ) [ExprPositive]
                                                                ) [DesignatorStatementAssignop]
                                                              ) [DesignatorStatementMatched]
                                                            ) [DesignatorStatementOne]
                                                            LSemiFor(
                                                            ) [LSemiFor]
                                                            CondFactFor(
                                                              CondFactRelop(
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           i
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                                Less(
                                                                ) [Less]
                                                                ExprPositive(
                                                                  AddopEnd(
                                                                    Term(
                                                                      MulopEnd(
                                                                        FactorNum(
                                                                         3
                                                                        ) [FactorNum]
                                                                      ) [MulopEnd]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                ) [ExprPositive]
                                                              ) [CondFactRelop]
                                                            ) [CondFactFor]
                                                            RSemiFor(
                                                            ) [RSemiFor]
                                                            DesignatorStatementListSecond(
                                                              DesignatorStatementOne(
                                                                DesignatorStatementMatched(
                                                                  DesignatorStatementIncrement(
                                                                    DesignatorIdent(
                                                                     i
                                                                    ) [DesignatorIdent]
                                                                  ) [DesignatorStatementIncrement]
                                                                ) [DesignatorStatementMatched]
                                                              ) [DesignatorStatementOne]
                                                            ) [DesignatorStatementListSecond]
                                                            RParenFor(
                                                            ) [RParenFor]
                                                            StatementDesignator(
                                                              DesignatorStatementMatched(
                                                                DesignatorStatementAssignop(
                                                                  DesignatorIdent(
                                                                   nizr
                                                                  ) [DesignatorIdent]
                                                                  Assignop(
                                                                  ) [Assignop]
                                                                  ExprPositive(
                                                                    AddopList(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorDesignator(
                                                                              DesignatorIdent(
                                                                               nizr
                                                                              ) [DesignatorIdent]
                                                                            ) [FactorDesignator]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                      Plus(
                                                                      ) [Plus]
                                                                      Term(
                                                                        MulopList(
                                                                          MulopEnd(
                                                                            FactorDesignator(
                                                                              DesignatorExpr(
                                                                                DesignatorName(
                                                                                 niz
                                                                                ) [DesignatorName]
                                                                                ExprPositive(
                                                                                  AddopEnd(
                                                                                    Term(
                                                                                      MulopEnd(
                                                                                        FactorDesignator(
                                                                                          DesignatorIdent(
                                                                                           i
                                                                                          ) [DesignatorIdent]
                                                                                        ) [FactorDesignator]
                                                                                      ) [MulopEnd]
                                                                                    ) [Term]
                                                                                  ) [AddopEnd]
                                                                                ) [ExprPositive]
                                                                              ) [DesignatorExpr]
                                                                            ) [FactorDesignator]
                                                                          ) [MulopEnd]
                                                                          Star(
                                                                          ) [Star]
                                                                          FactorDesignator(
                                                                            DesignatorExpr(
                                                                              DesignatorName(
                                                                               niz
                                                                              ) [DesignatorName]
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorDesignator(
                                                                                        DesignatorIdent(
                                                                                         i
                                                                                        ) [DesignatorIdent]
                                                                                      ) [FactorDesignator]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [DesignatorExpr]
                                                                          ) [FactorDesignator]
                                                                        ) [MulopList]
                                                                      ) [Term]
                                                                    ) [AddopList]
                                                                  ) [ExprPositive]
                                                                ) [DesignatorStatementAssignop]
                                                              ) [DesignatorStatementMatched]
                                                            ) [StatementDesignator]
                                                          ) [StatementForCondFact]
                                                          Statements(
                                                            StatementPrint(
                                                              ExprPositive(
                                                                AddopEnd(
                                                                  Term(
                                                                    MulopEnd(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         nizr
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                    ) [MulopEnd]
                                                                  ) [Term]
                                                                ) [AddopEnd]
                                                              ) [ExprPositive]
                                                            ) [StatementPrint]
                                                            Statements(
                                                              StatementDesignator(
                                                                DesignatorStatementMatched(
                                                                  DesignatorStatementAssignop(
                                                                    DesignatorIdent(
                                                                     niz2
                                                                    ) [DesignatorIdent]
                                                                    Assignop(
                                                                    ) [Assignop]
                                                                    ExprPositive(
                                                                      AddopEnd(
                                                                        Term(
                                                                          MulopEnd(
                                                                            FactorNew(
                                                                              Type(
                                                                               int
                                                                              ) [Type]
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorNum(
                                                                                       2
                                                                                      ) [FactorNum]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [FactorNew]
                                                                          ) [MulopEnd]
                                                                        ) [Term]
                                                                      ) [AddopEnd]
                                                                    ) [ExprPositive]
                                                                  ) [DesignatorStatementAssignop]
                                                                ) [DesignatorStatementMatched]
                                                              ) [StatementDesignator]
                                                              Statements(
                                                                StatementDesignator(
                                                                  DesignatorStatementMatched(
                                                                    DesignatorStatementAssignop(
                                                                      DesignatorIdent(
                                                                       niz3
                                                                      ) [DesignatorIdent]
                                                                      Assignop(
                                                                      ) [Assignop]
                                                                      ExprPositive(
                                                                        AddopEnd(
                                                                          Term(
                                                                            MulopEnd(
                                                                              FactorNew(
                                                                                Type(
                                                                                 int
                                                                                ) [Type]
                                                                                ExprPositive(
                                                                                  AddopEnd(
                                                                                    Term(
                                                                                      MulopEnd(
                                                                                        FactorNum(
                                                                                         1
                                                                                        ) [FactorNum]
                                                                                      ) [MulopEnd]
                                                                                    ) [Term]
                                                                                  ) [AddopEnd]
                                                                                ) [ExprPositive]
                                                                              ) [FactorNew]
                                                                            ) [MulopEnd]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                      ) [ExprPositive]
                                                                    ) [DesignatorStatementAssignop]
                                                                  ) [DesignatorStatementMatched]
                                                                ) [StatementDesignator]
                                                                Statements(
                                                                  StatementDesignator(
                                                                    DesignatorStatementMatched(
                                                                      DesignatorStatementAssignop(
                                                                        DesignatorExpr(
                                                                          DesignatorName(
                                                                           niz2
                                                                          ) [DesignatorName]
                                                                          ExprPositive(
                                                                            AddopEnd(
                                                                              Term(
                                                                                MulopEnd(
                                                                                  FactorNum(
                                                                                   0
                                                                                  ) [FactorNum]
                                                                                ) [MulopEnd]
                                                                              ) [Term]
                                                                            ) [AddopEnd]
                                                                          ) [ExprPositive]
                                                                        ) [DesignatorExpr]
                                                                        Assignop(
                                                                        ) [Assignop]
                                                                        ExprPositive(
                                                                          AddopEnd(
                                                                            Term(
                                                                              MulopEnd(
                                                                                FactorNum(
                                                                                 2
                                                                                ) [FactorNum]
                                                                              ) [MulopEnd]
                                                                            ) [Term]
                                                                          ) [AddopEnd]
                                                                        ) [ExprPositive]
                                                                      ) [DesignatorStatementAssignop]
                                                                    ) [DesignatorStatementMatched]
                                                                  ) [StatementDesignator]
                                                                  Statements(
                                                                    StatementDesignator(
                                                                      DesignatorStatementMatched(
                                                                        DesignatorStatementAssignop(
                                                                          DesignatorExpr(
                                                                            DesignatorName(
                                                                             niz2
                                                                            ) [DesignatorName]
                                                                            ExprPositive(
                                                                              AddopEnd(
                                                                                Term(
                                                                                  MulopEnd(
                                                                                    FactorNum(
                                                                                     1
                                                                                    ) [FactorNum]
                                                                                  ) [MulopEnd]
                                                                                ) [Term]
                                                                              ) [AddopEnd]
                                                                            ) [ExprPositive]
                                                                          ) [DesignatorExpr]
                                                                          Assignop(
                                                                          ) [Assignop]
                                                                          ExprPositive(
                                                                            AddopEnd(
                                                                              Term(
                                                                                MulopEnd(
                                                                                  FactorNum(
                                                                                   2
                                                                                  ) [FactorNum]
                                                                                ) [MulopEnd]
                                                                              ) [Term]
                                                                            ) [AddopEnd]
                                                                          ) [ExprPositive]
                                                                        ) [DesignatorStatementAssignop]
                                                                      ) [DesignatorStatementMatched]
                                                                    ) [StatementDesignator]
                                                                    Statements(
                                                                      StatementDesignator(
                                                                        DesignatorStatementMatched(
                                                                          DesignatorStatementAssignop(
                                                                            DesignatorExpr(
                                                                              DesignatorName(
                                                                               niz3
                                                                              ) [DesignatorName]
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorNum(
                                                                                       0
                                                                                      ) [FactorNum]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [DesignatorExpr]
                                                                            Assignop(
                                                                            ) [Assignop]
                                                                            ExprPositive(
                                                                              AddopEnd(
                                                                                Term(
                                                                                  MulopEnd(
                                                                                    FactorNum(
                                                                                     3
                                                                                    ) [FactorNum]
                                                                                  ) [MulopEnd]
                                                                                ) [Term]
                                                                              ) [AddopEnd]
                                                                            ) [ExprPositive]
                                                                          ) [DesignatorStatementAssignop]
                                                                        ) [DesignatorStatementMatched]
                                                                      ) [StatementDesignator]
                                                                      Statements(
                                                                        StatementPrint(
                                                                          ExprPositive(
                                                                            AddopEnd(
                                                                              Term(
                                                                                MulopEnd(
                                                                                  FactorDesignator(
                                                                                    DesignatorExpr(
                                                                                      DesignatorName(
                                                                                       niz2
                                                                                      ) [DesignatorName]
                                                                                      ExprPositive(
                                                                                        AddopEnd(
                                                                                          Term(
                                                                                            MulopEnd(
                                                                                              FactorNum(
                                                                                               0
                                                                                              ) [FactorNum]
                                                                                            ) [MulopEnd]
                                                                                          ) [Term]
                                                                                        ) [AddopEnd]
                                                                                      ) [ExprPositive]
                                                                                    ) [DesignatorExpr]
                                                                                  ) [FactorDesignator]
                                                                                ) [MulopEnd]
                                                                              ) [Term]
                                                                            ) [AddopEnd]
                                                                          ) [ExprPositive]
                                                                        ) [StatementPrint]
                                                                        Statements(
                                                                          StatementPrint(
                                                                            ExprPositive(
                                                                              AddopEnd(
                                                                                Term(
                                                                                  MulopEnd(
                                                                                    FactorDesignator(
                                                                                      DesignatorExpr(
                                                                                        DesignatorName(
                                                                                         niz2
                                                                                        ) [DesignatorName]
                                                                                        ExprPositive(
                                                                                          AddopEnd(
                                                                                            Term(
                                                                                              MulopEnd(
                                                                                                FactorNum(
                                                                                                 1
                                                                                                ) [FactorNum]
                                                                                              ) [MulopEnd]
                                                                                            ) [Term]
                                                                                          ) [AddopEnd]
                                                                                        ) [ExprPositive]
                                                                                      ) [DesignatorExpr]
                                                                                    ) [FactorDesignator]
                                                                                  ) [MulopEnd]
                                                                                ) [Term]
                                                                              ) [AddopEnd]
                                                                            ) [ExprPositive]
                                                                          ) [StatementPrint]
                                                                          Statements(
                                                                            StatementPrint(
                                                                              ExprPositive(
                                                                                AddopEnd(
                                                                                  Term(
                                                                                    MulopEnd(
                                                                                      FactorDesignator(
                                                                                        DesignatorExpr(
                                                                                          DesignatorName(
                                                                                           niz3
                                                                                          ) [DesignatorName]
                                                                                          ExprPositive(
                                                                                            AddopEnd(
                                                                                              Term(
                                                                                                MulopEnd(
                                                                                                  FactorNum(
                                                                                                   0
                                                                                                  ) [FactorNum]
                                                                                                ) [MulopEnd]
                                                                                              ) [Term]
                                                                                            ) [AddopEnd]
                                                                                          ) [ExprPositive]
                                                                                        ) [DesignatorExpr]
                                                                                      ) [FactorDesignator]
                                                                                    ) [MulopEnd]
                                                                                  ) [Term]
                                                                                ) [AddopEnd]
                                                                              ) [ExprPositive]
                                                                            ) [StatementPrint]
                                                                            Statements(
                                                                              StatementPrint(
                                                                                ExprPositive(
                                                                                  AddopEnd(
                                                                                    Term(
                                                                                      MulopEnd(
                                                                                        FactorDesignator(
                                                                                          DesignatorIdent(
                                                                                           eol
                                                                                          ) [DesignatorIdent]
                                                                                        ) [FactorDesignator]
                                                                                      ) [MulopEnd]
                                                                                    ) [Term]
                                                                                  ) [AddopEnd]
                                                                                ) [ExprPositive]
                                                                              ) [StatementPrint]
                                                                              NoStatement(
                                                                              ) [NoStatement]
                                                                            ) [Statements]
                                                                          ) [Statements]
                                                                        ) [Statements]
                                                                      ) [Statements]
                                                                    ) [Statements]
                                                                  ) [Statements]
                                                                ) [Statements]
                                                              ) [Statements]
                                                            ) [Statements]
                                                          ) [Statements]
                                                        ) [Statements]
                                                      ) [Statements]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  01:11:11,392 - ===================================
INFO  01:11:11,393 - Pocetak programa test302.
INFO  01:11:11,393 - Deklarisana je promenljiva i na liniji 5
INFO  01:11:11,393 - Deklarisana je promenljiva ibool na liniji 6
INFO  01:11:11,393 - Deklarisana je promenljiva niz na liniji 8
INFO  01:11:11,393 - Deklarisana je promenljiva niz2 na liniji 8
INFO  01:11:11,393 - Deklarisana je promenljiva niz3 na liniji 8
INFO  01:11:11,393 - Deklarisana je promenljiva a na liniji 9
INFO  01:11:11,393 - Deklarisana je promenljiva b na liniji 9
INFO  01:11:11,393 - Deklarisana je promenljiva nizr na liniji 10
INFO  01:11:11,393 - Obradjuje se funkcija sum na liniji 14
INFO  01:11:11,393 - Deklarisan je parametar funkcije z na liniji 14
INFO  01:11:11,393 - Deklarisan je parametar funkcije d na liniji 14
INFO  01:11:11,394 - Dobra povratna vrednost funkcije na liniji 16
INFO  01:11:11,394 - Obradjuje se funkcija inkrement na liniji 20
INFO  01:11:11,394 - Deklarisan je parametar funkcije a na liniji 20
INFO  01:11:11,394 - Deklarisan je parametar funkcije inc na liniji 20
INFO  01:11:11,394 - Deklarisana je promenljiva pom na liniji 21
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 23
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 24
INFO  01:11:11,394 - Pronadjen poziv funkcije sum na liniji 26
INFO  01:11:11,394 - Dobra povratna vrednost funkcije na liniji 26
INFO  01:11:11,394 - Obradjuje se funkcija verify na liniji 30
INFO  01:11:11,394 - Obradjena funkcija PRINT na liniji 31
INFO  01:11:11,394 - Dobra povratna vrednost funkcije na liniji 32
INFO  01:11:11,394 - Obradjuje se funkcija main na liniji 35
INFO  01:11:11,394 - Obradjena funkcija PRINT na liniji 38
INFO  01:11:11,394 - Obradjena funkcija PRINT na liniji 39
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 41
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 43
INFO  01:11:11,394 - Obradjena funkcija PRINT na liniji 47
INFO  01:11:11,394 - Obradjena funkcija PRINT na liniji 48
INFO  01:11:11,394 - Designator i expr su odgovarajuceg tipa na liniji 49
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 50
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 51
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 52
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Pronadjen poziv funkcije sum na liniji 53
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 53
INFO  01:11:11,395 - Pronadjen poziv funkcije verify na liniji 54
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Pronadjen poziv funkcije ord na liniji 54
INFO  01:11:11,395 - Obradjena funkcija PRINT na liniji 54
INFO  01:11:11,395 - Pronadjen poziv funkcije ord na liniji 55
INFO  01:11:11,395 - Obradjena funkcija PRINT na liniji 55
INFO  01:11:11,395 - Obradjena funkcija PRINT na liniji 57
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 58
INFO  01:11:11,395 - Pronadjen poziv funkcije inkrement na liniji 65
INFO  01:11:11,395 - Designator i expr su odgovarajuceg tipa na liniji 65
INFO  01:11:11,395 - Pronadjen poziv funkcije verify na liniji 68
INFO  01:11:11,395 - Obradjena funkcija PRINT na liniji 68
INFO  01:11:11,395 - Obradjena funkcija PRINT na liniji 69
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,395 - Funkciji READ je prosledjen element niza 
INFO  01:11:11,395 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Funkciji READ je prosledjen element niza 
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Funkciji READ je prosledjen element niza 
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 74
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Pronadjen poziv funkcije sum na liniji 75
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Pronadjen poziv funkcije sum na liniji 75
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 75
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 77
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Pronadjen poziv funkcije inkrement na liniji 78
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 78
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 80
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 81
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 82
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 85
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 85
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 86
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 88
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 89
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Kreiran/promenjen element niza niz
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 89
INFO  01:11:11,396 - Obradjena funkcija PRINT na liniji 90
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 93
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 94
INFO  01:11:11,396 - Kreiran/promenjen element niza niz2
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 95
INFO  01:11:11,396 - Kreiran/promenjen element niza niz2
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 96
INFO  01:11:11,396 - Kreiran/promenjen element niza niz3
INFO  01:11:11,396 - Designator i expr su odgovarajuceg tipa na liniji 97
INFO  01:11:11,396 - Kreiran/promenjen element niza niz2
INFO  01:11:11,397 - Obradjena funkcija PRINT na liniji 99
INFO  01:11:11,397 - Kreiran/promenjen element niza niz2
INFO  01:11:11,397 - Obradjena funkcija PRINT na liniji 100
INFO  01:11:11,397 - Kreiran/promenjen element niza niz3
INFO  01:11:11,397 - Obradjena funkcija PRINT na liniji 101
INFO  01:11:11,397 - Obradjena funkcija PRINT na liniji 102
INFO  01:11:11,397 - ===================================
INFO  01:11:11,405 - Parsiranje uspesno zavrseno!
