INFO  11:05:46,113 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  11:05:46,176 - #2 program
INFO  11:05:46,177 - #49 test301
INFO  11:05:46,177 - #6 const
INFO  11:05:46,178 - #49 int
INFO  11:05:46,178 - #49 nula
INFO  11:05:46,179 - #7 =
INFO  11:05:46,179 - #48 0
INFO  11:05:46,179 - #8 ;
INFO  11:05:46,180 - #6 const
INFO  11:05:46,180 - #49 int
INFO  11:05:46,180 - #49 jedan
INFO  11:05:46,180 - #7 =
INFO  11:05:46,180 - #48 1
INFO  11:05:46,180 - #8 ;
INFO  11:05:46,180 - #6 const
INFO  11:05:46,181 - #49 int
INFO  11:05:46,181 - #49 pet
INFO  11:05:46,181 - #7 =
INFO  11:05:46,181 - #48 5
INFO  11:05:46,181 - #8 ;
INFO  11:05:46,181 - #4 {
INFO  11:05:46,184 - #49 int
INFO  11:05:46,185 - #49 saberi
INFO  11:05:46,185 - #20 (
INFO  11:05:46,185 - #49 int
INFO  11:05:46,185 - #49 a
INFO  11:05:46,185 - #9 ,
INFO  11:05:46,185 - #49 int
INFO  11:05:46,185 - #49 b
INFO  11:05:46,185 - #21 )
INFO  11:05:46,186 - #4 {
INFO  11:05:46,186 - #22 print
INFO  11:05:46,186 - #20 (
INFO  11:05:46,186 - #49 a
INFO  11:05:46,186 - #21 )
INFO  11:05:46,187 - #8 ;
INFO  11:05:46,187 - #22 print
INFO  11:05:46,187 - #20 (
INFO  11:05:46,187 - #49 b
INFO  11:05:46,188 - #21 )
INFO  11:05:46,188 - #8 ;
INFO  11:05:46,188 - #18 return
INFO  11:05:46,188 - #49 a
INFO  11:05:46,188 - #37 +
INFO  11:05:46,188 - #49 b
INFO  11:05:46,190 - #8 ;
INFO  11:05:46,190 - #5 }
INFO  11:05:46,191 - #41 void
INFO  11:05:46,192 - #49 main
INFO  11:05:46,192 - #20 (
INFO  11:05:46,192 - #21 )
INFO  11:05:46,193 - #49 int
INFO  11:05:46,193 - #49 i
INFO  11:05:46,193 - #9 ,
INFO  11:05:46,194 - #49 y
INFO  11:05:46,194 - #9 ,
INFO  11:05:46,194 - #49 z
INFO  11:05:46,194 - #8 ;
INFO  11:05:46,194 - #4 {
INFO  11:05:46,194 - #49 i
INFO  11:05:46,194 - #7 =
INFO  11:05:46,194 - #48 3
INFO  11:05:46,195 - #8 ;
INFO  11:05:46,195 - #23 for
INFO  11:05:46,195 - #20 (
INFO  11:05:46,196 - #8 ;
INFO  11:05:46,197 - #8 ;
INFO  11:05:46,197 - #21 )
INFO  11:05:46,197 - #4 {
INFO  11:05:46,197 - #14 if
INFO  11:05:46,197 - #20 (
INFO  11:05:46,197 - #49 i
INFO  11:05:46,198 - #31 ==
INFO  11:05:46,198 - #48 3
INFO  11:05:46,199 - #21 )
INFO  11:05:46,200 - #16 break
INFO  11:05:46,201 - #8 ;
INFO  11:05:46,201 - #15 else
INFO  11:05:46,201 - #22 print
INFO  11:05:46,202 - #20 (
INFO  11:05:46,202 - #48 1
INFO  11:05:46,202 - #21 )
INFO  11:05:46,202 - #8 ;
INFO  11:05:46,202 - #5 }
INFO  11:05:46,203 - #22 print
INFO  11:05:46,203 - #20 (
INFO  11:05:46,203 - #48 2
INFO  11:05:46,203 - #21 )
INFO  11:05:46,203 - #8 ;
INFO  11:05:46,203 - #5 }
INFO  11:05:46,203 - #5 }
INFO  11:05:46,213 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstNum(
               nula
               0
              ) [ConstNum]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclarationList(
          Type(
           int
          ) [Type]
          ConstDeclarationsEnd(
            ConstNum(
             jedan
             1
            ) [ConstNum]
          ) [ConstDeclarationsEnd]
        ) [ConstDeclarationList]
      ) [ConstDeclaration]
    ) [Declarations]
    ConstDeclaration(
      ConstDeclarationList(
        Type(
         int
        ) [Type]
        ConstDeclarationsEnd(
          ConstNum(
           pet
           5
          ) [ConstNum]
        ) [ConstDeclarationsEnd]
      ) [ConstDeclarationList]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    MethodDeclarationList(
      NoMethodDeclaration(
      ) [NoMethodDeclaration]
      MethodDecl(
        MethodNameAnyType(
          Type(
           int
          ) [Type]
         saberi
        ) [MethodNameAnyType]
        MethodParameters(
          FormParsList(
            FormParsVar(
              Type(
               int
              ) [Type]
             a
            ) [FormParsVar]
            FormParsEnd(
              FormParsVar(
                Type(
                 int
                ) [Type]
               b
              ) [FormParsVar]
            ) [FormParsEnd]
          ) [FormParsList]
        ) [MethodParameters]
        NoDeclarations(
        ) [NoDeclarations]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       a
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          Statements(
            StatementPrint(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorDesignator(
                        DesignatorIdent(
                         b
                        ) [DesignatorIdent]
                      ) [FactorDesignator]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementPrint]
            Statements(
              StatementReturnExpr(
                ExprPositive(
                  AddopList(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             a
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                    Plus(
                    ) [Plus]
                    Term(
                      MulopEnd(
                        FactorDesignator(
                          DesignatorIdent(
                           b
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopList]
                ) [ExprPositive]
              ) [StatementReturnExpr]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarationList]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarIdent(
                VarName(
                 i
                ) [VarName]
              ) [VarIdent]
              VarDeclarations(
                VarIdent(
                  VarName(
                   y
                  ) [VarName]
                ) [VarIdent]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     z
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               i
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       3
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementFor(
            ForSt(
            ) [ForSt]
            DesignatorStatementEnd(
            ) [DesignatorStatementEnd]
            DesignatorStatementEnd(
            ) [DesignatorStatementEnd]
            StatementStatementList(
              Statements(
                StatementIfElse(
                  LParenIf(
                  ) [LParenIf]
                  OneCondTerm(
                    OneCondFact(
                      CondFactRelop(
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorDesignator(
                                  DesignatorIdent(
                                   i
                                  ) [DesignatorIdent]
                                ) [FactorDesignator]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                        EqualTo(
                        ) [EqualTo]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              MulopEnd(
                                FactorNum(
                                 3
                                ) [FactorNum]
                              ) [MulopEnd]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [CondFactRelop]
                    ) [OneCondFact]
                  ) [OneCondTerm]
                  RParenIf(
                  ) [RParenIf]
                  StatementBreak(
                  ) [StatementBreak]
                  ElseSt(
                  ) [ElseSt]
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          MulopEnd(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [MulopEnd]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                ) [StatementIfElse]
                NoStatement(
                ) [NoStatement]
              ) [Statements]
            ) [StatementStatementList]
          ) [StatementFor]
          Statements(
            StatementPrint(
              ExprPositive(
                AddopEnd(
                  Term(
                    MulopEnd(
                      FactorNum(
                       2
                      ) [FactorNum]
                    ) [MulopEnd]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [StatementPrint]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  11:05:46,213 - ===================================
INFO  11:05:46,213 - Pocetak programa test301.
INFO  11:05:46,214 - Deklarisana je konstanta nula na liniji 5
INFO  11:05:46,214 - Deklarisana je konstanta jedan na liniji 6
INFO  11:05:46,214 - Deklarisana je konstanta pet na liniji 7
INFO  11:05:46,214 - Obradjuje se funkcija saberi na liniji 11
INFO  11:05:46,215 - Deklarisan je parametar funkcije a na liniji 11
INFO  11:05:46,215 - Deklarisan je parametar funkcije b na liniji 11
INFO  11:05:46,215 - Obradjena funkcija PRINT na liniji 13
INFO  11:05:46,215 - Obradjena funkcija PRINT na liniji 14
INFO  11:05:46,216 - Dobra povratna vrednost funkcije na liniji 15
INFO  11:05:46,216 - Obradjuje se funkcija main na liniji 18
INFO  11:05:46,216 - Deklarisana je promenljiva i na liniji 19
INFO  11:05:46,216 - Deklarisana je promenljiva y na liniji 19
INFO  11:05:46,216 - Deklarisana je promenljiva z na liniji 19
INFO  11:05:46,216 - Designator i expr su odgovarajuceg tipa na liniji 21
INFO  11:05:46,216 - Obradjena funkcija PRINT na liniji 24
INFO  11:05:46,217 - Obradjena funkcija PRINT na liniji 26
INFO  11:05:46,217 - ===================================
INFO  11:05:46,225 - Parsiranje uspesno zavrseno!
