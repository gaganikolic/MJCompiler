INFO  17:10:45,171 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  17:10:45,253 - #2 program
INFO  17:10:45,253 - #49 test301
INFO  17:10:45,253 - #4 {
INFO  17:10:45,256 - #41 void
INFO  17:10:45,258 - #49 main
INFO  17:10:45,258 - #20 (
INFO  17:10:45,258 - #21 )
INFO  17:10:45,260 - #49 int
INFO  17:10:45,260 - #49 i
INFO  17:10:45,261 - #9 ,
INFO  17:10:45,263 - #49 y
INFO  17:10:45,263 - #9 ,
INFO  17:10:45,263 - #49 z
INFO  17:10:45,263 - #8 ;
INFO  17:10:45,264 - #4 {
INFO  17:10:45,264 - #23 for
INFO  17:10:45,264 - #20 (
INFO  17:10:45,266 - #49 i
INFO  17:10:45,266 - #7 =
INFO  17:10:45,266 - #48 0
INFO  17:10:45,267 - #8 ;
INFO  17:10:45,269 - #49 i
INFO  17:10:45,274 - #35 <
INFO  17:10:45,274 - #48 20
INFO  17:10:45,277 - #8 ;
INFO  17:10:45,278 - #49 i
INFO  17:10:45,278 - #24 ++
INFO  17:10:45,278 - #21 )
INFO  17:10:45,278 - #4 {
INFO  17:10:45,280 - #14 if
INFO  17:10:45,280 - #20 (
INFO  17:10:45,280 - #49 i
INFO  17:10:45,281 - #31 ==
INFO  17:10:45,282 - #48 5
INFO  17:10:45,283 - #21 )
INFO  17:10:45,283 - #4 {
INFO  17:10:45,284 - #22 print
INFO  17:10:45,285 - #20 (
INFO  17:10:45,285 - #50 b
INFO  17:10:45,285 - #21 )
INFO  17:10:45,285 - #8 ;
INFO  17:10:45,286 - #16 break
INFO  17:10:45,286 - #8 ;
INFO  17:10:45,286 - #5 }
INFO  17:10:45,288 - #22 print
INFO  17:10:45,289 - #20 (
INFO  17:10:45,289 - #49 i
INFO  17:10:45,289 - #21 )
INFO  17:10:45,289 - #8 ;
INFO  17:10:45,289 - #5 }
INFO  17:10:45,290 - #22 print
INFO  17:10:45,290 - #20 (
INFO  17:10:45,291 - #50 k
INFO  17:10:45,291 - #21 )
INFO  17:10:45,291 - #8 ;
INFO  17:10:45,291 - #5 }
INFO  17:10:45,291 - #5 }
INFO  17:10:45,308 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             int
            ) [Type]
            VarDeclarations(
              VarIdent(
                VarName(
                 i
                ) [VarName]
              ) [VarIdent]
              VarDeclarations(
                VarIdent(
                  VarName(
                   y
                  ) [VarName]
                ) [VarIdent]
                VarDeclarationsEnd(
                  VarIdent(
                    VarName(
                     z
                    ) [VarName]
                  ) [VarIdent]
                ) [VarDeclarationsEnd]
              ) [VarDeclarations]
            ) [VarDeclarations]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementForCondFact(
          ForSt(
          ) [ForSt]
          DesignatorStatementOne(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      MulopEnd(
                        FactorNum(
                         0
                        ) [FactorNum]
                      ) [MulopEnd]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [DesignatorStatementOne]
          LSemiFor(
          ) [LSemiFor]
          CondFactRelop(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorDesignator(
                      DesignatorIdent(
                       i
                      ) [DesignatorIdent]
                    ) [FactorDesignator]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
            Less(
            ) [Less]
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorNum(
                     20
                    ) [FactorNum]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [CondFactRelop]
          DesignatorStatementOne(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [DesignatorStatementOne]
          RParenFor(
          ) [RParenFor]
          StatementStatementList(
            Statements(
              StatementIf(
                LParenIf(
                ) [LParenIf]
                OneCondTerm(
                  OneCondFact(
                    CondFactRelop(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorDesignator(
                                DesignatorIdent(
                                 i
                                ) [DesignatorIdent]
                              ) [FactorDesignator]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                      EqualTo(
                      ) [EqualTo]
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorNum(
                               5
                              ) [FactorNum]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [CondFactRelop]
                  ) [OneCondFact]
                ) [OneCondTerm]
                RParenIf(
                ) [RParenIf]
                StatementStatementList(
                  Statements(
                    StatementPrint(
                      ExprPositive(
                        AddopEnd(
                          Term(
                            MulopEnd(
                              FactorChar(
                               b
                              ) [FactorChar]
                            ) [MulopEnd]
                          ) [Term]
                        ) [AddopEnd]
                      ) [ExprPositive]
                    ) [StatementPrint]
                    Statements(
                      StatementBreak(
                      ) [StatementBreak]
                      NoStatement(
                      ) [NoStatement]
                    ) [Statements]
                  ) [Statements]
                ) [StatementStatementList]
              ) [StatementIf]
              Statements(
                StatementPrint(
                  ExprPositive(
                    AddopEnd(
                      Term(
                        MulopEnd(
                          FactorDesignator(
                            DesignatorIdent(
                             i
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [MulopEnd]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [StatementPrint]
                NoStatement(
                ) [NoStatement]
              ) [Statements]
            ) [Statements]
          ) [StatementStatementList]
        ) [StatementForCondFact]
        Statements(
          StatementPrint(
            ExprPositive(
              AddopEnd(
                Term(
                  MulopEnd(
                    FactorChar(
                     k
                    ) [FactorChar]
                  ) [MulopEnd]
                ) [Term]
              ) [AddopEnd]
            ) [ExprPositive]
          ) [StatementPrint]
          NoStatement(
          ) [NoStatement]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  17:10:45,309 - ===================================
INFO  17:10:45,309 - Pocetak programa test301.
INFO  17:10:45,310 - Obradjuje se funkcija main na liniji 11
INFO  17:10:45,310 - Deklarisana je promenljiva i na liniji 12
INFO  17:10:45,310 - Deklarisana je promenljiva y na liniji 12
INFO  17:10:45,310 - Deklarisana je promenljiva z na liniji 12
INFO  17:10:45,311 - Designator i expr su odgovarajuceg tipa na liniji 15
INFO  17:10:45,311 - Obradjena funkcija PRINT na liniji 17
INFO  17:10:45,311 - Obradjena funkcija PRINT na liniji 20
INFO  17:10:45,311 - Obradjena funkcija PRINT na liniji 22
INFO  17:10:45,312 - ===================================
INFO  17:10:45,323 - Parsiranje uspesno zavrseno!
