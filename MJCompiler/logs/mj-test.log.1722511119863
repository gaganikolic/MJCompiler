INFO  12:13:49,468 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:13:49,558 - #2 program
INFO  12:13:49,558 - #49 test301
INFO  12:13:49,558 - #6 const
INFO  12:13:49,560 - #49 int
INFO  12:13:49,560 - #49 nula
INFO  12:13:49,561 - #7 =
INFO  12:13:49,561 - #48 0
INFO  12:13:49,561 - #8 ;
INFO  12:13:49,563 - #6 const
INFO  12:13:49,563 - #49 int
INFO  12:13:49,563 - #49 jedan
INFO  12:13:49,564 - #7 =
INFO  12:13:49,564 - #48 1
INFO  12:13:49,564 - #8 ;
INFO  12:13:49,564 - #6 const
INFO  12:13:49,564 - #49 int
INFO  12:13:49,564 - #49 pet
INFO  12:13:49,564 - #7 =
INFO  12:13:49,564 - #48 5
INFO  12:13:49,564 - #8 ;
INFO  12:13:49,565 - #49 int
INFO  12:13:49,565 - #49 niz
INFO  12:13:49,565 - #10 [
INFO  12:13:49,565 - #11 ]
INFO  12:13:49,565 - #9 ,
INFO  12:13:49,566 - #49 niz2
INFO  12:13:49,566 - #10 [
INFO  12:13:49,566 - #11 ]
INFO  12:13:49,566 - #8 ;
INFO  12:13:49,566 - #49 char
INFO  12:13:49,567 - #49 nizch
INFO  12:13:49,567 - #10 [
INFO  12:13:49,567 - #11 ]
INFO  12:13:49,567 - #8 ;
INFO  12:13:49,567 - #4 {
INFO  12:13:49,567 - #41 void
INFO  12:13:49,568 - #49 main
INFO  12:13:49,568 - #20 (
INFO  12:13:49,568 - #21 )
INFO  12:13:49,569 - #49 int
INFO  12:13:49,569 - #49 bodovi
INFO  12:13:49,569 - #8 ;
INFO  12:13:49,570 - #49 bool
INFO  12:13:49,570 - #49 bt
INFO  12:13:49,570 - #8 ;
INFO  12:13:49,570 - #4 {
INFO  12:13:49,570 - #49 bodovi
INFO  12:13:49,570 - #7 =
INFO  12:13:49,570 - #48 0
INFO  12:13:49,571 - #8 ;
INFO  12:13:49,574 - #49 niz
INFO  12:13:49,574 - #7 =
INFO  12:13:49,574 - #29 new
INFO  12:13:49,574 - #49 int
INFO  12:13:49,574 - #10 [
INFO  12:13:49,574 - #48 5
INFO  12:13:49,574 - #11 ]
INFO  12:13:49,575 - #8 ;
INFO  12:13:49,575 - #19 read
INFO  12:13:49,575 - #20 (
INFO  12:13:49,575 - #49 niz
INFO  12:13:49,575 - #21 )
INFO  12:13:49,575 - #8 ;
INFO  12:13:49,575 - #5 }
INFO  12:13:49,577 - #5 }
INFO  12:13:49,608 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorIdent(
               niz
              ) [DesignatorIdent]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:13:49,609 - ===================================
INFO  12:13:49,610 - Pocetak programa test301.
INFO  12:13:49,610 - Deklarisana je konstanta nula na liniji 5
INFO  12:13:49,610 - Deklarisana je konstanta jedan na liniji 6
INFO  12:13:49,610 - Deklarisana je konstanta pet na liniji 7
INFO  12:13:49,610 - Deklarisan je niz niz na liniji 9
INFO  12:13:49,611 - Deklarisan je niz niz2 na liniji 9
INFO  12:13:49,611 - Deklarisan je niz nizch na liniji 10
INFO  12:13:49,611 - Obradjuje se funkcija main na liniji 13
INFO  12:13:49,611 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:13:49,611 - Deklarisana je promenljiva bt na liniji 15
INFO  12:13:59,138 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:27:28,565 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:27:29,692 - #2 program
INFO  12:27:29,692 - #49 test301
INFO  12:27:29,693 - #6 const
INFO  12:27:29,710 - #49 int
INFO  12:27:29,710 - #49 nula
INFO  12:27:29,720 - #7 =
INFO  12:27:29,720 - #48 0
INFO  12:27:29,720 - #8 ;
INFO  12:27:29,730 - #6 const
INFO  12:27:29,730 - #49 int
INFO  12:27:29,730 - #49 jedan
INFO  12:27:29,730 - #7 =
INFO  12:27:29,730 - #48 1
INFO  12:27:29,731 - #8 ;
INFO  12:27:29,731 - #6 const
INFO  12:27:29,731 - #49 int
INFO  12:27:29,731 - #49 pet
INFO  12:27:29,731 - #7 =
INFO  12:27:29,731 - #48 5
INFO  12:27:29,731 - #8 ;
INFO  12:27:29,731 - #49 int
INFO  12:27:29,731 - #49 niz
INFO  12:27:29,731 - #10 [
INFO  12:27:29,731 - #11 ]
INFO  12:27:29,732 - #9 ,
INFO  12:27:29,732 - #49 niz2
INFO  12:27:29,732 - #10 [
INFO  12:27:29,732 - #11 ]
INFO  12:27:29,732 - #8 ;
INFO  12:27:29,732 - #49 char
INFO  12:27:29,732 - #49 nizch
INFO  12:27:29,733 - #10 [
INFO  12:27:29,733 - #11 ]
INFO  12:27:29,733 - #8 ;
INFO  12:27:29,733 - #4 {
INFO  12:27:29,733 - #41 void
INFO  12:27:29,741 - #49 main
INFO  12:27:29,741 - #20 (
INFO  12:27:29,741 - #21 )
INFO  12:27:29,750 - #49 int
INFO  12:27:29,750 - #49 bodovi
INFO  12:27:29,750 - #8 ;
INFO  12:27:29,750 - #49 bool
INFO  12:27:29,750 - #49 bt
INFO  12:27:29,750 - #8 ;
INFO  12:27:29,750 - #4 {
INFO  12:27:29,750 - #49 bodovi
INFO  12:27:29,750 - #7 =
INFO  12:27:29,751 - #48 0
INFO  12:27:29,767 - #8 ;
INFO  12:27:29,789 - #49 niz
INFO  12:27:29,789 - #7 =
INFO  12:27:29,789 - #29 new
INFO  12:27:29,789 - #49 int
INFO  12:27:29,789 - #10 [
INFO  12:27:29,790 - #48 5
INFO  12:27:29,790 - #11 ]
INFO  12:27:29,790 - #8 ;
INFO  12:27:29,790 - #19 read
INFO  12:27:29,790 - #20 (
INFO  12:27:29,790 - #49 bodovi
INFO  12:27:29,790 - #21 )
INFO  12:27:29,790 - #8 ;
INFO  12:27:29,790 - #5 }
INFO  12:27:29,802 - #5 }
INFO  12:27:29,890 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:27:29,891 - ===================================
INFO  12:27:29,892 - Pocetak programa test301.
INFO  12:27:29,892 - Deklarisana je konstanta nula na liniji 5
INFO  12:27:29,892 - Deklarisana je konstanta jedan na liniji 6
INFO  12:27:29,892 - Deklarisana je konstanta pet na liniji 7
INFO  12:27:29,892 - Deklarisan je niz niz na liniji 9
INFO  12:27:29,893 - Deklarisan je niz niz2 na liniji 9
INFO  12:27:29,893 - Deklarisan je niz nizch na liniji 10
INFO  12:27:29,894 - Obradjuje se funkcija main na liniji 13
INFO  12:27:29,894 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:27:29,894 - Deklarisana je promenljiva bt na liniji 15
INFO  12:27:36,893 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:27:36,982 - #2 program
INFO  12:27:36,982 - #49 test301
INFO  12:27:36,983 - #6 const
INFO  12:27:36,985 - #49 int
INFO  12:27:36,985 - #49 nula
INFO  12:27:36,986 - #7 =
INFO  12:27:36,986 - #48 0
INFO  12:27:36,986 - #8 ;
INFO  12:27:36,988 - #6 const
INFO  12:27:36,988 - #49 int
INFO  12:27:36,988 - #49 jedan
INFO  12:27:36,988 - #7 =
INFO  12:27:36,988 - #48 1
INFO  12:27:36,988 - #8 ;
INFO  12:27:36,988 - #6 const
INFO  12:27:36,989 - #49 int
INFO  12:27:36,989 - #49 pet
INFO  12:27:36,989 - #7 =
INFO  12:27:36,989 - #48 5
INFO  12:27:36,989 - #8 ;
INFO  12:27:36,989 - #49 int
INFO  12:27:36,989 - #49 niz
INFO  12:27:36,990 - #10 [
INFO  12:27:36,990 - #11 ]
INFO  12:27:36,990 - #9 ,
INFO  12:27:36,990 - #49 niz2
INFO  12:27:36,990 - #10 [
INFO  12:27:36,990 - #11 ]
INFO  12:27:36,990 - #8 ;
INFO  12:27:36,991 - #49 char
INFO  12:27:36,991 - #49 nizch
INFO  12:27:36,991 - #10 [
INFO  12:27:36,991 - #11 ]
INFO  12:27:36,991 - #8 ;
INFO  12:27:36,991 - #4 {
INFO  12:27:36,992 - #41 void
INFO  12:27:36,993 - #49 main
INFO  12:27:36,993 - #20 (
INFO  12:27:36,994 - #21 )
INFO  12:27:36,995 - #49 int
INFO  12:27:36,995 - #49 bodovi
INFO  12:27:36,995 - #8 ;
INFO  12:27:36,995 - #49 bool
INFO  12:27:36,995 - #49 bt
INFO  12:27:36,995 - #8 ;
INFO  12:27:36,995 - #4 {
INFO  12:27:36,995 - #49 bodovi
INFO  12:27:36,995 - #7 =
INFO  12:27:36,996 - #48 0
INFO  12:27:36,997 - #8 ;
INFO  12:27:36,999 - #49 niz
INFO  12:27:36,999 - #7 =
INFO  12:27:37,000 - #29 new
INFO  12:27:37,000 - #49 int
INFO  12:27:37,000 - #10 [
INFO  12:27:37,000 - #48 5
INFO  12:27:37,000 - #11 ]
INFO  12:27:37,000 - #8 ;
INFO  12:27:37,000 - #19 read
INFO  12:27:37,000 - #20 (
INFO  12:27:37,001 - #49 bodovi
INFO  12:27:37,001 - #21 )
INFO  12:27:37,001 - #8 ;
INFO  12:27:37,001 - #5 }
INFO  12:27:37,002 - #5 }
INFO  12:27:37,037 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:27:37,039 - ===================================
INFO  12:27:37,039 - Pocetak programa test301.
INFO  12:27:37,039 - Deklarisana je konstanta nula na liniji 5
INFO  12:27:37,040 - Deklarisana je konstanta jedan na liniji 6
INFO  12:27:37,040 - Deklarisana je konstanta pet na liniji 7
INFO  12:27:37,040 - Deklarisan je niz niz na liniji 9
INFO  12:27:37,040 - Deklarisan je niz niz2 na liniji 9
INFO  12:27:37,040 - Deklarisan je niz nizch na liniji 10
INFO  12:27:37,040 - Obradjuje se funkcija main na liniji 13
INFO  12:27:37,040 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:27:37,040 - Deklarisana je promenljiva bt na liniji 15
INFO  12:27:45,039 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:27:45,128 - #2 program
INFO  12:27:45,128 - #49 test301
INFO  12:27:45,128 - #6 const
INFO  12:27:45,130 - #49 int
INFO  12:27:45,130 - #49 nula
INFO  12:27:45,131 - #7 =
INFO  12:27:45,131 - #48 0
INFO  12:27:45,131 - #8 ;
INFO  12:27:45,133 - #6 const
INFO  12:27:45,133 - #49 int
INFO  12:27:45,133 - #49 jedan
INFO  12:27:45,133 - #7 =
INFO  12:27:45,133 - #48 1
INFO  12:27:45,133 - #8 ;
INFO  12:27:45,133 - #6 const
INFO  12:27:45,134 - #49 int
INFO  12:27:45,134 - #49 pet
INFO  12:27:45,134 - #7 =
INFO  12:27:45,134 - #48 5
INFO  12:27:45,134 - #8 ;
INFO  12:27:45,134 - #49 int
INFO  12:27:45,134 - #49 niz
INFO  12:27:45,134 - #10 [
INFO  12:27:45,134 - #11 ]
INFO  12:27:45,134 - #9 ,
INFO  12:27:45,134 - #49 niz2
INFO  12:27:45,135 - #10 [
INFO  12:27:45,135 - #11 ]
INFO  12:27:45,135 - #8 ;
INFO  12:27:45,135 - #49 char
INFO  12:27:45,135 - #49 nizch
INFO  12:27:45,135 - #10 [
INFO  12:27:45,135 - #11 ]
INFO  12:27:45,136 - #8 ;
INFO  12:27:45,136 - #4 {
INFO  12:27:45,136 - #41 void
INFO  12:27:45,137 - #49 main
INFO  12:27:45,137 - #20 (
INFO  12:27:45,137 - #21 )
INFO  12:27:45,138 - #49 int
INFO  12:27:45,139 - #49 bodovi
INFO  12:27:45,139 - #8 ;
INFO  12:27:45,139 - #49 bool
INFO  12:27:45,139 - #49 bt
INFO  12:27:45,139 - #8 ;
INFO  12:27:45,139 - #4 {
INFO  12:27:45,139 - #49 bodovi
INFO  12:27:45,139 - #7 =
INFO  12:27:45,140 - #48 0
INFO  12:27:45,140 - #8 ;
INFO  12:27:45,142 - #49 niz
INFO  12:27:45,142 - #7 =
INFO  12:27:45,143 - #29 new
INFO  12:27:45,143 - #49 int
INFO  12:27:45,143 - #10 [
INFO  12:27:45,143 - #48 5
INFO  12:27:45,143 - #11 ]
INFO  12:27:45,143 - #8 ;
INFO  12:27:45,143 - #19 read
INFO  12:27:45,143 - #20 (
INFO  12:27:45,143 - #49 bodovi
INFO  12:27:45,143 - #21 )
INFO  12:27:45,143 - #8 ;
INFO  12:27:45,143 - #5 }
INFO  12:27:45,145 - #5 }
INFO  12:27:45,176 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:27:45,177 - ===================================
INFO  12:27:45,177 - Pocetak programa test301.
INFO  12:27:45,177 - Deklarisana je konstanta nula na liniji 5
INFO  12:27:45,177 - Deklarisana je konstanta jedan na liniji 6
INFO  12:27:45,177 - Deklarisana je konstanta pet na liniji 7
INFO  12:27:45,178 - Deklarisan je niz niz na liniji 9
INFO  12:27:45,178 - Deklarisan je niz niz2 na liniji 9
INFO  12:27:45,178 - Deklarisan je niz nizch na liniji 10
INFO  12:27:45,178 - Obradjuje se funkcija main na liniji 13
INFO  12:27:45,178 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:27:45,178 - Deklarisana je promenljiva bt na liniji 15
INFO  12:27:54,798 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:28:23,340 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:30:13,887 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:30:13,989 - #2 program
INFO  12:30:13,989 - #49 test301
INFO  12:30:13,989 - #6 const
INFO  12:30:13,991 - #49 int
INFO  12:30:13,991 - #49 nula
INFO  12:30:13,992 - #7 =
INFO  12:30:13,992 - #48 0
INFO  12:30:13,992 - #8 ;
INFO  12:30:13,993 - #6 const
INFO  12:30:13,994 - #49 int
INFO  12:30:13,994 - #49 jedan
INFO  12:30:13,994 - #7 =
INFO  12:30:13,994 - #48 1
INFO  12:30:13,994 - #8 ;
INFO  12:30:13,994 - #6 const
INFO  12:30:13,994 - #49 int
INFO  12:30:13,994 - #49 pet
INFO  12:30:13,994 - #7 =
INFO  12:30:13,994 - #48 5
INFO  12:30:13,995 - #8 ;
INFO  12:30:13,995 - #49 int
INFO  12:30:13,995 - #49 niz
INFO  12:30:13,995 - #10 [
INFO  12:30:13,995 - #11 ]
INFO  12:30:13,995 - #9 ,
INFO  12:30:13,995 - #49 niz2
INFO  12:30:13,995 - #10 [
INFO  12:30:13,995 - #11 ]
INFO  12:30:13,995 - #8 ;
INFO  12:30:13,996 - #49 char
INFO  12:30:13,996 - #49 nizch
INFO  12:30:13,996 - #10 [
INFO  12:30:13,996 - #11 ]
INFO  12:30:13,996 - #8 ;
INFO  12:30:13,996 - #4 {
INFO  12:30:13,996 - #41 void
INFO  12:30:13,997 - #49 main
INFO  12:30:13,997 - #20 (
INFO  12:30:13,998 - #21 )
INFO  12:30:13,998 - #49 int
INFO  12:30:13,998 - #49 bodovi
INFO  12:30:13,998 - #8 ;
INFO  12:30:13,999 - #49 bool
INFO  12:30:13,999 - #49 bt
INFO  12:30:13,999 - #8 ;
INFO  12:30:13,999 - #4 {
INFO  12:30:13,999 - #49 bodovi
INFO  12:30:13,999 - #7 =
INFO  12:30:13,999 - #48 0
INFO  12:30:14,000 - #8 ;
INFO  12:30:14,001 - #49 niz
INFO  12:30:14,002 - #7 =
INFO  12:30:14,002 - #29 new
INFO  12:30:14,002 - #49 int
INFO  12:30:14,002 - #10 [
INFO  12:30:14,002 - #48 5
INFO  12:30:14,002 - #11 ]
INFO  12:30:14,002 - #8 ;
INFO  12:30:14,002 - #19 read
INFO  12:30:14,002 - #20 (
INFO  12:30:14,002 - #49 niz
INFO  12:30:14,002 - #10 [
INFO  12:30:14,014 - #48 0
INFO  12:30:14,014 - #11 ]
INFO  12:30:14,014 - #21 )
INFO  12:30:14,014 - #8 ;
INFO  12:30:14,014 - #5 }
INFO  12:30:14,015 - #5 }
INFO  12:30:14,048 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorExpr(
                DesignatorName(
                 niz
                ) [DesignatorName]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNum(
                       0
                      ) [FactorNum]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorExpr]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:30:14,054 - ===================================
INFO  12:30:14,055 - Pocetak programa test301.
INFO  12:30:14,055 - Deklarisana je konstanta nula na liniji 5
INFO  12:30:14,055 - Deklarisana je konstanta jedan na liniji 6
INFO  12:30:14,056 - Deklarisana je konstanta pet na liniji 7
INFO  12:30:14,056 - Deklarisan je niz niz na liniji 9
INFO  12:30:14,056 - Deklarisan je niz niz2 na liniji 9
INFO  12:30:14,056 - Deklarisan je niz nizch na liniji 10
INFO  12:30:14,057 - Obradjuje se funkcija main na liniji 13
INFO  12:30:14,057 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:30:14,057 - Deklarisana je promenljiva bt na liniji 15
INFO  12:30:16,704 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:30:25,436 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:31:14,612 - kreiran elem za niz 1
INFO  12:31:51,498 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:31:51,566 - #2 program
INFO  12:31:51,566 - #49 test301
INFO  12:31:51,566 - #6 const
INFO  12:31:51,568 - #49 int
INFO  12:31:51,568 - #49 nula
INFO  12:31:51,569 - #7 =
INFO  12:31:51,569 - #48 0
INFO  12:31:51,569 - #8 ;
INFO  12:31:51,570 - #6 const
INFO  12:31:51,570 - #49 int
INFO  12:31:51,570 - #49 jedan
INFO  12:31:51,570 - #7 =
INFO  12:31:51,570 - #48 1
INFO  12:31:51,570 - #8 ;
INFO  12:31:51,571 - #6 const
INFO  12:31:51,571 - #49 int
INFO  12:31:51,571 - #49 pet
INFO  12:31:51,571 - #7 =
INFO  12:31:51,571 - #48 5
INFO  12:31:51,571 - #8 ;
INFO  12:31:51,571 - #49 int
INFO  12:31:51,571 - #49 niz
INFO  12:31:51,571 - #10 [
INFO  12:31:51,571 - #11 ]
INFO  12:31:51,572 - #9 ,
INFO  12:31:51,572 - #49 niz2
INFO  12:31:51,572 - #10 [
INFO  12:31:51,572 - #11 ]
INFO  12:31:51,572 - #8 ;
INFO  12:31:51,572 - #49 char
INFO  12:31:51,573 - #49 nizch
INFO  12:31:51,573 - #10 [
INFO  12:31:51,573 - #11 ]
INFO  12:31:51,573 - #8 ;
INFO  12:31:51,573 - #4 {
INFO  12:31:51,573 - #41 void
INFO  12:31:51,574 - #49 main
INFO  12:31:51,574 - #20 (
INFO  12:31:51,575 - #21 )
INFO  12:31:51,576 - #49 int
INFO  12:31:51,576 - #49 bodovi
INFO  12:31:51,576 - #8 ;
INFO  12:31:51,576 - #49 bool
INFO  12:31:51,576 - #49 bt
INFO  12:31:51,576 - #8 ;
INFO  12:31:51,576 - #4 {
INFO  12:31:51,576 - #49 bodovi
INFO  12:31:51,576 - #7 =
INFO  12:31:51,577 - #48 0
INFO  12:31:51,578 - #8 ;
INFO  12:31:51,580 - #49 niz
INFO  12:31:51,580 - #7 =
INFO  12:31:51,580 - #29 new
INFO  12:31:51,580 - #49 int
INFO  12:31:51,580 - #10 [
INFO  12:31:51,580 - #48 5
INFO  12:31:51,580 - #11 ]
INFO  12:31:51,581 - #8 ;
INFO  12:31:51,581 - #19 read
INFO  12:31:51,581 - #20 (
INFO  12:31:51,581 - #49 niz
INFO  12:31:51,581 - #10 [
INFO  12:31:51,582 - #48 0
INFO  12:31:51,582 - #11 ]
INFO  12:31:51,582 - #21 )
INFO  12:31:51,582 - #8 ;
INFO  12:31:51,582 - #5 }
INFO  12:31:51,583 - #5 }
INFO  12:31:51,595 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorExpr(
                DesignatorName(
                 niz
                ) [DesignatorName]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNum(
                       0
                      ) [FactorNum]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorExpr]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:31:51,595 - ===================================
INFO  12:31:51,595 - Pocetak programa test301.
INFO  12:31:51,596 - Deklarisana je konstanta nula na liniji 5
INFO  12:31:51,597 - Deklarisana je konstanta jedan na liniji 6
INFO  12:31:51,597 - Deklarisana je konstanta pet na liniji 7
INFO  12:31:51,597 - Deklarisan je niz niz na liniji 9
INFO  12:31:51,597 - Deklarisan je niz niz2 na liniji 9
INFO  12:31:51,597 - Deklarisan je niz nizch na liniji 10
INFO  12:31:51,597 - Obradjuje se funkcija main na liniji 13
INFO  12:31:51,598 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:31:51,598 - Deklarisana je promenljiva bt na liniji 15
INFO  12:31:51,598 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:31:51,598 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:31:51,599 - kreiran elem za niz 1
ERROR 12:31:51,599 - Greska na liniji 20 promenljiva prosledjena funkciji READ nije odgovarajuceg tipa (niz)
INFO  12:31:51,599 - Funkciji READ je prosledjen element niza 
INFO  12:31:51,599 - ===================================
ERROR 12:31:51,600 - Parsiranje NIJE uspesno zavrseno!
INFO  12:32:45,240 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:32:45,313 - #2 program
INFO  12:32:45,314 - #49 test301
INFO  12:32:45,314 - #6 const
INFO  12:32:45,315 - #49 int
INFO  12:32:45,315 - #49 nula
INFO  12:32:45,316 - #7 =
INFO  12:32:45,316 - #48 0
INFO  12:32:45,316 - #8 ;
INFO  12:32:45,317 - #6 const
INFO  12:32:45,318 - #49 int
INFO  12:32:45,318 - #49 jedan
INFO  12:32:45,318 - #7 =
INFO  12:32:45,318 - #48 1
INFO  12:32:45,318 - #8 ;
INFO  12:32:45,318 - #6 const
INFO  12:32:45,318 - #49 int
INFO  12:32:45,318 - #49 pet
INFO  12:32:45,318 - #7 =
INFO  12:32:45,318 - #48 5
INFO  12:32:45,319 - #8 ;
INFO  12:32:45,319 - #49 int
INFO  12:32:45,319 - #49 niz
INFO  12:32:45,319 - #10 [
INFO  12:32:45,319 - #11 ]
INFO  12:32:45,319 - #9 ,
INFO  12:32:45,319 - #49 niz2
INFO  12:32:45,319 - #10 [
INFO  12:32:45,319 - #11 ]
INFO  12:32:45,319 - #8 ;
INFO  12:32:45,320 - #49 char
INFO  12:32:45,320 - #49 nizch
INFO  12:32:45,320 - #10 [
INFO  12:32:45,320 - #11 ]
INFO  12:32:45,320 - #8 ;
INFO  12:32:45,320 - #4 {
INFO  12:32:45,320 - #41 void
INFO  12:32:45,321 - #49 main
INFO  12:32:45,321 - #20 (
INFO  12:32:45,321 - #21 )
INFO  12:32:45,322 - #49 int
INFO  12:32:45,322 - #49 bodovi
INFO  12:32:45,322 - #8 ;
INFO  12:32:45,322 - #49 bool
INFO  12:32:45,322 - #49 bt
INFO  12:32:45,322 - #8 ;
INFO  12:32:45,322 - #4 {
INFO  12:32:45,322 - #49 bodovi
INFO  12:32:45,323 - #7 =
INFO  12:32:45,323 - #48 0
INFO  12:32:45,323 - #8 ;
INFO  12:32:45,325 - #49 niz
INFO  12:32:45,325 - #7 =
INFO  12:32:45,325 - #29 new
INFO  12:32:45,326 - #49 int
INFO  12:32:45,326 - #10 [
INFO  12:32:45,326 - #48 5
INFO  12:32:45,326 - #11 ]
INFO  12:32:45,326 - #8 ;
INFO  12:32:45,326 - #19 read
INFO  12:32:45,326 - #20 (
INFO  12:32:45,326 - #49 niz
INFO  12:32:45,326 - #10 [
INFO  12:32:45,327 - #48 0
INFO  12:32:45,327 - #11 ]
INFO  12:32:45,327 - #21 )
INFO  12:32:45,328 - #8 ;
INFO  12:32:45,328 - #5 }
INFO  12:32:45,329 - #5 }
INFO  12:32:45,357 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorExpr(
                DesignatorName(
                 niz
                ) [DesignatorName]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNum(
                       0
                      ) [FactorNum]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorExpr]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:32:45,358 - ===================================
INFO  12:32:45,358 - Pocetak programa test301.
INFO  12:32:45,358 - Deklarisana je konstanta nula na liniji 5
INFO  12:32:45,358 - Deklarisana je konstanta jedan na liniji 6
INFO  12:32:45,359 - Deklarisana je konstanta pet na liniji 7
INFO  12:32:45,359 - Deklarisan je niz niz na liniji 9
INFO  12:32:45,360 - Deklarisan je niz niz2 na liniji 9
INFO  12:32:45,360 - Deklarisan je niz nizch na liniji 10
INFO  12:32:45,360 - Obradjuje se funkcija main na liniji 13
INFO  12:32:45,360 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:32:45,361 - Deklarisana je promenljiva bt na liniji 15
INFO  12:32:48,016 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:32:49,700 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:32:53,773 - kreiran elem za niz 1
INFO  12:37:41,576 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:37:41,647 - #2 program
INFO  12:37:41,648 - #49 test301
INFO  12:37:41,648 - #6 const
INFO  12:37:41,650 - #49 int
INFO  12:37:41,650 - #49 nula
INFO  12:37:41,651 - #7 =
INFO  12:37:41,651 - #48 0
INFO  12:37:41,651 - #8 ;
INFO  12:37:41,653 - #6 const
INFO  12:37:41,653 - #49 int
INFO  12:37:41,653 - #49 jedan
INFO  12:37:41,653 - #7 =
INFO  12:37:41,653 - #48 1
INFO  12:37:41,653 - #8 ;
INFO  12:37:41,654 - #6 const
INFO  12:37:41,654 - #49 int
INFO  12:37:41,654 - #49 pet
INFO  12:37:41,654 - #7 =
INFO  12:37:41,654 - #48 5
INFO  12:37:41,654 - #8 ;
INFO  12:37:41,654 - #49 int
INFO  12:37:41,655 - #49 niz
INFO  12:37:41,655 - #10 [
INFO  12:37:41,655 - #11 ]
INFO  12:37:41,655 - #9 ,
INFO  12:37:41,655 - #49 niz2
INFO  12:37:41,655 - #10 [
INFO  12:37:41,655 - #11 ]
INFO  12:37:41,656 - #8 ;
INFO  12:37:41,656 - #49 char
INFO  12:37:41,656 - #49 nizch
INFO  12:37:41,656 - #10 [
INFO  12:37:41,656 - #11 ]
INFO  12:37:41,656 - #8 ;
INFO  12:37:41,656 - #4 {
INFO  12:37:41,657 - #41 void
INFO  12:37:41,657 - #49 main
INFO  12:37:41,658 - #20 (
INFO  12:37:41,658 - #21 )
INFO  12:37:41,659 - #49 int
INFO  12:37:41,659 - #49 bodovi
INFO  12:37:41,659 - #8 ;
INFO  12:37:41,659 - #49 bool
INFO  12:37:41,659 - #49 bt
INFO  12:37:41,659 - #8 ;
INFO  12:37:41,660 - #4 {
INFO  12:37:41,660 - #49 bodovi
INFO  12:37:41,660 - #7 =
INFO  12:37:41,660 - #48 0
INFO  12:37:41,662 - #8 ;
INFO  12:37:41,664 - #49 niz
INFO  12:37:41,664 - #7 =
INFO  12:37:41,664 - #29 new
INFO  12:37:41,664 - #49 int
INFO  12:37:41,664 - #10 [
INFO  12:37:41,665 - #48 5
INFO  12:37:41,665 - #11 ]
INFO  12:37:41,665 - #8 ;
INFO  12:37:41,665 - #19 read
INFO  12:37:41,665 - #20 (
INFO  12:37:41,666 - #49 niz
INFO  12:37:41,666 - #10 [
INFO  12:37:41,667 - #48 0
INFO  12:37:41,667 - #11 ]
INFO  12:37:41,667 - #21 )
INFO  12:37:41,667 - #8 ;
INFO  12:37:41,668 - #5 }
INFO  12:37:41,669 - #5 }
INFO  12:37:41,694 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementRead(
              DesignatorExpr(
                DesignatorName(
                 niz
                ) [DesignatorName]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNum(
                       0
                      ) [FactorNum]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorExpr]
            ) [StatementRead]
            NoStatement(
            ) [NoStatement]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:37:41,695 - ===================================
INFO  12:37:41,695 - Pocetak programa test301.
INFO  12:37:41,695 - Deklarisana je konstanta nula na liniji 5
INFO  12:37:41,695 - Deklarisana je konstanta jedan na liniji 6
INFO  12:37:41,696 - Deklarisana je konstanta pet na liniji 7
INFO  12:37:41,696 - Deklarisan je niz niz na liniji 9
INFO  12:37:41,696 - Deklarisan je niz niz2 na liniji 9
INFO  12:37:41,696 - Deklarisan je niz nizch na liniji 10
INFO  12:37:41,696 - Obradjuje se funkcija main na liniji 13
INFO  12:37:41,696 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:37:41,696 - Deklarisana je promenljiva bt na liniji 15
INFO  12:37:44,209 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:37:46,303 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:37:47,753 - kreiran elem za niz 1
INFO  12:40:35,145 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:40:35,196 - #2 program
INFO  12:40:35,196 - #49 test301
INFO  12:40:35,196 - #6 const
INFO  12:40:35,197 - #49 int
INFO  12:40:35,197 - #49 nula
INFO  12:40:35,198 - #7 =
INFO  12:40:35,198 - #48 0
INFO  12:40:35,198 - #8 ;
INFO  12:40:35,199 - #6 const
INFO  12:40:35,199 - #49 int
INFO  12:40:35,199 - #49 jedan
INFO  12:40:35,199 - #7 =
INFO  12:40:35,199 - #48 1
INFO  12:40:35,199 - #8 ;
INFO  12:40:35,199 - #6 const
INFO  12:40:35,199 - #49 int
INFO  12:40:35,199 - #49 pet
INFO  12:40:35,199 - #7 =
INFO  12:40:35,200 - #48 5
INFO  12:40:35,200 - #8 ;
INFO  12:40:35,200 - #49 int
INFO  12:40:35,200 - #49 niz
INFO  12:40:35,200 - #10 [
INFO  12:40:35,200 - #11 ]
INFO  12:40:35,200 - #9 ,
INFO  12:40:35,200 - #49 niz2
INFO  12:40:35,200 - #10 [
INFO  12:40:35,201 - #11 ]
INFO  12:40:35,201 - #8 ;
INFO  12:40:35,201 - #49 char
INFO  12:40:35,201 - #49 nizch
INFO  12:40:35,201 - #10 [
INFO  12:40:35,201 - #11 ]
INFO  12:40:35,201 - #8 ;
INFO  12:40:35,201 - #4 {
INFO  12:40:35,201 - #41 void
INFO  12:40:35,202 - #49 main
INFO  12:40:35,202 - #20 (
INFO  12:40:35,203 - #21 )
INFO  12:40:35,203 - #49 int
INFO  12:40:35,203 - #49 bodovi
INFO  12:40:35,204 - #8 ;
INFO  12:40:35,204 - #49 bool
INFO  12:40:35,204 - #49 bt
INFO  12:40:35,204 - #8 ;
INFO  12:40:35,204 - #4 {
INFO  12:40:35,204 - #49 bodovi
INFO  12:40:35,204 - #7 =
INFO  12:40:35,204 - #48 0
INFO  12:40:35,205 - #8 ;
INFO  12:40:35,207 - #49 niz
INFO  12:40:35,207 - #7 =
INFO  12:40:35,207 - #29 new
INFO  12:40:35,207 - #49 int
INFO  12:40:35,207 - #10 [
INFO  12:40:35,207 - #48 5
INFO  12:40:35,207 - #11 ]
INFO  12:40:35,208 - #8 ;
INFO  12:40:35,208 - #49 niz
INFO  12:40:35,208 - #10 [
INFO  12:40:35,209 - #48 0
INFO  12:40:35,209 - #11 ]
INFO  12:40:35,209 - #7 =
INFO  12:40:35,209 - #48 1
INFO  12:40:35,209 - #8 ;
INFO  12:40:35,209 - #19 read
INFO  12:40:35,209 - #20 (
INFO  12:40:35,209 - #49 niz
INFO  12:40:35,209 - #10 [
INFO  12:40:35,209 - #48 0
INFO  12:40:35,209 - #11 ]
INFO  12:40:35,210 - #21 )
INFO  12:40:35,210 - #8 ;
INFO  12:40:35,210 - #5 }
INFO  12:40:35,211 - #5 }
INFO  12:40:35,220 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:40:35,221 - ===================================
INFO  12:40:35,221 - Pocetak programa test301.
INFO  12:40:35,221 - Deklarisana je konstanta nula na liniji 5
INFO  12:40:35,221 - Deklarisana je konstanta jedan na liniji 6
INFO  12:40:35,221 - Deklarisana je konstanta pet na liniji 7
INFO  12:40:35,222 - Deklarisan je niz niz na liniji 9
INFO  12:40:35,222 - Deklarisan je niz niz2 na liniji 9
INFO  12:40:35,222 - Deklarisan je niz nizch na liniji 10
INFO  12:40:35,222 - Obradjuje se funkcija main na liniji 13
INFO  12:40:35,222 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:40:35,222 - Deklarisana je promenljiva bt na liniji 15
INFO  12:40:35,222 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:40:35,222 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:40:35,222 - kreiran elem za niz 1
INFO  12:40:35,222 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:40:35,222 - kreiran elem za niz 1
ERROR 12:40:35,223 - Greska na liniji 21 promenljiva prosledjena funkciji READ nije odgovarajuceg tipa (niz)
INFO  12:40:35,223 - Funkciji READ je prosledjen element niza 
INFO  12:40:35,223 - ===================================
ERROR 12:40:35,223 - Parsiranje NIJE uspesno zavrseno!
INFO  12:40:45,309 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:40:45,388 - #2 program
INFO  12:40:45,388 - #49 test301
INFO  12:40:45,389 - #6 const
INFO  12:40:45,391 - #49 int
INFO  12:40:45,391 - #49 nula
INFO  12:40:45,391 - #7 =
INFO  12:40:45,391 - #48 0
INFO  12:40:45,392 - #8 ;
INFO  12:40:45,393 - #6 const
INFO  12:40:45,393 - #49 int
INFO  12:40:45,393 - #49 jedan
INFO  12:40:45,394 - #7 =
INFO  12:40:45,394 - #48 1
INFO  12:40:45,394 - #8 ;
INFO  12:40:45,394 - #6 const
INFO  12:40:45,394 - #49 int
INFO  12:40:45,394 - #49 pet
INFO  12:40:45,394 - #7 =
INFO  12:40:45,394 - #48 5
INFO  12:40:45,394 - #8 ;
INFO  12:40:45,394 - #49 int
INFO  12:40:45,394 - #49 niz
INFO  12:40:45,395 - #10 [
INFO  12:40:45,395 - #11 ]
INFO  12:40:45,395 - #9 ,
INFO  12:40:45,395 - #49 niz2
INFO  12:40:45,396 - #10 [
INFO  12:40:45,396 - #11 ]
INFO  12:40:45,396 - #8 ;
INFO  12:40:45,396 - #49 char
INFO  12:40:45,396 - #49 nizch
INFO  12:40:45,396 - #10 [
INFO  12:40:45,396 - #11 ]
INFO  12:40:45,396 - #8 ;
INFO  12:40:45,396 - #4 {
INFO  12:40:45,396 - #41 void
INFO  12:40:45,397 - #49 main
INFO  12:40:45,397 - #20 (
INFO  12:40:45,398 - #21 )
INFO  12:40:45,398 - #49 int
INFO  12:40:45,398 - #49 bodovi
INFO  12:40:45,398 - #8 ;
INFO  12:40:45,399 - #49 bool
INFO  12:40:45,399 - #49 bt
INFO  12:40:45,399 - #8 ;
INFO  12:40:45,399 - #4 {
INFO  12:40:45,399 - #49 bodovi
INFO  12:40:45,399 - #7 =
INFO  12:40:45,399 - #48 0
INFO  12:40:45,400 - #8 ;
INFO  12:40:45,402 - #49 niz
INFO  12:40:45,402 - #7 =
INFO  12:40:45,402 - #29 new
INFO  12:40:45,402 - #49 int
INFO  12:40:45,402 - #10 [
INFO  12:40:45,403 - #48 5
INFO  12:40:45,403 - #11 ]
INFO  12:40:45,403 - #8 ;
INFO  12:40:45,403 - #49 niz
INFO  12:40:45,403 - #10 [
INFO  12:40:45,404 - #48 0
INFO  12:40:45,404 - #11 ]
INFO  12:40:45,404 - #7 =
INFO  12:40:45,404 - #48 1
INFO  12:40:45,405 - #8 ;
INFO  12:40:45,405 - #19 read
INFO  12:40:45,405 - #20 (
INFO  12:40:45,405 - #49 niz
INFO  12:40:45,405 - #10 [
INFO  12:40:45,405 - #48 0
INFO  12:40:45,405 - #11 ]
INFO  12:40:45,405 - #21 )
INFO  12:40:45,405 - #8 ;
INFO  12:40:45,405 - #5 }
INFO  12:40:45,407 - #5 }
INFO  12:40:45,435 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:40:45,438 - ===================================
INFO  12:40:45,439 - Pocetak programa test301.
INFO  12:40:45,439 - Deklarisana je konstanta nula na liniji 5
INFO  12:40:45,439 - Deklarisana je konstanta jedan na liniji 6
INFO  12:40:45,439 - Deklarisana je konstanta pet na liniji 7
INFO  12:40:45,439 - Deklarisan je niz niz na liniji 9
INFO  12:40:45,439 - Deklarisan je niz niz2 na liniji 9
INFO  12:40:45,440 - Deklarisan je niz nizch na liniji 10
INFO  12:40:45,441 - Obradjuje se funkcija main na liniji 13
INFO  12:40:45,441 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:40:45,441 - Deklarisana je promenljiva bt na liniji 15
INFO  12:40:46,724 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:40:49,191 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:40:53,281 - kreiran elem za niz 1
INFO  12:42:41,782 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:42:56,934 - kreiran elem za niz 1
INFO  12:43:46,432 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:43:46,513 - #2 program
INFO  12:43:46,513 - #49 test301
INFO  12:43:46,513 - #6 const
INFO  12:43:46,515 - #49 int
INFO  12:43:46,515 - #49 nula
INFO  12:43:46,516 - #7 =
INFO  12:43:46,516 - #48 0
INFO  12:43:46,516 - #8 ;
INFO  12:43:46,517 - #6 const
INFO  12:43:46,518 - #49 int
INFO  12:43:46,518 - #49 jedan
INFO  12:43:46,518 - #7 =
INFO  12:43:46,518 - #48 1
INFO  12:43:46,518 - #8 ;
INFO  12:43:46,518 - #6 const
INFO  12:43:46,518 - #49 int
INFO  12:43:46,518 - #49 pet
INFO  12:43:46,518 - #7 =
INFO  12:43:46,518 - #48 5
INFO  12:43:46,518 - #8 ;
INFO  12:43:46,518 - #49 int
INFO  12:43:46,518 - #49 niz
INFO  12:43:46,518 - #10 [
INFO  12:43:46,519 - #11 ]
INFO  12:43:46,519 - #9 ,
INFO  12:43:46,519 - #49 niz2
INFO  12:43:46,519 - #10 [
INFO  12:43:46,519 - #11 ]
INFO  12:43:46,519 - #8 ;
INFO  12:43:46,519 - #49 char
INFO  12:43:46,519 - #49 nizch
INFO  12:43:46,519 - #10 [
INFO  12:43:46,519 - #11 ]
INFO  12:43:46,520 - #8 ;
INFO  12:43:46,520 - #4 {
INFO  12:43:46,520 - #41 void
INFO  12:43:46,520 - #49 main
INFO  12:43:46,520 - #20 (
INFO  12:43:46,521 - #21 )
INFO  12:43:46,521 - #49 int
INFO  12:43:46,521 - #49 bodovi
INFO  12:43:46,521 - #8 ;
INFO  12:43:46,521 - #49 bool
INFO  12:43:46,522 - #49 bt
INFO  12:43:46,522 - #8 ;
INFO  12:43:46,522 - #4 {
INFO  12:43:46,522 - #49 bodovi
INFO  12:43:46,522 - #7 =
INFO  12:43:46,522 - #48 0
INFO  12:43:46,523 - #8 ;
INFO  12:43:46,524 - #49 niz
INFO  12:43:46,525 - #7 =
INFO  12:43:46,525 - #29 new
INFO  12:43:46,525 - #49 int
INFO  12:43:46,525 - #10 [
INFO  12:43:46,525 - #48 5
INFO  12:43:46,525 - #11 ]
INFO  12:43:46,525 - #8 ;
INFO  12:43:46,525 - #49 niz
INFO  12:43:46,525 - #10 [
INFO  12:43:46,526 - #48 0
INFO  12:43:46,526 - #11 ]
INFO  12:43:46,526 - #7 =
INFO  12:43:46,526 - #48 1
INFO  12:43:46,526 - #8 ;
INFO  12:43:46,527 - #19 read
INFO  12:43:46,527 - #20 (
INFO  12:43:46,527 - #49 niz
INFO  12:43:46,527 - #10 [
INFO  12:43:46,527 - #48 0
INFO  12:43:46,527 - #11 ]
INFO  12:43:46,527 - #21 )
INFO  12:43:46,527 - #8 ;
INFO  12:43:46,527 - #5 }
INFO  12:43:46,528 - #5 }
INFO  12:43:46,553 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:43:46,555 - ===================================
INFO  12:43:46,556 - Pocetak programa test301.
INFO  12:43:46,556 - Deklarisana je konstanta nula na liniji 5
INFO  12:43:46,556 - Deklarisana je konstanta jedan na liniji 6
INFO  12:43:46,556 - Deklarisana je konstanta pet na liniji 7
INFO  12:43:46,556 - Deklarisan je niz niz na liniji 9
INFO  12:43:46,557 - Deklarisan je niz niz2 na liniji 9
INFO  12:43:46,557 - Deklarisan je niz nizch na liniji 10
INFO  12:43:46,557 - Obradjuje se funkcija main na liniji 13
INFO  12:43:46,557 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:43:46,557 - Deklarisana je promenljiva bt na liniji 15
INFO  12:43:48,628 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:43:51,461 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:44:22,468 - kreiran elem za niz 1
INFO  12:44:22,469 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:44:53,170 - kreiran elem za niz 1
INFO  12:45:54,743 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:45:54,830 - #2 program
INFO  12:45:54,830 - #49 test301
INFO  12:45:54,830 - #6 const
INFO  12:45:54,832 - #49 int
INFO  12:45:54,832 - #49 nula
INFO  12:45:54,832 - #7 =
INFO  12:45:54,832 - #48 0
INFO  12:45:54,833 - #8 ;
INFO  12:45:54,834 - #6 const
INFO  12:45:54,834 - #49 int
INFO  12:45:54,834 - #49 jedan
INFO  12:45:54,834 - #7 =
INFO  12:45:54,834 - #48 1
INFO  12:45:54,834 - #8 ;
INFO  12:45:54,834 - #6 const
INFO  12:45:54,835 - #49 int
INFO  12:45:54,835 - #49 pet
INFO  12:45:54,835 - #7 =
INFO  12:45:54,835 - #48 5
INFO  12:45:54,835 - #8 ;
INFO  12:45:54,835 - #49 int
INFO  12:45:54,835 - #49 niz
INFO  12:45:54,835 - #10 [
INFO  12:45:54,835 - #11 ]
INFO  12:45:54,835 - #9 ,
INFO  12:45:54,835 - #49 niz2
INFO  12:45:54,836 - #10 [
INFO  12:45:54,836 - #11 ]
INFO  12:45:54,836 - #8 ;
INFO  12:45:54,836 - #49 char
INFO  12:45:54,836 - #49 nizch
INFO  12:45:54,836 - #10 [
INFO  12:45:54,836 - #11 ]
INFO  12:45:54,836 - #8 ;
INFO  12:45:54,836 - #4 {
INFO  12:45:54,837 - #41 void
INFO  12:45:54,838 - #49 main
INFO  12:45:54,838 - #20 (
INFO  12:45:54,838 - #21 )
INFO  12:45:54,839 - #49 int
INFO  12:45:54,839 - #49 bodovi
INFO  12:45:54,839 - #8 ;
INFO  12:45:54,839 - #49 bool
INFO  12:45:54,839 - #49 bt
INFO  12:45:54,839 - #8 ;
INFO  12:45:54,839 - #4 {
INFO  12:45:54,839 - #49 bodovi
INFO  12:45:54,839 - #7 =
INFO  12:45:54,840 - #48 0
INFO  12:45:54,840 - #8 ;
INFO  12:45:54,842 - #49 niz
INFO  12:45:54,843 - #7 =
INFO  12:45:54,843 - #29 new
INFO  12:45:54,843 - #49 int
INFO  12:45:54,843 - #10 [
INFO  12:45:54,843 - #48 5
INFO  12:45:54,843 - #11 ]
INFO  12:45:54,843 - #8 ;
INFO  12:45:54,843 - #49 niz
INFO  12:45:54,843 - #10 [
INFO  12:45:54,844 - #48 0
INFO  12:45:54,844 - #11 ]
INFO  12:45:54,844 - #7 =
INFO  12:45:54,844 - #48 1
INFO  12:45:54,845 - #8 ;
INFO  12:45:54,845 - #19 read
INFO  12:45:54,845 - #20 (
INFO  12:45:54,845 - #49 niz
INFO  12:45:54,845 - #10 [
INFO  12:45:54,845 - #48 0
INFO  12:45:54,845 - #11 ]
INFO  12:45:54,845 - #21 )
INFO  12:45:54,845 - #8 ;
INFO  12:45:54,845 - #5 }
INFO  12:45:54,846 - #5 }
INFO  12:45:54,871 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:45:54,871 - ===================================
INFO  12:45:54,871 - Pocetak programa test301.
INFO  12:45:54,871 - Deklarisana je konstanta nula na liniji 5
INFO  12:45:54,872 - Deklarisana je konstanta jedan na liniji 6
INFO  12:45:54,872 - Deklarisana je konstanta pet na liniji 7
INFO  12:45:54,872 - Deklarisan je niz niz na liniji 9
INFO  12:45:54,872 - Deklarisan je niz niz2 na liniji 9
INFO  12:45:54,872 - Deklarisan je niz nizch na liniji 10
INFO  12:45:54,872 - Obradjuje se funkcija main na liniji 13
INFO  12:45:54,872 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:45:54,873 - Deklarisana je promenljiva bt na liniji 15
INFO  12:45:59,613 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:46:00,740 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:46:01,700 - kreiran elem za niz 1
INFO  12:46:01,700 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:46:04,852 - kreiran elem za niz 1
INFO  12:49:49,980 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:49:50,037 - #2 program
INFO  12:49:50,037 - #49 test301
INFO  12:49:50,037 - #6 const
INFO  12:49:50,038 - #49 int
INFO  12:49:50,039 - #49 nula
INFO  12:49:50,039 - #7 =
INFO  12:49:50,039 - #48 0
INFO  12:49:50,040 - #8 ;
INFO  12:49:50,041 - #6 const
INFO  12:49:50,041 - #49 int
INFO  12:49:50,041 - #49 jedan
INFO  12:49:50,041 - #7 =
INFO  12:49:50,041 - #48 1
INFO  12:49:50,041 - #8 ;
INFO  12:49:50,041 - #6 const
INFO  12:49:50,041 - #49 int
INFO  12:49:50,042 - #49 pet
INFO  12:49:50,042 - #7 =
INFO  12:49:50,042 - #48 5
INFO  12:49:50,042 - #8 ;
INFO  12:49:50,042 - #49 int
INFO  12:49:50,042 - #49 niz
INFO  12:49:50,042 - #10 [
INFO  12:49:50,042 - #11 ]
INFO  12:49:50,042 - #9 ,
INFO  12:49:50,043 - #49 niz2
INFO  12:49:50,043 - #10 [
INFO  12:49:50,043 - #11 ]
INFO  12:49:50,043 - #8 ;
INFO  12:49:50,043 - #49 char
INFO  12:49:50,043 - #49 nizch
INFO  12:49:50,044 - #10 [
INFO  12:49:50,044 - #11 ]
INFO  12:49:50,044 - #8 ;
INFO  12:49:50,044 - #4 {
INFO  12:49:50,044 - #41 void
INFO  12:49:50,045 - #49 main
INFO  12:49:50,045 - #20 (
INFO  12:49:50,045 - #21 )
INFO  12:49:50,046 - #49 int
INFO  12:49:50,046 - #49 bodovi
INFO  12:49:50,046 - #8 ;
INFO  12:49:50,046 - #49 bool
INFO  12:49:50,047 - #49 bt
INFO  12:49:50,047 - #8 ;
INFO  12:49:50,047 - #4 {
INFO  12:49:50,047 - #49 bodovi
INFO  12:49:50,047 - #7 =
INFO  12:49:50,047 - #48 0
INFO  12:49:50,048 - #8 ;
INFO  12:49:50,050 - #49 niz
INFO  12:49:50,050 - #7 =
INFO  12:49:50,050 - #29 new
INFO  12:49:50,050 - #49 int
INFO  12:49:50,050 - #10 [
INFO  12:49:50,051 - #48 5
INFO  12:49:50,051 - #11 ]
INFO  12:49:50,051 - #8 ;
INFO  12:49:50,051 - #49 niz
INFO  12:49:50,051 - #10 [
INFO  12:49:50,052 - #48 0
INFO  12:49:50,052 - #11 ]
INFO  12:49:50,052 - #7 =
INFO  12:49:50,052 - #48 1
INFO  12:49:50,052 - #8 ;
INFO  12:49:50,052 - #19 read
INFO  12:49:50,052 - #20 (
INFO  12:49:50,052 - #49 niz
INFO  12:49:50,053 - #10 [
INFO  12:49:50,053 - #48 0
INFO  12:49:50,053 - #11 ]
INFO  12:49:50,053 - #21 )
INFO  12:49:50,053 - #8 ;
INFO  12:49:50,053 - #5 }
INFO  12:49:50,054 - #5 }
INFO  12:49:50,062 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:49:50,062 - ===================================
INFO  12:49:50,062 - Pocetak programa test301.
INFO  12:49:50,062 - Deklarisana je konstanta nula na liniji 5
INFO  12:49:50,063 - Deklarisana je konstanta jedan na liniji 6
INFO  12:49:50,063 - Deklarisana je konstanta pet na liniji 7
INFO  12:49:50,063 - Deklarisan je niz niz na liniji 9
INFO  12:49:50,063 - Deklarisan je niz niz2 na liniji 9
INFO  12:49:50,063 - Deklarisan je niz nizch na liniji 10
INFO  12:49:50,063 - Obradjuje se funkcija main na liniji 13
INFO  12:49:50,063 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:49:50,063 - Deklarisana je promenljiva bt na liniji 15
INFO  12:49:50,063 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:49:50,063 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:49:50,064 - kreiran elem za niz 1
INFO  12:49:50,064 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:49:50,064 - kreiran elem za niz 1
INFO  12:49:50,064 - Funkciji READ je prosledjen element niza 
INFO  12:49:50,064 - ===================================
INFO  12:49:50,064 - Parsiranje uspesno zavrseno!
INFO  12:50:14,768 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:50:14,820 - #2 program
INFO  12:50:14,820 - #49 test301
INFO  12:50:14,820 - #6 const
INFO  12:50:14,821 - #49 int
INFO  12:50:14,821 - #49 nula
INFO  12:50:14,822 - #7 =
INFO  12:50:14,822 - #48 0
INFO  12:50:14,822 - #8 ;
INFO  12:50:14,823 - #6 const
INFO  12:50:14,823 - #49 int
INFO  12:50:14,823 - #49 jedan
INFO  12:50:14,823 - #7 =
INFO  12:50:14,823 - #48 1
INFO  12:50:14,823 - #8 ;
INFO  12:50:14,823 - #6 const
INFO  12:50:14,824 - #49 int
INFO  12:50:14,824 - #49 pet
INFO  12:50:14,824 - #7 =
INFO  12:50:14,824 - #48 5
INFO  12:50:14,824 - #8 ;
INFO  12:50:14,824 - #49 int
INFO  12:50:14,824 - #49 niz
INFO  12:50:14,824 - #10 [
INFO  12:50:14,824 - #11 ]
INFO  12:50:14,824 - #9 ,
INFO  12:50:14,824 - #49 niz2
INFO  12:50:14,824 - #10 [
INFO  12:50:14,825 - #11 ]
INFO  12:50:14,825 - #8 ;
INFO  12:50:14,825 - #49 char
INFO  12:50:14,825 - #49 nizch
INFO  12:50:14,825 - #10 [
INFO  12:50:14,825 - #11 ]
INFO  12:50:14,825 - #8 ;
INFO  12:50:14,825 - #4 {
INFO  12:50:14,825 - #41 void
INFO  12:50:14,826 - #49 main
INFO  12:50:14,826 - #20 (
INFO  12:50:14,826 - #21 )
INFO  12:50:14,827 - #49 int
INFO  12:50:14,827 - #49 bodovi
INFO  12:50:14,827 - #8 ;
INFO  12:50:14,827 - #49 bool
INFO  12:50:14,828 - #49 bt
INFO  12:50:14,828 - #8 ;
INFO  12:50:14,828 - #4 {
INFO  12:50:14,828 - #49 bodovi
INFO  12:50:14,828 - #7 =
INFO  12:50:14,828 - #48 0
INFO  12:50:14,829 - #8 ;
INFO  12:50:14,831 - #49 niz
INFO  12:50:14,831 - #7 =
INFO  12:50:14,831 - #29 new
INFO  12:50:14,831 - #49 int
INFO  12:50:14,831 - #10 [
INFO  12:50:14,831 - #48 5
INFO  12:50:14,831 - #11 ]
INFO  12:50:14,831 - #8 ;
INFO  12:50:14,832 - #49 niz
INFO  12:50:14,832 - #10 [
INFO  12:50:14,832 - #48 0
INFO  12:50:14,832 - #11 ]
INFO  12:50:14,832 - #7 =
INFO  12:50:14,833 - #48 1
INFO  12:50:14,833 - #8 ;
INFO  12:50:14,833 - #19 read
INFO  12:50:14,833 - #20 (
INFO  12:50:14,833 - #49 niz
INFO  12:50:14,833 - #21 )
INFO  12:50:14,833 - #8 ;
INFO  12:50:14,833 - #5 }
INFO  12:50:14,834 - #5 }
INFO  12:50:14,843 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:50:14,844 - ===================================
INFO  12:50:14,844 - Pocetak programa test301.
INFO  12:50:14,844 - Deklarisana je konstanta nula na liniji 5
INFO  12:50:14,845 - Deklarisana je konstanta jedan na liniji 6
INFO  12:50:14,845 - Deklarisana je konstanta pet na liniji 7
INFO  12:50:14,845 - Deklarisan je niz niz na liniji 9
INFO  12:50:14,845 - Deklarisan je niz niz2 na liniji 9
INFO  12:50:14,845 - Deklarisan je niz nizch na liniji 10
INFO  12:50:14,845 - Obradjuje se funkcija main na liniji 13
INFO  12:50:14,845 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:50:14,845 - Deklarisana je promenljiva bt na liniji 15
INFO  12:50:14,846 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:50:14,846 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:50:14,846 - kreiran elem za niz 1
INFO  12:50:14,846 - Designator i expr su odgovarajuceg tipa na liniji 19
ERROR 12:50:14,846 - Greska na liniji 21 promenljiva prosledjena funkciji READ nije odgovarajuceg tipa
INFO  12:50:14,846 - Funkciji READ je prosledjena promenljiva niz
INFO  12:50:14,846 - ===================================
ERROR 12:50:14,847 - Parsiranje NIJE uspesno zavrseno!
INFO  12:51:04,308 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:51:04,384 - #2 program
INFO  12:51:04,385 - #49 test301
INFO  12:51:04,385 - #6 const
INFO  12:51:04,387 - #49 int
INFO  12:51:04,387 - #49 nula
INFO  12:51:04,390 - #7 =
INFO  12:51:04,390 - #48 0
INFO  12:51:04,390 - #8 ;
INFO  12:51:04,391 - #6 const
INFO  12:51:04,392 - #49 int
INFO  12:51:04,392 - #49 jedan
INFO  12:51:04,392 - #7 =
INFO  12:51:04,392 - #48 1
INFO  12:51:04,392 - #8 ;
INFO  12:51:04,392 - #6 const
INFO  12:51:04,392 - #49 int
INFO  12:51:04,393 - #49 pet
INFO  12:51:04,393 - #7 =
INFO  12:51:04,393 - #48 5
INFO  12:51:04,393 - #8 ;
INFO  12:51:04,393 - #49 int
INFO  12:51:04,393 - #49 niz
INFO  12:51:04,393 - #10 [
INFO  12:51:04,393 - #11 ]
INFO  12:51:04,393 - #9 ,
INFO  12:51:04,394 - #49 niz2
INFO  12:51:04,394 - #10 [
INFO  12:51:04,394 - #11 ]
INFO  12:51:04,394 - #8 ;
INFO  12:51:04,395 - #49 char
INFO  12:51:04,395 - #49 nizch
INFO  12:51:04,395 - #10 [
INFO  12:51:04,395 - #11 ]
INFO  12:51:04,395 - #8 ;
INFO  12:51:04,395 - #4 {
INFO  12:51:04,395 - #41 void
INFO  12:51:04,397 - #49 main
INFO  12:51:04,397 - #20 (
INFO  12:51:04,397 - #21 )
INFO  12:51:04,398 - #49 int
INFO  12:51:04,398 - #49 bodovi
INFO  12:51:04,398 - #8 ;
INFO  12:51:04,399 - #49 bool
INFO  12:51:04,399 - #49 bt
INFO  12:51:04,399 - #8 ;
INFO  12:51:04,399 - #4 {
INFO  12:51:04,399 - #49 bodovi
INFO  12:51:04,399 - #7 =
INFO  12:51:04,399 - #48 0
INFO  12:51:04,400 - #8 ;
INFO  12:51:04,401 - #49 niz
INFO  12:51:04,401 - #7 =
INFO  12:51:04,402 - #29 new
INFO  12:51:04,402 - #49 int
INFO  12:51:04,402 - #10 [
INFO  12:51:04,402 - #48 5
INFO  12:51:04,402 - #11 ]
INFO  12:51:04,402 - #8 ;
INFO  12:51:04,402 - #49 niz
INFO  12:51:04,402 - #10 [
INFO  12:51:04,403 - #48 0
INFO  12:51:04,403 - #11 ]
INFO  12:51:04,403 - #7 =
INFO  12:51:04,403 - #48 1
INFO  12:51:04,403 - #8 ;
INFO  12:51:04,403 - #19 read
INFO  12:51:04,403 - #20 (
INFO  12:51:04,404 - #49 niz
INFO  12:51:04,404 - #21 )
INFO  12:51:04,404 - #8 ;
INFO  12:51:04,404 - #5 }
INFO  12:51:04,405 - #5 }
INFO  12:51:04,429 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:51:04,430 - ===================================
INFO  12:51:04,431 - Pocetak programa test301.
INFO  12:51:04,431 - Deklarisana je konstanta nula na liniji 5
INFO  12:51:04,431 - Deklarisana je konstanta jedan na liniji 6
INFO  12:51:04,431 - Deklarisana je konstanta pet na liniji 7
INFO  12:51:04,431 - Deklarisan je niz niz na liniji 9
INFO  12:51:04,431 - Deklarisan je niz niz2 na liniji 9
INFO  12:51:04,431 - Deklarisan je niz nizch na liniji 10
INFO  12:51:04,432 - Obradjuje se funkcija main na liniji 13
INFO  12:51:04,432 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:51:04,432 - Deklarisana je promenljiva bt na liniji 15
INFO  12:51:06,086 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:51:07,950 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:51:09,131 - kreiran elem za niz 1
INFO  12:51:09,132 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:52:00,698 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:52:00,750 - #2 program
INFO  12:52:00,750 - #49 test301
INFO  12:52:00,750 - #6 const
INFO  12:52:00,751 - #49 int
INFO  12:52:00,751 - #49 nula
INFO  12:52:00,752 - #7 =
INFO  12:52:00,752 - #48 0
INFO  12:52:00,752 - #8 ;
INFO  12:52:00,753 - #6 const
INFO  12:52:00,753 - #49 int
INFO  12:52:00,753 - #49 jedan
INFO  12:52:00,753 - #7 =
INFO  12:52:00,753 - #48 1
INFO  12:52:00,753 - #8 ;
INFO  12:52:00,753 - #6 const
INFO  12:52:00,753 - #49 int
INFO  12:52:00,754 - #49 pet
INFO  12:52:00,754 - #7 =
INFO  12:52:00,754 - #48 5
INFO  12:52:00,754 - #8 ;
INFO  12:52:00,754 - #49 int
INFO  12:52:00,754 - #49 niz
INFO  12:52:00,754 - #10 [
INFO  12:52:00,754 - #11 ]
INFO  12:52:00,754 - #9 ,
INFO  12:52:00,755 - #49 niz2
INFO  12:52:00,755 - #10 [
INFO  12:52:00,755 - #11 ]
INFO  12:52:00,755 - #8 ;
INFO  12:52:00,755 - #49 char
INFO  12:52:00,755 - #49 nizch
INFO  12:52:00,755 - #10 [
INFO  12:52:00,755 - #11 ]
INFO  12:52:00,755 - #8 ;
INFO  12:52:00,755 - #4 {
INFO  12:52:00,755 - #41 void
INFO  12:52:00,756 - #49 main
INFO  12:52:00,756 - #20 (
INFO  12:52:00,757 - #21 )
INFO  12:52:00,757 - #49 int
INFO  12:52:00,757 - #49 bodovi
INFO  12:52:00,757 - #8 ;
INFO  12:52:00,758 - #49 bool
INFO  12:52:00,758 - #49 bt
INFO  12:52:00,758 - #8 ;
INFO  12:52:00,758 - #4 {
INFO  12:52:00,758 - #49 bodovi
INFO  12:52:00,758 - #7 =
INFO  12:52:00,758 - #48 0
INFO  12:52:00,759 - #8 ;
INFO  12:52:00,761 - #49 niz
INFO  12:52:00,761 - #7 =
INFO  12:52:00,761 - #29 new
INFO  12:52:00,761 - #49 int
INFO  12:52:00,761 - #10 [
INFO  12:52:00,761 - #48 5
INFO  12:52:00,761 - #11 ]
INFO  12:52:00,762 - #8 ;
INFO  12:52:00,762 - #49 niz
INFO  12:52:00,762 - #10 [
INFO  12:52:00,763 - #48 0
INFO  12:52:00,763 - #11 ]
INFO  12:52:00,763 - #7 =
INFO  12:52:00,763 - #48 1
INFO  12:52:00,763 - #8 ;
INFO  12:52:00,763 - #19 read
INFO  12:52:00,763 - #20 (
INFO  12:52:00,763 - #49 bodovi
INFO  12:52:00,763 - #21 )
INFO  12:52:00,763 - #8 ;
INFO  12:52:00,763 - #5 }
INFO  12:52:00,764 - #5 }
INFO  12:52:00,774 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:52:00,774 - ===================================
INFO  12:52:00,775 - Pocetak programa test301.
INFO  12:52:00,775 - Deklarisana je konstanta nula na liniji 5
INFO  12:52:00,775 - Deklarisana je konstanta jedan na liniji 6
INFO  12:52:00,775 - Deklarisana je konstanta pet na liniji 7
INFO  12:52:00,775 - Deklarisan je niz niz na liniji 9
INFO  12:52:00,775 - Deklarisan je niz niz2 na liniji 9
INFO  12:52:00,776 - Deklarisan je niz nizch na liniji 10
INFO  12:52:00,776 - Obradjuje se funkcija main na liniji 13
INFO  12:52:00,776 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:52:00,776 - Deklarisana je promenljiva bt na liniji 15
INFO  12:52:00,776 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:52:00,776 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:52:00,776 - kreiran elem za niz 1
INFO  12:52:00,776 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:52:00,776 - Funkciji READ je prosledjena promenljiva bodovi
INFO  12:52:00,776 - ===================================
INFO  12:52:00,777 - Parsiranje uspesno zavrseno!
INFO  12:52:47,116 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:52:47,166 - #2 program
INFO  12:52:47,166 - #49 test301
INFO  12:52:47,166 - #6 const
INFO  12:52:47,167 - #49 int
INFO  12:52:47,167 - #49 nula
INFO  12:52:47,168 - #7 =
INFO  12:52:47,168 - #48 0
INFO  12:52:47,168 - #8 ;
INFO  12:52:47,169 - #6 const
INFO  12:52:47,169 - #49 int
INFO  12:52:47,169 - #49 jedan
INFO  12:52:47,169 - #7 =
INFO  12:52:47,169 - #48 1
INFO  12:52:47,169 - #8 ;
INFO  12:52:47,169 - #6 const
INFO  12:52:47,169 - #49 int
INFO  12:52:47,169 - #49 pet
INFO  12:52:47,169 - #7 =
INFO  12:52:47,169 - #48 5
INFO  12:52:47,169 - #8 ;
INFO  12:52:47,170 - #49 int
INFO  12:52:47,170 - #49 niz
INFO  12:52:47,170 - #10 [
INFO  12:52:47,170 - #11 ]
INFO  12:52:47,170 - #9 ,
INFO  12:52:47,170 - #49 niz2
INFO  12:52:47,170 - #10 [
INFO  12:52:47,170 - #11 ]
INFO  12:52:47,170 - #8 ;
INFO  12:52:47,170 - #49 char
INFO  12:52:47,171 - #49 nizch
INFO  12:52:47,171 - #10 [
INFO  12:52:47,171 - #11 ]
INFO  12:52:47,171 - #8 ;
INFO  12:52:47,171 - #4 {
INFO  12:52:47,171 - #41 void
INFO  12:52:47,172 - #49 main
INFO  12:52:47,172 - #20 (
INFO  12:52:47,172 - #21 )
INFO  12:52:47,173 - #49 int
INFO  12:52:47,173 - #49 bodovi
INFO  12:52:47,173 - #8 ;
INFO  12:52:47,173 - #49 bool
INFO  12:52:47,173 - #49 bt
INFO  12:52:47,173 - #8 ;
INFO  12:52:47,173 - #4 {
INFO  12:52:47,173 - #49 bodovi
INFO  12:52:47,174 - #7 =
INFO  12:52:47,174 - #48 0
INFO  12:52:47,174 - #8 ;
INFO  12:52:47,176 - #49 niz
INFO  12:52:47,177 - #7 =
INFO  12:52:47,177 - #29 new
INFO  12:52:47,177 - #49 int
INFO  12:52:47,177 - #10 [
INFO  12:52:47,177 - #48 5
INFO  12:52:47,177 - #11 ]
INFO  12:52:47,177 - #8 ;
INFO  12:52:47,177 - #49 niz
INFO  12:52:47,177 - #10 [
INFO  12:52:47,178 - #48 0
INFO  12:52:47,178 - #11 ]
INFO  12:52:47,179 - #7 =
INFO  12:52:47,179 - #48 1
INFO  12:52:47,179 - #8 ;
INFO  12:52:47,179 - #19 read
INFO  12:52:47,179 - #20 (
INFO  12:52:47,179 - #49 niz
INFO  12:52:47,179 - #21 )
INFO  12:52:47,179 - #8 ;
INFO  12:52:47,179 - #5 }
INFO  12:52:47,180 - #5 }
INFO  12:52:47,189 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:52:47,189 - ===================================
INFO  12:52:47,189 - Pocetak programa test301.
INFO  12:52:47,189 - Deklarisana je konstanta nula na liniji 5
INFO  12:52:47,189 - Deklarisana je konstanta jedan na liniji 6
INFO  12:52:47,190 - Deklarisana je konstanta pet na liniji 7
INFO  12:52:47,190 - Deklarisan je niz niz na liniji 9
INFO  12:52:47,190 - Deklarisan je niz niz2 na liniji 9
INFO  12:52:47,190 - Deklarisan je niz nizch na liniji 10
INFO  12:52:47,190 - Obradjuje se funkcija main na liniji 13
INFO  12:52:47,190 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:52:47,190 - Deklarisana je promenljiva bt na liniji 15
INFO  12:52:47,190 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:52:47,190 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:52:47,190 - kreiran elem za niz 1
INFO  12:52:47,190 - Designator i expr su odgovarajuceg tipa na liniji 19
ERROR 12:52:47,191 - Greska na liniji 21 promenljiva prosledjena funkciji READ nije odgovarajuceg tipa
INFO  12:52:47,191 - Funkciji READ je prosledjena promenljiva niz
INFO  12:52:47,191 - ===================================
ERROR 12:52:47,191 - Parsiranje NIJE uspesno zavrseno!
INFO  12:54:10,330 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:54:10,403 - #2 program
INFO  12:54:10,403 - #49 test301
INFO  12:54:10,403 - #6 const
INFO  12:54:10,404 - #49 int
INFO  12:54:10,404 - #49 nula
INFO  12:54:10,405 - #7 =
INFO  12:54:10,405 - #48 0
INFO  12:54:10,405 - #8 ;
INFO  12:54:10,406 - #6 const
INFO  12:54:10,407 - #49 int
INFO  12:54:10,407 - #49 jedan
INFO  12:54:10,407 - #7 =
INFO  12:54:10,407 - #48 1
INFO  12:54:10,407 - #8 ;
INFO  12:54:10,407 - #6 const
INFO  12:54:10,407 - #49 int
INFO  12:54:10,408 - #49 pet
INFO  12:54:10,408 - #7 =
INFO  12:54:10,408 - #48 5
INFO  12:54:10,408 - #8 ;
INFO  12:54:10,408 - #49 int
INFO  12:54:10,408 - #49 niz
INFO  12:54:10,408 - #10 [
INFO  12:54:10,408 - #11 ]
INFO  12:54:10,408 - #9 ,
INFO  12:54:10,408 - #49 niz2
INFO  12:54:10,409 - #10 [
INFO  12:54:10,409 - #11 ]
INFO  12:54:10,409 - #8 ;
INFO  12:54:10,409 - #49 char
INFO  12:54:10,409 - #49 nizch
INFO  12:54:10,409 - #10 [
INFO  12:54:10,409 - #11 ]
INFO  12:54:10,409 - #8 ;
INFO  12:54:10,409 - #4 {
INFO  12:54:10,410 - #41 void
INFO  12:54:10,410 - #49 main
INFO  12:54:10,411 - #20 (
INFO  12:54:10,411 - #21 )
INFO  12:54:10,412 - #49 int
INFO  12:54:10,412 - #49 bodovi
INFO  12:54:10,413 - #8 ;
INFO  12:54:10,413 - #49 bool
INFO  12:54:10,413 - #49 bt
INFO  12:54:10,413 - #8 ;
INFO  12:54:10,413 - #4 {
INFO  12:54:10,414 - #49 bodovi
INFO  12:54:10,414 - #7 =
INFO  12:54:10,414 - #48 0
INFO  12:54:10,415 - #8 ;
INFO  12:54:10,417 - #49 niz
INFO  12:54:10,417 - #7 =
INFO  12:54:10,417 - #29 new
INFO  12:54:10,417 - #49 int
INFO  12:54:10,417 - #10 [
INFO  12:54:10,417 - #48 5
INFO  12:54:10,418 - #11 ]
INFO  12:54:10,418 - #8 ;
INFO  12:54:10,418 - #49 niz
INFO  12:54:10,418 - #10 [
INFO  12:54:10,419 - #48 0
INFO  12:54:10,419 - #11 ]
INFO  12:54:10,419 - #7 =
INFO  12:54:10,419 - #48 1
INFO  12:54:10,419 - #8 ;
INFO  12:54:10,419 - #19 read
INFO  12:54:10,419 - #20 (
INFO  12:54:10,420 - #49 niz
INFO  12:54:10,420 - #21 )
INFO  12:54:10,420 - #8 ;
INFO  12:54:10,420 - #5 }
INFO  12:54:10,421 - #5 }
INFO  12:54:10,448 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:54:10,449 - ===================================
INFO  12:54:10,449 - Pocetak programa test301.
INFO  12:54:10,449 - Deklarisana je konstanta nula na liniji 5
INFO  12:54:10,450 - Deklarisana je konstanta jedan na liniji 6
INFO  12:54:10,450 - Deklarisana je konstanta pet na liniji 7
INFO  12:54:10,450 - Deklarisan je niz niz na liniji 9
INFO  12:54:10,450 - Deklarisan je niz niz2 na liniji 9
INFO  12:54:10,450 - Deklarisan je niz nizch na liniji 10
INFO  12:54:10,451 - Obradjuje se funkcija main na liniji 13
INFO  12:54:10,451 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:54:10,451 - Deklarisana je promenljiva bt na liniji 15
INFO  12:54:12,778 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:54:14,846 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:54:17,462 - kreiran elem za niz 1
INFO  12:54:17,462 - Designator i expr su odgovarajuceg tipa na liniji 19
ERROR 12:54:21,779 - Greska na liniji 21 promenljiva prosledjena funkciji READ nije odgovarajuceg tipa
INFO  12:54:21,779 - Funkciji READ je prosledjena promenljiva niz
INFO  12:54:21,779 - ===================================
ERROR 12:54:21,780 - Parsiranje NIJE uspesno zavrseno!
INFO  12:54:43,338 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:54:43,430 - #2 program
INFO  12:54:43,430 - #49 test301
INFO  12:54:43,430 - #6 const
INFO  12:54:43,432 - #49 int
INFO  12:54:43,432 - #49 nula
INFO  12:54:43,433 - #7 =
INFO  12:54:43,434 - #48 0
INFO  12:54:43,434 - #8 ;
INFO  12:54:43,435 - #6 const
INFO  12:54:43,435 - #49 int
INFO  12:54:43,435 - #49 jedan
INFO  12:54:43,435 - #7 =
INFO  12:54:43,435 - #48 1
INFO  12:54:43,436 - #8 ;
INFO  12:54:43,436 - #6 const
INFO  12:54:43,436 - #49 int
INFO  12:54:43,436 - #49 pet
INFO  12:54:43,436 - #7 =
INFO  12:54:43,436 - #48 5
INFO  12:54:43,436 - #8 ;
INFO  12:54:43,436 - #49 int
INFO  12:54:43,436 - #49 niz
INFO  12:54:43,436 - #10 [
INFO  12:54:43,436 - #11 ]
INFO  12:54:43,436 - #9 ,
INFO  12:54:43,437 - #49 niz2
INFO  12:54:43,437 - #10 [
INFO  12:54:43,437 - #11 ]
INFO  12:54:43,437 - #8 ;
INFO  12:54:43,437 - #49 char
INFO  12:54:43,437 - #49 nizch
INFO  12:54:43,437 - #10 [
INFO  12:54:43,437 - #11 ]
INFO  12:54:43,437 - #8 ;
INFO  12:54:43,437 - #4 {
INFO  12:54:43,438 - #41 void
INFO  12:54:43,438 - #49 main
INFO  12:54:43,438 - #20 (
INFO  12:54:43,439 - #21 )
INFO  12:54:43,439 - #49 int
INFO  12:54:43,440 - #49 bodovi
INFO  12:54:43,440 - #8 ;
INFO  12:54:43,440 - #49 bool
INFO  12:54:43,440 - #49 bt
INFO  12:54:43,440 - #8 ;
INFO  12:54:43,440 - #4 {
INFO  12:54:43,440 - #49 bodovi
INFO  12:54:43,441 - #7 =
INFO  12:54:43,441 - #48 0
INFO  12:54:43,442 - #8 ;
INFO  12:54:43,444 - #49 niz
INFO  12:54:43,444 - #7 =
INFO  12:54:43,444 - #29 new
INFO  12:54:43,444 - #49 int
INFO  12:54:43,445 - #10 [
INFO  12:54:43,445 - #48 5
INFO  12:54:43,445 - #11 ]
INFO  12:54:43,445 - #8 ;
INFO  12:54:43,445 - #49 niz
INFO  12:54:43,445 - #10 [
INFO  12:54:43,446 - #48 0
INFO  12:54:43,446 - #11 ]
INFO  12:54:43,446 - #7 =
INFO  12:54:43,446 - #48 1
INFO  12:54:43,446 - #8 ;
INFO  12:54:43,447 - #19 read
INFO  12:54:43,447 - #20 (
INFO  12:54:43,447 - #49 niz
INFO  12:54:43,447 - #10 [
INFO  12:54:43,447 - #48 0
INFO  12:54:43,447 - #11 ]
INFO  12:54:43,447 - #21 )
INFO  12:54:43,447 - #8 ;
INFO  12:54:43,447 - #5 }
INFO  12:54:43,448 - #5 }
INFO  12:54:43,473 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:54:43,476 - ===================================
INFO  12:54:43,476 - Pocetak programa test301.
INFO  12:54:43,476 - Deklarisana je konstanta nula na liniji 5
INFO  12:54:43,477 - Deklarisana je konstanta jedan na liniji 6
INFO  12:54:43,477 - Deklarisana je konstanta pet na liniji 7
INFO  12:54:43,477 - Deklarisan je niz niz na liniji 9
INFO  12:54:43,477 - Deklarisan je niz niz2 na liniji 9
INFO  12:54:43,477 - Deklarisan je niz nizch na liniji 10
INFO  12:54:43,478 - Obradjuje se funkcija main na liniji 13
INFO  12:54:43,478 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:54:43,478 - Deklarisana je promenljiva bt na liniji 15
INFO  12:54:45,093 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  12:54:47,365 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  12:54:49,316 - kreiran elem za niz 1
INFO  12:54:49,317 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  12:59:20,062 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  12:59:20,159 - #2 program
INFO  12:59:20,159 - #49 test301
INFO  12:59:20,160 - #6 const
INFO  12:59:20,162 - #49 int
INFO  12:59:20,162 - #49 nula
INFO  12:59:20,163 - #7 =
INFO  12:59:20,163 - #48 0
INFO  12:59:20,163 - #8 ;
INFO  12:59:20,164 - #6 const
INFO  12:59:20,165 - #49 int
INFO  12:59:20,165 - #49 jedan
INFO  12:59:20,165 - #7 =
INFO  12:59:20,165 - #48 1
INFO  12:59:20,165 - #8 ;
INFO  12:59:20,165 - #6 const
INFO  12:59:20,165 - #49 int
INFO  12:59:20,165 - #49 pet
INFO  12:59:20,165 - #7 =
INFO  12:59:20,166 - #48 5
INFO  12:59:20,166 - #8 ;
INFO  12:59:20,166 - #49 int
INFO  12:59:20,166 - #49 niz
INFO  12:59:20,166 - #10 [
INFO  12:59:20,166 - #11 ]
INFO  12:59:20,166 - #9 ,
INFO  12:59:20,166 - #49 niz2
INFO  12:59:20,166 - #10 [
INFO  12:59:20,166 - #11 ]
INFO  12:59:20,167 - #8 ;
INFO  12:59:20,167 - #49 char
INFO  12:59:20,167 - #49 nizch
INFO  12:59:20,167 - #10 [
INFO  12:59:20,167 - #11 ]
INFO  12:59:20,167 - #8 ;
INFO  12:59:20,167 - #4 {
INFO  12:59:20,167 - #41 void
INFO  12:59:20,168 - #49 main
INFO  12:59:20,169 - #20 (
INFO  12:59:20,169 - #21 )
INFO  12:59:20,170 - #49 int
INFO  12:59:20,170 - #49 bodovi
INFO  12:59:20,170 - #8 ;
INFO  12:59:20,170 - #49 bool
INFO  12:59:20,171 - #49 bt
INFO  12:59:20,171 - #8 ;
INFO  12:59:20,171 - #4 {
INFO  12:59:20,171 - #49 bodovi
INFO  12:59:20,171 - #7 =
INFO  12:59:20,171 - #48 0
INFO  12:59:20,173 - #8 ;
INFO  12:59:20,176 - #49 niz
INFO  12:59:20,176 - #7 =
INFO  12:59:20,176 - #29 new
INFO  12:59:20,176 - #49 int
INFO  12:59:20,177 - #10 [
INFO  12:59:20,177 - #48 5
INFO  12:59:20,177 - #11 ]
INFO  12:59:20,177 - #8 ;
INFO  12:59:20,177 - #49 niz
INFO  12:59:20,177 - #10 [
INFO  12:59:20,179 - #48 0
INFO  12:59:20,179 - #11 ]
INFO  12:59:20,179 - #7 =
INFO  12:59:20,179 - #48 1
INFO  12:59:20,179 - #8 ;
INFO  12:59:20,179 - #19 read
INFO  12:59:20,179 - #20 (
INFO  12:59:20,180 - #49 niz
INFO  12:59:20,180 - #10 [
INFO  12:59:20,180 - #48 0
INFO  12:59:20,180 - #11 ]
INFO  12:59:20,180 - #21 )
INFO  12:59:20,180 - #8 ;
INFO  12:59:20,180 - #5 }
INFO  12:59:20,181 - #5 }
INFO  12:59:20,212 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  12:59:20,223 - ===================================
INFO  12:59:20,223 - Pocetak programa test301.
INFO  12:59:20,223 - Deklarisana je konstanta nula na liniji 5
INFO  12:59:20,223 - Deklarisana je konstanta jedan na liniji 6
INFO  12:59:20,224 - Deklarisana je konstanta pet na liniji 7
INFO  12:59:20,224 - Deklarisan je niz niz na liniji 9
INFO  12:59:20,224 - Deklarisan je niz niz2 na liniji 9
INFO  12:59:20,224 - Deklarisan je niz nizch na liniji 10
INFO  12:59:20,224 - Obradjuje se funkcija main na liniji 13
INFO  12:59:20,224 - Deklarisana je promenljiva bodovi na liniji 14
INFO  12:59:20,225 - Deklarisana je promenljiva bt na liniji 15
INFO  12:59:26,740 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:01:43,723 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  13:01:43,798 - #2 program
INFO  13:01:43,799 - #49 test301
INFO  13:01:43,799 - #6 const
INFO  13:01:43,801 - #49 int
INFO  13:01:43,801 - #49 nula
INFO  13:01:43,802 - #7 =
INFO  13:01:43,802 - #48 0
INFO  13:01:43,802 - #8 ;
INFO  13:01:43,803 - #6 const
INFO  13:01:43,803 - #49 int
INFO  13:01:43,803 - #49 jedan
INFO  13:01:43,803 - #7 =
INFO  13:01:43,804 - #48 1
INFO  13:01:43,804 - #8 ;
INFO  13:01:43,804 - #6 const
INFO  13:01:43,804 - #49 int
INFO  13:01:43,804 - #49 pet
INFO  13:01:43,804 - #7 =
INFO  13:01:43,804 - #48 5
INFO  13:01:43,804 - #8 ;
INFO  13:01:43,804 - #49 int
INFO  13:01:43,804 - #49 niz
INFO  13:01:43,804 - #10 [
INFO  13:01:43,804 - #11 ]
INFO  13:01:43,804 - #9 ,
INFO  13:01:43,805 - #49 niz2
INFO  13:01:43,805 - #10 [
INFO  13:01:43,805 - #11 ]
INFO  13:01:43,805 - #8 ;
INFO  13:01:43,805 - #49 char
INFO  13:01:43,805 - #49 nizch
INFO  13:01:43,805 - #10 [
INFO  13:01:43,806 - #11 ]
INFO  13:01:43,806 - #8 ;
INFO  13:01:43,806 - #4 {
INFO  13:01:43,806 - #41 void
INFO  13:01:43,807 - #49 main
INFO  13:01:43,807 - #20 (
INFO  13:01:43,807 - #21 )
INFO  13:01:43,808 - #49 int
INFO  13:01:43,808 - #49 bodovi
INFO  13:01:43,808 - #8 ;
INFO  13:01:43,808 - #49 bool
INFO  13:01:43,808 - #49 bt
INFO  13:01:43,808 - #8 ;
INFO  13:01:43,808 - #4 {
INFO  13:01:43,808 - #49 bodovi
INFO  13:01:43,808 - #7 =
INFO  13:01:43,809 - #48 0
INFO  13:01:43,810 - #8 ;
INFO  13:01:43,811 - #49 niz
INFO  13:01:43,811 - #7 =
INFO  13:01:43,812 - #29 new
INFO  13:01:43,812 - #49 int
INFO  13:01:43,812 - #10 [
INFO  13:01:43,812 - #48 5
INFO  13:01:43,812 - #11 ]
INFO  13:01:43,812 - #8 ;
INFO  13:01:43,812 - #49 niz
INFO  13:01:43,812 - #10 [
INFO  13:01:43,813 - #48 0
INFO  13:01:43,813 - #11 ]
INFO  13:01:43,813 - #7 =
INFO  13:01:43,813 - #48 1
INFO  13:01:43,814 - #8 ;
INFO  13:01:43,814 - #19 read
INFO  13:01:43,814 - #20 (
INFO  13:01:43,814 - #49 niz
INFO  13:01:43,814 - #10 [
INFO  13:01:43,814 - #48 0
INFO  13:01:43,814 - #11 ]
INFO  13:01:43,814 - #21 )
INFO  13:01:43,814 - #8 ;
INFO  13:01:43,814 - #5 }
INFO  13:01:43,815 - #5 }
INFO  13:01:43,843 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementRead(
                DesignatorExpr(
                  DesignatorName(
                   niz
                  ) [DesignatorName]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         0
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorExpr]
              ) [StatementRead]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:01:43,844 - ===================================
INFO  13:01:43,844 - Pocetak programa test301.
INFO  13:01:43,844 - Deklarisana je konstanta nula na liniji 5
INFO  13:01:43,844 - Deklarisana je konstanta jedan na liniji 6
INFO  13:01:43,844 - Deklarisana je konstanta pet na liniji 7
INFO  13:01:43,844 - Deklarisan je niz niz na liniji 9
INFO  13:01:43,844 - Deklarisan je niz niz2 na liniji 9
INFO  13:01:43,845 - Deklarisan je niz nizch na liniji 10
INFO  13:01:43,845 - Obradjuje se funkcija main na liniji 13
INFO  13:01:43,845 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:01:43,845 - Deklarisana je promenljiva bt na liniji 15
INFO  13:01:55,619 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:09:23,983 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  13:09:24,040 - #2 program
INFO  13:09:24,040 - #49 test301
INFO  13:09:24,040 - #6 const
INFO  13:09:24,041 - #49 int
INFO  13:09:24,041 - #49 nula
INFO  13:09:24,042 - #7 =
INFO  13:09:24,042 - #48 0
INFO  13:09:24,042 - #8 ;
INFO  13:09:24,043 - #6 const
INFO  13:09:24,043 - #49 int
INFO  13:09:24,043 - #49 jedan
INFO  13:09:24,043 - #7 =
INFO  13:09:24,044 - #48 1
INFO  13:09:24,044 - #8 ;
INFO  13:09:24,044 - #6 const
INFO  13:09:24,044 - #49 int
INFO  13:09:24,044 - #49 pet
INFO  13:09:24,044 - #7 =
INFO  13:09:24,044 - #48 5
INFO  13:09:24,044 - #8 ;
INFO  13:09:24,044 - #49 int
INFO  13:09:24,044 - #49 niz
INFO  13:09:24,044 - #10 [
INFO  13:09:24,044 - #11 ]
INFO  13:09:24,045 - #9 ,
INFO  13:09:24,045 - #49 niz2
INFO  13:09:24,045 - #10 [
INFO  13:09:24,045 - #11 ]
INFO  13:09:24,045 - #8 ;
INFO  13:09:24,045 - #49 char
INFO  13:09:24,045 - #49 nizch
INFO  13:09:24,045 - #10 [
INFO  13:09:24,045 - #11 ]
INFO  13:09:24,045 - #8 ;
INFO  13:09:24,046 - #4 {
INFO  13:09:24,046 - #41 void
INFO  13:09:24,047 - #49 main
INFO  13:09:24,047 - #20 (
INFO  13:09:24,047 - #21 )
INFO  13:09:24,048 - #49 int
INFO  13:09:24,048 - #49 bodovi
INFO  13:09:24,048 - #8 ;
INFO  13:09:24,048 - #49 bool
INFO  13:09:24,048 - #49 bt
INFO  13:09:24,048 - #8 ;
INFO  13:09:24,048 - #4 {
INFO  13:09:24,048 - #49 bodovi
INFO  13:09:24,048 - #7 =
INFO  13:09:24,049 - #48 0
INFO  13:09:24,050 - #8 ;
INFO  13:09:24,051 - #49 niz
INFO  13:09:24,052 - #7 =
INFO  13:09:24,052 - #29 new
INFO  13:09:24,052 - #49 int
INFO  13:09:24,052 - #10 [
INFO  13:09:24,052 - #48 5
INFO  13:09:24,052 - #11 ]
INFO  13:09:24,052 - #8 ;
INFO  13:09:24,052 - #49 niz
INFO  13:09:24,052 - #10 [
INFO  13:09:24,053 - #48 0
INFO  13:09:24,054 - #11 ]
INFO  13:09:24,054 - #7 =
INFO  13:09:24,054 - #48 1
INFO  13:09:24,054 - #8 ;
INFO  13:09:24,054 - #22 print
INFO  13:09:24,054 - #20 (
INFO  13:09:24,054 - #49 niz
INFO  13:09:24,054 - #9 ,
INFO  13:09:24,055 - #48 1
INFO  13:09:24,055 - #21 )
INFO  13:09:24,055 - #8 ;
INFO  13:09:24,056 - #5 }
INFO  13:09:24,057 - #5 }
INFO  13:09:24,066 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementPrintParameter(
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorDesignator(
                        DesignatorIdent(
                         niz
                        ) [DesignatorIdent]
                      ) [FactorDesignator]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                PrintNum(
                 1
                ) [PrintNum]
              ) [StatementPrintParameter]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:09:24,067 - ===================================
INFO  13:09:24,067 - Pocetak programa test301.
INFO  13:09:24,067 - Deklarisana je konstanta nula na liniji 5
INFO  13:09:24,067 - Deklarisana je konstanta jedan na liniji 6
INFO  13:09:24,067 - Deklarisana je konstanta pet na liniji 7
INFO  13:09:24,067 - Deklarisan je niz niz na liniji 9
INFO  13:09:24,067 - Deklarisan je niz niz2 na liniji 9
INFO  13:09:24,067 - Deklarisan je niz nizch na liniji 10
INFO  13:09:24,068 - Obradjuje se funkcija main na liniji 13
INFO  13:09:24,068 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:09:24,068 - Deklarisana je promenljiva bt na liniji 15
INFO  13:09:24,068 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:09:24,068 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  13:09:24,068 - kreiran elem za niz 1
INFO  13:09:24,068 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  13:09:24,068 - Obradjena funkcija PRINT na liniji 21
INFO  13:09:24,068 - ===================================
INFO  13:09:24,069 - Parsiranje uspesno zavrseno!
INFO  13:10:26,209 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test4.mj
INFO  13:10:26,266 - #2 program
INFO  13:10:26,266 - #49 test301
INFO  13:10:26,266 - #6 const
INFO  13:10:26,268 - #49 int
INFO  13:10:26,268 - #49 nula
INFO  13:10:26,268 - #7 =
INFO  13:10:26,269 - #48 0
INFO  13:10:26,269 - #8 ;
INFO  13:10:26,270 - #6 const
INFO  13:10:26,270 - #49 int
INFO  13:10:26,270 - #49 jedan
INFO  13:10:26,270 - #7 =
INFO  13:10:26,270 - #48 1
INFO  13:10:26,270 - #8 ;
INFO  13:10:26,270 - #6 const
INFO  13:10:26,270 - #49 int
INFO  13:10:26,270 - #49 pet
INFO  13:10:26,270 - #7 =
INFO  13:10:26,270 - #48 5
INFO  13:10:26,271 - #8 ;
INFO  13:10:26,271 - #49 int
INFO  13:10:26,271 - #49 niz
INFO  13:10:26,271 - #10 [
INFO  13:10:26,271 - #11 ]
INFO  13:10:26,271 - #9 ,
INFO  13:10:26,271 - #49 niz2
INFO  13:10:26,271 - #10 [
INFO  13:10:26,271 - #11 ]
INFO  13:10:26,271 - #8 ;
INFO  13:10:26,272 - #49 char
INFO  13:10:26,272 - #49 nizch
INFO  13:10:26,272 - #10 [
INFO  13:10:26,272 - #11 ]
INFO  13:10:26,272 - #8 ;
INFO  13:10:26,272 - #4 {
INFO  13:10:26,272 - #41 void
INFO  13:10:26,273 - #49 main
INFO  13:10:26,273 - #20 (
INFO  13:10:26,273 - #21 )
INFO  13:10:26,274 - #49 int
INFO  13:10:26,274 - #49 bodovi
INFO  13:10:26,274 - #8 ;
INFO  13:10:26,274 - #49 bool
INFO  13:10:26,275 - #49 bt
INFO  13:10:26,275 - #8 ;
INFO  13:10:26,275 - #4 {
INFO  13:10:26,275 - #49 bodovi
INFO  13:10:26,275 - #7 =
INFO  13:10:26,275 - #48 0
INFO  13:10:26,276 - #8 ;
INFO  13:10:26,278 - #49 niz
INFO  13:10:26,278 - #7 =
INFO  13:10:26,279 - #29 new
INFO  13:10:26,279 - #49 int
INFO  13:10:26,279 - #10 [
INFO  13:10:26,279 - #48 5
INFO  13:10:26,279 - #11 ]
INFO  13:10:26,279 - #8 ;
INFO  13:10:26,279 - #49 niz
INFO  13:10:26,279 - #10 [
INFO  13:10:26,280 - #48 0
INFO  13:10:26,280 - #11 ]
INFO  13:10:26,280 - #7 =
INFO  13:10:26,280 - #48 1
INFO  13:10:26,281 - #8 ;
INFO  13:10:26,281 - #22 print
INFO  13:10:26,281 - #20 (
INFO  13:10:26,281 - #49 niz
INFO  13:10:26,281 - #9 ,
INFO  13:10:26,281 - #48 1
INFO  13:10:26,281 - #21 )
INFO  13:10:26,282 - #8 ;
INFO  13:10:26,282 - #5 }
INFO  13:10:26,282 - #5 }
INFO  13:10:26,292 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementAssignop(
                DesignatorIdent(
                 niz
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorNew(
                        Type(
                         int
                        ) [Type]
                        ExprPositive(
                          AddopEnd(
                            Term(
                              FactorNum(
                               5
                              ) [FactorNum]
                              NoMulop(
                              ) [NoMulop]
                            ) [Term]
                          ) [AddopEnd]
                        ) [ExprPositive]
                      ) [FactorNew]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorExpr(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorNum(
                           0
                          ) [FactorNum]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorExpr]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopEnd(
                      Term(
                        FactorNum(
                         1
                        ) [FactorNum]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopEnd]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementPrintParameter(
                ExprPositive(
                  AddopEnd(
                    Term(
                      FactorDesignator(
                        DesignatorIdent(
                         niz
                        ) [DesignatorIdent]
                      ) [FactorDesignator]
                      NoMulop(
                      ) [NoMulop]
                    ) [Term]
                  ) [AddopEnd]
                ) [ExprPositive]
                PrintNum(
                 1
                ) [PrintNum]
              ) [StatementPrintParameter]
              NoStatement(
              ) [NoStatement]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:10:26,292 - ===================================
INFO  13:10:26,293 - Pocetak programa test301.
INFO  13:10:26,293 - Deklarisana je konstanta nula na liniji 5
INFO  13:10:26,293 - Deklarisana je konstanta jedan na liniji 6
INFO  13:10:26,293 - Deklarisana je konstanta pet na liniji 7
INFO  13:10:26,293 - Deklarisan je niz niz na liniji 9
INFO  13:10:26,293 - Deklarisan je niz niz2 na liniji 9
INFO  13:10:26,293 - Deklarisan je niz nizch na liniji 10
INFO  13:10:26,293 - Obradjuje se funkcija main na liniji 13
INFO  13:10:26,294 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:10:26,294 - Deklarisana je promenljiva bt na liniji 15
INFO  13:10:26,294 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:10:26,294 - Designator i expr su odgovarajuceg tipa na liniji 18
INFO  13:10:26,294 - kreiran elem za niz 1
INFO  13:10:26,294 - Designator i expr su odgovarajuceg tipa na liniji 19
ERROR 13:10:26,294 - Greska na liniji 21, neodgovarajuci operand instrukcije PRINT
INFO  13:10:26,294 - Obradjena funkcija PRINT na liniji 21
INFO  13:10:26,295 - ===================================
ERROR 13:10:26,295 - Parsiranje NIJE uspesno zavrseno!
INFO  13:13:51,743 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3021.mj
INFO  13:13:51,815 - #2 program
INFO  13:13:51,815 - #49 test301
INFO  13:13:51,816 - #6 const
INFO  13:13:51,817 - #49 int
INFO  13:13:51,818 - #49 nula
INFO  13:13:51,818 - #7 =
INFO  13:13:51,819 - #48 0
INFO  13:13:51,819 - #8 ;
INFO  13:13:51,820 - #6 const
INFO  13:13:51,820 - #49 int
INFO  13:13:51,820 - #49 jedan
INFO  13:13:51,820 - #7 =
INFO  13:13:51,820 - #48 1
INFO  13:13:51,820 - #8 ;
INFO  13:13:51,821 - #6 const
INFO  13:13:51,821 - #49 int
INFO  13:13:51,821 - #49 pet
INFO  13:13:51,821 - #7 =
INFO  13:13:51,821 - #48 5
INFO  13:13:51,821 - #8 ;
INFO  13:13:51,821 - #49 int
INFO  13:13:51,821 - #49 niz
INFO  13:13:51,821 - #10 [
INFO  13:13:51,821 - #11 ]
INFO  13:13:51,821 - #9 ,
INFO  13:13:51,822 - #49 niz2
INFO  13:13:51,822 - #10 [
INFO  13:13:51,822 - #11 ]
INFO  13:13:51,822 - #8 ;
INFO  13:13:51,822 - #49 char
INFO  13:13:51,822 - #49 nizch
INFO  13:13:51,822 - #10 [
INFO  13:13:51,823 - #11 ]
INFO  13:13:51,823 - #8 ;
INFO  13:13:51,823 - #4 {
INFO  13:13:51,823 - #41 void
INFO  13:13:51,824 - #49 main
INFO  13:13:51,825 - #20 (
INFO  13:13:51,825 - #21 )
INFO  13:13:51,826 - #49 int
INFO  13:13:51,826 - #49 bodovi
INFO  13:13:51,827 - #8 ;
INFO  13:13:51,828 - #49 bool
INFO  13:13:51,829 - #49 bt
INFO  13:13:51,829 - #8 ;
INFO  13:13:51,829 - #4 {
INFO  13:13:51,829 - #49 bodovi
INFO  13:13:51,829 - #7 =
INFO  13:13:51,829 - #48 0
INFO  13:13:51,831 - #8 ;
INFO  13:13:51,834 - #49 bodovi
INFO  13:13:51,834 - #24 ++
INFO  13:13:51,835 - #8 ;
INFO  13:13:51,835 - #49 bodovi
INFO  13:13:51,835 - #7 =
INFO  13:13:51,835 - #49 bodovi
INFO  13:13:51,835 - #37 +
INFO  13:13:51,836 - #49 jedan
INFO  13:13:51,837 - #8 ;
INFO  13:13:51,837 - #49 bodovi
INFO  13:13:51,837 - #7 =
INFO  13:13:51,837 - #49 bodovi
INFO  13:13:51,837 - #38 *
INFO  13:13:51,838 - #49 pet
INFO  13:13:51,840 - #8 ;
INFO  13:13:51,840 - #49 bodovi
INFO  13:13:51,840 - #25 --
INFO  13:13:51,840 - #8 ;
INFO  13:13:51,841 - #22 print
INFO  13:13:51,841 - #20 (
INFO  13:13:51,841 - #49 bodovi
INFO  13:13:51,841 - #21 )
INFO  13:13:51,841 - #8 ;
INFO  13:13:51,841 - #49 niz
INFO  13:13:51,842 - #7 =
INFO  13:13:51,842 - #29 new
INFO  13:13:51,842 - #49 int
INFO  13:13:51,842 - #10 [
INFO  13:13:51,842 - #48 3
INFO  13:13:51,842 - #11 ]
INFO  13:13:51,843 - #8 ;
INFO  13:13:51,843 - #49 niz
INFO  13:13:51,843 - #10 [
INFO  13:13:51,845 - #49 nula
INFO  13:13:51,845 - #11 ]
INFO  13:13:51,845 - #7 =
INFO  13:13:51,846 - #49 jedan
INFO  13:13:51,846 - #8 ;
INFO  13:13:51,847 - #49 niz
INFO  13:13:51,847 - #10 [
INFO  13:13:51,847 - #48 1
INFO  13:13:51,847 - #11 ]
INFO  13:13:51,847 - #7 =
INFO  13:13:51,847 - #48 2
INFO  13:13:51,847 - #8 ;
INFO  13:13:51,848 - #49 niz
INFO  13:13:51,848 - #10 [
INFO  13:13:51,848 - #49 niz
INFO  13:13:51,848 - #10 [
INFO  13:13:51,848 - #49 jedan
INFO  13:13:51,848 - #11 ]
INFO  13:13:51,849 - #11 ]
INFO  13:13:51,849 - #7 =
INFO  13:13:51,849 - #49 niz
INFO  13:13:51,849 - #10 [
INFO  13:13:51,851 - #49 niz
INFO  13:13:51,851 - #10 [
INFO  13:13:51,851 - #48 0
INFO  13:13:51,851 - #11 ]
INFO  13:13:51,852 - #11 ]
INFO  13:13:51,852 - #38 *
INFO  13:13:51,852 - #48 3
INFO  13:13:51,852 - #8 ;
INFO  13:13:51,852 - #49 bodovi
INFO  13:13:51,852 - #7 =
INFO  13:13:51,853 - #49 niz
INFO  13:13:51,853 - #10 [
INFO  13:13:51,853 - #48 2
INFO  13:13:51,853 - #11 ]
INFO  13:13:51,853 - #39 /
INFO  13:13:51,853 - #49 niz
INFO  13:13:51,854 - #10 [
INFO  13:13:51,855 - #48 0
INFO  13:13:51,855 - #11 ]
INFO  13:13:51,855 - #8 ;
INFO  13:13:51,855 - #22 print
INFO  13:13:51,855 - #20 (
INFO  13:13:51,855 - #49 bodovi
INFO  13:13:51,855 - #21 )
INFO  13:13:51,855 - #8 ;
INFO  13:13:51,856 - #22 print
INFO  13:13:51,856 - #20 (
INFO  13:13:51,856 - #49 niz
INFO  13:13:51,856 - #10 [
INFO  13:13:51,856 - #48 2
INFO  13:13:51,856 - #11 ]
INFO  13:13:51,856 - #21 )
INFO  13:13:51,856 - #8 ;
INFO  13:13:51,856 - #49 nizch
INFO  13:13:51,856 - #7 =
INFO  13:13:51,856 - #29 new
INFO  13:13:51,856 - #49 char
INFO  13:13:51,856 - #10 [
INFO  13:13:51,856 - #48 3
INFO  13:13:51,856 - #11 ]
INFO  13:13:51,857 - #8 ;
INFO  13:13:51,857 - #49 nizch
INFO  13:13:51,857 - #10 [
INFO  13:13:51,857 - #48 0
INFO  13:13:51,857 - #11 ]
INFO  13:13:51,857 - #7 =
INFO  13:13:51,857 - #50 a
INFO  13:13:51,857 - #8 ;
INFO  13:13:51,857 - #49 nizch
INFO  13:13:51,857 - #10 [
INFO  13:13:51,857 - #49 jedan
INFO  13:13:51,857 - #11 ]
INFO  13:13:51,857 - #7 =
INFO  13:13:51,858 - #50 b
INFO  13:13:51,858 - #8 ;
INFO  13:13:51,858 - #49 nizch
INFO  13:13:51,858 - #10 [
INFO  13:13:51,858 - #49 pet
INFO  13:13:51,858 - #28 -
INFO  13:13:51,858 - #48 3
INFO  13:13:51,859 - #11 ]
INFO  13:13:51,859 - #7 =
INFO  13:13:51,859 - #50 c
INFO  13:13:51,859 - #8 ;
INFO  13:13:51,859 - #22 print
INFO  13:13:51,859 - #20 (
INFO  13:13:51,859 - #49 nizch
INFO  13:13:51,859 - #10 [
INFO  13:13:51,859 - #48 1
INFO  13:13:51,859 - #11 ]
INFO  13:13:51,860 - #21 )
INFO  13:13:51,860 - #8 ;
INFO  13:13:51,860 - #22 print
INFO  13:13:51,860 - #20 (
INFO  13:13:51,860 - #49 nizch
INFO  13:13:51,860 - #10 [
INFO  13:13:51,860 - #49 jedan
INFO  13:13:51,860 - #38 *
INFO  13:13:51,860 - #48 2
INFO  13:13:51,860 - #11 ]
INFO  13:13:51,860 - #21 )
INFO  13:13:51,860 - #8 ;
INFO  13:13:51,860 - #49 bodovi
INFO  13:13:51,860 - #7 =
INFO  13:13:51,860 - #49 bodovi
INFO  13:13:51,860 - #37 +
INFO  13:13:51,860 - #20 (
INFO  13:13:51,861 - #49 pet
INFO  13:13:51,861 - #38 *
INFO  13:13:51,861 - #49 jedan
INFO  13:13:51,861 - #28 -
INFO  13:13:51,861 - #48 1
INFO  13:13:51,861 - #21 )
INFO  13:13:51,861 - #38 *
INFO  13:13:51,861 - #49 bodovi
INFO  13:13:51,861 - #28 -
INFO  13:13:51,861 - #20 (
INFO  13:13:51,861 - #48 3
INFO  13:13:51,861 - #40 %
INFO  13:13:51,861 - #48 2
INFO  13:13:51,862 - #37 +
INFO  13:13:51,862 - #48 3
INFO  13:13:51,862 - #38 *
INFO  13:13:51,862 - #48 2
INFO  13:13:51,862 - #28 -
INFO  13:13:51,862 - #48 3
INFO  13:13:51,862 - #21 )
INFO  13:13:51,863 - #8 ;
INFO  13:13:51,863 - #22 print
INFO  13:13:51,863 - #20 (
INFO  13:13:51,863 - #49 bodovi
INFO  13:13:51,863 - #21 )
INFO  13:13:51,863 - #8 ;
INFO  13:13:51,863 - #19 read
INFO  13:13:51,863 - #20 (
INFO  13:13:51,863 - #49 bodovi
INFO  13:13:51,863 - #21 )
INFO  13:13:51,863 - #8 ;
INFO  13:13:51,863 - #22 print
INFO  13:13:51,863 - #20 (
INFO  13:13:51,863 - #49 bodovi
INFO  13:13:51,863 - #21 )
INFO  13:13:51,863 - #8 ;
INFO  13:13:51,863 - #49 niz2
INFO  13:13:51,863 - #7 =
INFO  13:13:51,863 - #46 range
INFO  13:13:51,864 - #20 (
INFO  13:13:51,864 - #49 bodovi
INFO  13:13:51,864 - #37 +
INFO  13:13:51,864 - #48 1
INFO  13:13:51,864 - #21 )
INFO  13:13:51,864 - #8 ;
INFO  13:13:51,864 - #22 print
INFO  13:13:51,864 - #20 (
INFO  13:13:51,864 - #49 niz2
INFO  13:13:51,864 - #21 )
INFO  13:13:51,864 - #8 ;
INFO  13:13:51,864 - #5 }
INFO  13:13:51,865 - #5 }
INFO  13:13:51,896 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopList(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                      Plus(
                      ) [Plus]
                      Term(
                        FactorDesignator(
                          DesignatorIdent(
                           jedan
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopList]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          MulopList(
                            Star(
                            ) [Star]
                            FactorDesignator(
                              DesignatorIdent(
                               pet
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                            NoMulop(
                            ) [NoMulop]
                          ) [MulopList]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementDecrement(
                      DesignatorIdent(
                       bodovi
                      ) [DesignatorIdent]
                    ) [DesignatorStatementDecrement]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           niz
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                FactorNew(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [FactorNew]
                                NoMulop(
                                ) [NoMulop]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       nula
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     jedan
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                  NoMulop(
                                  ) [NoMulop]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementDesignator(
                            DesignatorStatementMatched(
                              DesignatorStatementAssignop(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     jedan
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                                Assignop(
                                ) [Assignop]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorDesignator(
                                                  DesignatorExpr(
                                                    DesignatorName(
                                                     niz
                                                    ) [DesignatorName]
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          FactorNum(
                                                           0
                                                          ) [FactorNum]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [DesignatorExpr]
                                                ) [FactorDesignator]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [FactorDesignator]
                                      MulopList(
                                        Star(
                                        ) [Star]
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [MulopList]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementMatched]
                          ) [StatementDesignator]
                          Statements(
                            StatementDesignator(
                              DesignatorStatementMatched(
                                DesignatorStatementAssignop(
                                  DesignatorIdent(
                                   bodovi
                                  ) [DesignatorIdent]
                                  Assignop(
                                  ) [Assignop]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        MulopList(
                                          Slash(
                                          ) [Slash]
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                          NoMulop(
                                          ) [NoMulop]
                                        ) [MulopList]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementMatched]
                            ) [StatementDesignator]
                            Statements(
                              StatementPrint(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         bodovi
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [StatementPrint]
                              Statements(
                                StatementPrint(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [StatementPrint]
                                Statements(
                                  StatementDesignator(
                                    DesignatorStatementMatched(
                                      DesignatorStatementAssignop(
                                        DesignatorIdent(
                                         nizch
                                        ) [DesignatorIdent]
                                        Assignop(
                                        ) [Assignop]
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              FactorNew(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [FactorNew]
                                              NoMulop(
                                              ) [NoMulop]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [DesignatorStatementAssignop]
                                    ) [DesignatorStatementMatched]
                                  ) [StatementDesignator]
                                  Statements(
                                    StatementDesignator(
                                      DesignatorStatementMatched(
                                        DesignatorStatementAssignop(
                                          DesignatorExpr(
                                            DesignatorName(
                                             nizch
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                          Assignop(
                                          ) [Assignop]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorChar(
                                                 a
                                                ) [FactorChar]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorStatementAssignop]
                                      ) [DesignatorStatementMatched]
                                    ) [StatementDesignator]
                                    Statements(
                                      StatementDesignator(
                                        DesignatorStatementMatched(
                                          DesignatorStatementAssignop(
                                            DesignatorExpr(
                                              DesignatorName(
                                               nizch
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       jedan
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                            Assignop(
                                            ) [Assignop]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorChar(
                                                   b
                                                  ) [FactorChar]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorStatementAssignop]
                                        ) [DesignatorStatementMatched]
                                      ) [StatementDesignator]
                                      Statements(
                                        StatementDesignator(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorExpr(
                                                DesignatorName(
                                                 nizch
                                                ) [DesignatorName]
                                                ExprPositive(
                                                  AddopList(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           pet
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                    Minus(
                                                    ) [Minus]
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopList]
                                                ) [ExprPositive]
                                              ) [DesignatorExpr]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorChar(
                                                     c
                                                    ) [FactorChar]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [StatementDesignator]
                                        Statements(
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorExpr(
                                                      DesignatorName(
                                                       nizch
                                                      ) [DesignatorName]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorNum(
                                                             1
                                                            ) [FactorNum]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorExpr]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                          Statements(
                                            StatementPrint(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorExpr(
                                                        DesignatorName(
                                                         nizch
                                                        ) [DesignatorName]
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 jedan
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              MulopList(
                                                                Star(
                                                                ) [Star]
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [MulopList]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [DesignatorExpr]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [StatementPrint]
                                            Statements(
                                              StatementDesignator(
                                                DesignatorStatementMatched(
                                                  DesignatorStatementAssignop(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprPositive(
                                                      AddopList(
                                                        AddopList(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                          Plus(
                                                          ) [Plus]
                                                          Term(
                                                            FactorExpr(
                                                              ExprPositive(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         pet
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                      MulopList(
                                                                        Star(
                                                                        ) [Star]
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           jedan
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Minus(
                                                                  ) [Minus]
                                                                  Term(
                                                                    FactorNum(
                                                                     1
                                                                    ) [FactorNum]
                                                                    NoMulop(
                                                                    ) [NoMulop]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                              ) [ExprPositive]
                                                            ) [FactorExpr]
                                                            MulopList(
                                                              Star(
                                                              ) [Star]
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [MulopList]
                                                          ) [Term]
                                                        ) [AddopList]
                                                        Minus(
                                                        ) [Minus]
                                                        Term(
                                                          FactorExpr(
                                                            ExprPositive(
                                                              AddopList(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorNum(
                                                                       3
                                                                      ) [FactorNum]
                                                                      MulopList(
                                                                        Percent(
                                                                        ) [Percent]
                                                                        FactorNum(
                                                                         2
                                                                        ) [FactorNum]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Plus(
                                                                  ) [Plus]
                                                                  Term(
                                                                    FactorNum(
                                                                     3
                                                                    ) [FactorNum]
                                                                    MulopList(
                                                                      Star(
                                                                      ) [Star]
                                                                      FactorNum(
                                                                       2
                                                                      ) [FactorNum]
                                                                      NoMulop(
                                                                      ) [NoMulop]
                                                                    ) [MulopList]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                                Minus(
                                                                ) [Minus]
                                                                Term(
                                                                  FactorNum(
                                                                   3
                                                                  ) [FactorNum]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopList]
                                                            ) [ExprPositive]
                                                          ) [FactorExpr]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopList]
                                                    ) [ExprPositive]
                                                  ) [DesignatorStatementAssignop]
                                                ) [DesignatorStatementMatched]
                                              ) [StatementDesignator]
                                              Statements(
                                                StatementPrint(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           bodovi
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [StatementPrint]
                                                Statements(
                                                  StatementRead(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                  ) [StatementRead]
                                                  Statements(
                                                    StatementPrint(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorDesignator(
                                                              DesignatorIdent(
                                                               bodovi
                                                              ) [DesignatorIdent]
                                                            ) [FactorDesignator]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [StatementPrint]
                                                    Statements(
                                                      StatementDesignator(
                                                        DesignatorStatementMatched(
                                                          DesignatorStatementAssignop(
                                                            DesignatorIdent(
                                                             niz2
                                                            ) [DesignatorIdent]
                                                            Assignop(
                                                            ) [Assignop]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  FactorRange(
                                                                    ExprPositive(
                                                                      AddopList(
                                                                        AddopEnd(
                                                                          Term(
                                                                            FactorDesignator(
                                                                              DesignatorIdent(
                                                                               bodovi
                                                                              ) [DesignatorIdent]
                                                                            ) [FactorDesignator]
                                                                            NoMulop(
                                                                            ) [NoMulop]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                        Plus(
                                                                        ) [Plus]
                                                                        Term(
                                                                          FactorNum(
                                                                           1
                                                                          ) [FactorNum]
                                                                          NoMulop(
                                                                          ) [NoMulop]
                                                                        ) [Term]
                                                                      ) [AddopList]
                                                                    ) [ExprPositive]
                                                                  ) [FactorRange]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [DesignatorStatementAssignop]
                                                        ) [DesignatorStatementMatched]
                                                      ) [StatementDesignator]
                                                      Statements(
                                                        StatementPrint(
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                FactorDesignator(
                                                                  DesignatorIdent(
                                                                   niz2
                                                                  ) [DesignatorIdent]
                                                                ) [FactorDesignator]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [StatementPrint]
                                                        NoStatement(
                                                        ) [NoStatement]
                                                      ) [Statements]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:13:51,899 - ===================================
INFO  13:13:51,901 - Pocetak programa test301.
INFO  13:13:51,901 - Deklarisana je konstanta nula na liniji 5
INFO  13:13:51,903 - Deklarisana je konstanta jedan na liniji 6
INFO  13:13:51,904 - Deklarisana je konstanta pet na liniji 7
INFO  13:13:51,904 - Deklarisan je niz niz na liniji 9
INFO  13:13:51,904 - Deklarisan je niz niz2 na liniji 9
INFO  13:13:51,905 - Deklarisan je niz nizch na liniji 10
INFO  13:13:51,905 - Obradjuje se funkcija main na liniji 13
INFO  13:13:51,905 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:13:51,905 - Deklarisana je promenljiva bt na liniji 15
INFO  13:13:58,045 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3021.mj
INFO  13:13:58,096 - #2 program
INFO  13:13:58,096 - #49 test301
INFO  13:13:58,096 - #6 const
INFO  13:13:58,097 - #49 int
INFO  13:13:58,097 - #49 nula
INFO  13:13:58,098 - #7 =
INFO  13:13:58,098 - #48 0
INFO  13:13:58,098 - #8 ;
INFO  13:13:58,099 - #6 const
INFO  13:13:58,099 - #49 int
INFO  13:13:58,099 - #49 jedan
INFO  13:13:58,099 - #7 =
INFO  13:13:58,099 - #48 1
INFO  13:13:58,100 - #8 ;
INFO  13:13:58,100 - #6 const
INFO  13:13:58,100 - #49 int
INFO  13:13:58,100 - #49 pet
INFO  13:13:58,100 - #7 =
INFO  13:13:58,100 - #48 5
INFO  13:13:58,100 - #8 ;
INFO  13:13:58,100 - #49 int
INFO  13:13:58,101 - #49 niz
INFO  13:13:58,101 - #10 [
INFO  13:13:58,101 - #11 ]
INFO  13:13:58,101 - #9 ,
INFO  13:13:58,101 - #49 niz2
INFO  13:13:58,101 - #10 [
INFO  13:13:58,101 - #11 ]
INFO  13:13:58,101 - #8 ;
INFO  13:13:58,102 - #49 char
INFO  13:13:58,102 - #49 nizch
INFO  13:13:58,102 - #10 [
INFO  13:13:58,102 - #11 ]
INFO  13:13:58,102 - #8 ;
INFO  13:13:58,102 - #4 {
INFO  13:13:58,102 - #41 void
INFO  13:13:58,103 - #49 main
INFO  13:13:58,103 - #20 (
INFO  13:13:58,103 - #21 )
INFO  13:13:58,104 - #49 int
INFO  13:13:58,104 - #49 bodovi
INFO  13:13:58,104 - #8 ;
INFO  13:13:58,104 - #49 bool
INFO  13:13:58,104 - #49 bt
INFO  13:13:58,105 - #8 ;
INFO  13:13:58,105 - #4 {
INFO  13:13:58,105 - #49 bodovi
INFO  13:13:58,105 - #7 =
INFO  13:13:58,105 - #48 0
INFO  13:13:58,106 - #8 ;
INFO  13:13:58,107 - #49 bodovi
INFO  13:13:58,108 - #24 ++
INFO  13:13:58,108 - #8 ;
INFO  13:13:58,108 - #49 bodovi
INFO  13:13:58,108 - #7 =
INFO  13:13:58,108 - #49 bodovi
INFO  13:13:58,108 - #37 +
INFO  13:13:58,108 - #49 jedan
INFO  13:13:58,109 - #8 ;
INFO  13:13:58,110 - #49 bodovi
INFO  13:13:58,110 - #7 =
INFO  13:13:58,110 - #49 bodovi
INFO  13:13:58,110 - #38 *
INFO  13:13:58,110 - #49 pet
INFO  13:13:58,111 - #8 ;
INFO  13:13:58,111 - #49 bodovi
INFO  13:13:58,111 - #25 --
INFO  13:13:58,111 - #8 ;
INFO  13:13:58,112 - #22 print
INFO  13:13:58,112 - #20 (
INFO  13:13:58,112 - #49 bodovi
INFO  13:13:58,112 - #21 )
INFO  13:13:58,112 - #8 ;
INFO  13:13:58,112 - #49 niz
INFO  13:13:58,112 - #7 =
INFO  13:13:58,112 - #29 new
INFO  13:13:58,112 - #49 int
INFO  13:13:58,112 - #10 [
INFO  13:13:58,112 - #48 3
INFO  13:13:58,112 - #11 ]
INFO  13:13:58,112 - #8 ;
INFO  13:13:58,112 - #49 niz
INFO  13:13:58,113 - #10 [
INFO  13:13:58,113 - #49 nula
INFO  13:13:58,113 - #11 ]
INFO  13:13:58,113 - #7 =
INFO  13:13:58,114 - #49 jedan
INFO  13:13:58,114 - #8 ;
INFO  13:13:58,114 - #49 niz
INFO  13:13:58,114 - #10 [
INFO  13:13:58,114 - #48 1
INFO  13:13:58,114 - #11 ]
INFO  13:13:58,114 - #7 =
INFO  13:13:58,114 - #48 2
INFO  13:13:58,114 - #8 ;
INFO  13:13:58,114 - #49 niz
INFO  13:13:58,114 - #10 [
INFO  13:13:58,114 - #49 niz
INFO  13:13:58,114 - #10 [
INFO  13:13:58,115 - #49 jedan
INFO  13:13:58,115 - #11 ]
INFO  13:13:58,115 - #11 ]
INFO  13:13:58,115 - #7 =
INFO  13:13:58,115 - #49 niz
INFO  13:13:58,115 - #10 [
INFO  13:13:58,115 - #49 niz
INFO  13:13:58,115 - #10 [
INFO  13:13:58,115 - #48 0
INFO  13:13:58,115 - #11 ]
INFO  13:13:58,115 - #11 ]
INFO  13:13:58,115 - #38 *
INFO  13:13:58,115 - #48 3
INFO  13:13:58,116 - #8 ;
INFO  13:13:58,116 - #49 bodovi
INFO  13:13:58,116 - #7 =
INFO  13:13:58,116 - #49 niz
INFO  13:13:58,116 - #10 [
INFO  13:13:58,116 - #48 2
INFO  13:13:58,117 - #11 ]
INFO  13:13:58,117 - #39 /
INFO  13:13:58,117 - #49 niz
INFO  13:13:58,118 - #10 [
INFO  13:13:58,118 - #48 0
INFO  13:13:58,118 - #11 ]
INFO  13:13:58,118 - #8 ;
INFO  13:13:58,118 - #22 print
INFO  13:13:58,118 - #20 (
INFO  13:13:58,118 - #49 bodovi
INFO  13:13:58,118 - #21 )
INFO  13:13:58,118 - #8 ;
INFO  13:13:58,118 - #22 print
INFO  13:13:58,119 - #20 (
INFO  13:13:58,119 - #49 niz
INFO  13:13:58,119 - #10 [
INFO  13:13:58,119 - #48 2
INFO  13:13:58,119 - #11 ]
INFO  13:13:58,119 - #21 )
INFO  13:13:58,119 - #8 ;
INFO  13:13:58,119 - #49 nizch
INFO  13:13:58,119 - #7 =
INFO  13:13:58,119 - #29 new
INFO  13:13:58,120 - #49 char
INFO  13:13:58,120 - #10 [
INFO  13:13:58,120 - #48 3
INFO  13:13:58,120 - #11 ]
INFO  13:13:58,120 - #8 ;
INFO  13:13:58,120 - #49 nizch
INFO  13:13:58,120 - #10 [
INFO  13:13:58,120 - #48 0
INFO  13:13:58,120 - #11 ]
INFO  13:13:58,120 - #7 =
INFO  13:13:58,121 - #50 a
INFO  13:13:58,121 - #8 ;
INFO  13:13:58,121 - #49 nizch
INFO  13:13:58,121 - #10 [
INFO  13:13:58,121 - #49 jedan
INFO  13:13:58,122 - #11 ]
INFO  13:13:58,122 - #7 =
INFO  13:13:58,122 - #50 b
INFO  13:13:58,122 - #8 ;
INFO  13:13:58,122 - #49 nizch
INFO  13:13:58,122 - #10 [
INFO  13:13:58,122 - #49 pet
INFO  13:13:58,122 - #28 -
INFO  13:13:58,123 - #48 3
INFO  13:13:58,123 - #11 ]
INFO  13:13:58,124 - #7 =
INFO  13:13:58,124 - #50 c
INFO  13:13:58,124 - #8 ;
INFO  13:13:58,124 - #22 print
INFO  13:13:58,124 - #20 (
INFO  13:13:58,124 - #49 nizch
INFO  13:13:58,124 - #10 [
INFO  13:13:58,124 - #48 1
INFO  13:13:58,124 - #11 ]
INFO  13:13:58,124 - #21 )
INFO  13:13:58,125 - #8 ;
INFO  13:13:58,125 - #22 print
INFO  13:13:58,125 - #20 (
INFO  13:13:58,125 - #49 nizch
INFO  13:13:58,125 - #10 [
INFO  13:13:58,125 - #49 jedan
INFO  13:13:58,125 - #38 *
INFO  13:13:58,125 - #48 2
INFO  13:13:58,125 - #11 ]
INFO  13:13:58,125 - #21 )
INFO  13:13:58,125 - #8 ;
INFO  13:13:58,125 - #49 bodovi
INFO  13:13:58,125 - #7 =
INFO  13:13:58,126 - #49 bodovi
INFO  13:13:58,126 - #37 +
INFO  13:13:58,126 - #20 (
INFO  13:13:58,126 - #49 pet
INFO  13:13:58,126 - #38 *
INFO  13:13:58,126 - #49 jedan
INFO  13:13:58,126 - #28 -
INFO  13:13:58,126 - #48 1
INFO  13:13:58,126 - #21 )
INFO  13:13:58,126 - #38 *
INFO  13:13:58,126 - #49 bodovi
INFO  13:13:58,126 - #28 -
INFO  13:13:58,127 - #20 (
INFO  13:13:58,127 - #48 3
INFO  13:13:58,127 - #40 %
INFO  13:13:58,127 - #48 2
INFO  13:13:58,127 - #37 +
INFO  13:13:58,128 - #48 3
INFO  13:13:58,128 - #38 *
INFO  13:13:58,128 - #48 2
INFO  13:13:58,128 - #28 -
INFO  13:13:58,128 - #48 3
INFO  13:13:58,128 - #21 )
INFO  13:13:58,128 - #8 ;
INFO  13:13:58,128 - #22 print
INFO  13:13:58,128 - #20 (
INFO  13:13:58,128 - #49 bodovi
INFO  13:13:58,128 - #21 )
INFO  13:13:58,128 - #8 ;
INFO  13:13:58,128 - #19 read
INFO  13:13:58,128 - #20 (
INFO  13:13:58,128 - #49 bodovi
INFO  13:13:58,128 - #21 )
INFO  13:13:58,129 - #8 ;
INFO  13:13:58,129 - #22 print
INFO  13:13:58,129 - #20 (
INFO  13:13:58,129 - #49 bodovi
INFO  13:13:58,129 - #21 )
INFO  13:13:58,129 - #8 ;
INFO  13:13:58,129 - #49 niz2
INFO  13:13:58,129 - #7 =
INFO  13:13:58,129 - #46 range
INFO  13:13:58,129 - #20 (
INFO  13:13:58,129 - #49 bodovi
INFO  13:13:58,129 - #37 +
INFO  13:13:58,129 - #48 1
INFO  13:13:58,129 - #21 )
INFO  13:13:58,129 - #8 ;
INFO  13:13:58,130 - #22 print
INFO  13:13:58,130 - #20 (
INFO  13:13:58,130 - #49 niz2
INFO  13:13:58,130 - #21 )
INFO  13:13:58,130 - #8 ;
INFO  13:13:58,130 - #5 }
INFO  13:13:58,131 - #5 }
INFO  13:13:58,142 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopList(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                      Plus(
                      ) [Plus]
                      Term(
                        FactorDesignator(
                          DesignatorIdent(
                           jedan
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopList]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          MulopList(
                            Star(
                            ) [Star]
                            FactorDesignator(
                              DesignatorIdent(
                               pet
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                            NoMulop(
                            ) [NoMulop]
                          ) [MulopList]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementDecrement(
                      DesignatorIdent(
                       bodovi
                      ) [DesignatorIdent]
                    ) [DesignatorStatementDecrement]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           niz
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                FactorNew(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [FactorNew]
                                NoMulop(
                                ) [NoMulop]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       nula
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     jedan
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                  NoMulop(
                                  ) [NoMulop]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementDesignator(
                            DesignatorStatementMatched(
                              DesignatorStatementAssignop(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     jedan
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                                Assignop(
                                ) [Assignop]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorDesignator(
                                                  DesignatorExpr(
                                                    DesignatorName(
                                                     niz
                                                    ) [DesignatorName]
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          FactorNum(
                                                           0
                                                          ) [FactorNum]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [DesignatorExpr]
                                                ) [FactorDesignator]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [FactorDesignator]
                                      MulopList(
                                        Star(
                                        ) [Star]
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [MulopList]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementMatched]
                          ) [StatementDesignator]
                          Statements(
                            StatementDesignator(
                              DesignatorStatementMatched(
                                DesignatorStatementAssignop(
                                  DesignatorIdent(
                                   bodovi
                                  ) [DesignatorIdent]
                                  Assignop(
                                  ) [Assignop]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        MulopList(
                                          Slash(
                                          ) [Slash]
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                          NoMulop(
                                          ) [NoMulop]
                                        ) [MulopList]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementMatched]
                            ) [StatementDesignator]
                            Statements(
                              StatementPrint(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         bodovi
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [StatementPrint]
                              Statements(
                                StatementPrint(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [StatementPrint]
                                Statements(
                                  StatementDesignator(
                                    DesignatorStatementMatched(
                                      DesignatorStatementAssignop(
                                        DesignatorIdent(
                                         nizch
                                        ) [DesignatorIdent]
                                        Assignop(
                                        ) [Assignop]
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              FactorNew(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [FactorNew]
                                              NoMulop(
                                              ) [NoMulop]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [DesignatorStatementAssignop]
                                    ) [DesignatorStatementMatched]
                                  ) [StatementDesignator]
                                  Statements(
                                    StatementDesignator(
                                      DesignatorStatementMatched(
                                        DesignatorStatementAssignop(
                                          DesignatorExpr(
                                            DesignatorName(
                                             nizch
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                          Assignop(
                                          ) [Assignop]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorChar(
                                                 a
                                                ) [FactorChar]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorStatementAssignop]
                                      ) [DesignatorStatementMatched]
                                    ) [StatementDesignator]
                                    Statements(
                                      StatementDesignator(
                                        DesignatorStatementMatched(
                                          DesignatorStatementAssignop(
                                            DesignatorExpr(
                                              DesignatorName(
                                               nizch
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       jedan
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                            Assignop(
                                            ) [Assignop]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorChar(
                                                   b
                                                  ) [FactorChar]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorStatementAssignop]
                                        ) [DesignatorStatementMatched]
                                      ) [StatementDesignator]
                                      Statements(
                                        StatementDesignator(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorExpr(
                                                DesignatorName(
                                                 nizch
                                                ) [DesignatorName]
                                                ExprPositive(
                                                  AddopList(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           pet
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                    Minus(
                                                    ) [Minus]
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopList]
                                                ) [ExprPositive]
                                              ) [DesignatorExpr]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorChar(
                                                     c
                                                    ) [FactorChar]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [StatementDesignator]
                                        Statements(
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorExpr(
                                                      DesignatorName(
                                                       nizch
                                                      ) [DesignatorName]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorNum(
                                                             1
                                                            ) [FactorNum]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorExpr]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                          Statements(
                                            StatementPrint(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorExpr(
                                                        DesignatorName(
                                                         nizch
                                                        ) [DesignatorName]
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 jedan
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              MulopList(
                                                                Star(
                                                                ) [Star]
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [MulopList]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [DesignatorExpr]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [StatementPrint]
                                            Statements(
                                              StatementDesignator(
                                                DesignatorStatementMatched(
                                                  DesignatorStatementAssignop(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprPositive(
                                                      AddopList(
                                                        AddopList(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                          Plus(
                                                          ) [Plus]
                                                          Term(
                                                            FactorExpr(
                                                              ExprPositive(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         pet
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                      MulopList(
                                                                        Star(
                                                                        ) [Star]
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           jedan
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Minus(
                                                                  ) [Minus]
                                                                  Term(
                                                                    FactorNum(
                                                                     1
                                                                    ) [FactorNum]
                                                                    NoMulop(
                                                                    ) [NoMulop]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                              ) [ExprPositive]
                                                            ) [FactorExpr]
                                                            MulopList(
                                                              Star(
                                                              ) [Star]
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [MulopList]
                                                          ) [Term]
                                                        ) [AddopList]
                                                        Minus(
                                                        ) [Minus]
                                                        Term(
                                                          FactorExpr(
                                                            ExprPositive(
                                                              AddopList(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorNum(
                                                                       3
                                                                      ) [FactorNum]
                                                                      MulopList(
                                                                        Percent(
                                                                        ) [Percent]
                                                                        FactorNum(
                                                                         2
                                                                        ) [FactorNum]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Plus(
                                                                  ) [Plus]
                                                                  Term(
                                                                    FactorNum(
                                                                     3
                                                                    ) [FactorNum]
                                                                    MulopList(
                                                                      Star(
                                                                      ) [Star]
                                                                      FactorNum(
                                                                       2
                                                                      ) [FactorNum]
                                                                      NoMulop(
                                                                      ) [NoMulop]
                                                                    ) [MulopList]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                                Minus(
                                                                ) [Minus]
                                                                Term(
                                                                  FactorNum(
                                                                   3
                                                                  ) [FactorNum]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopList]
                                                            ) [ExprPositive]
                                                          ) [FactorExpr]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopList]
                                                    ) [ExprPositive]
                                                  ) [DesignatorStatementAssignop]
                                                ) [DesignatorStatementMatched]
                                              ) [StatementDesignator]
                                              Statements(
                                                StatementPrint(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           bodovi
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [StatementPrint]
                                                Statements(
                                                  StatementRead(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                  ) [StatementRead]
                                                  Statements(
                                                    StatementPrint(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorDesignator(
                                                              DesignatorIdent(
                                                               bodovi
                                                              ) [DesignatorIdent]
                                                            ) [FactorDesignator]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [StatementPrint]
                                                    Statements(
                                                      StatementDesignator(
                                                        DesignatorStatementMatched(
                                                          DesignatorStatementAssignop(
                                                            DesignatorIdent(
                                                             niz2
                                                            ) [DesignatorIdent]
                                                            Assignop(
                                                            ) [Assignop]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  FactorRange(
                                                                    ExprPositive(
                                                                      AddopList(
                                                                        AddopEnd(
                                                                          Term(
                                                                            FactorDesignator(
                                                                              DesignatorIdent(
                                                                               bodovi
                                                                              ) [DesignatorIdent]
                                                                            ) [FactorDesignator]
                                                                            NoMulop(
                                                                            ) [NoMulop]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                        Plus(
                                                                        ) [Plus]
                                                                        Term(
                                                                          FactorNum(
                                                                           1
                                                                          ) [FactorNum]
                                                                          NoMulop(
                                                                          ) [NoMulop]
                                                                        ) [Term]
                                                                      ) [AddopList]
                                                                    ) [ExprPositive]
                                                                  ) [FactorRange]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [DesignatorStatementAssignop]
                                                        ) [DesignatorStatementMatched]
                                                      ) [StatementDesignator]
                                                      Statements(
                                                        StatementPrint(
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                FactorDesignator(
                                                                  DesignatorIdent(
                                                                   niz2
                                                                  ) [DesignatorIdent]
                                                                ) [FactorDesignator]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [StatementPrint]
                                                        NoStatement(
                                                        ) [NoStatement]
                                                      ) [Statements]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:13:58,151 - ===================================
INFO  13:13:58,152 - Pocetak programa test301.
INFO  13:13:58,153 - Deklarisana je konstanta nula na liniji 5
INFO  13:13:58,155 - Deklarisana je konstanta jedan na liniji 6
INFO  13:13:58,155 - Deklarisana je konstanta pet na liniji 7
INFO  13:13:58,155 - Deklarisan je niz niz na liniji 9
INFO  13:13:58,156 - Deklarisan je niz niz2 na liniji 9
INFO  13:13:58,156 - Deklarisan je niz nizch na liniji 10
INFO  13:13:58,156 - Obradjuje se funkcija main na liniji 13
INFO  13:13:58,157 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:13:58,159 - Deklarisana je promenljiva bt na liniji 15
INFO  13:13:58,159 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:13:58,159 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  13:13:58,159 - Designator i expr su odgovarajuceg tipa na liniji 20
INFO  13:13:58,159 - Obradjena funkcija PRINT na liniji 22
INFO  13:13:58,159 - Designator i expr su odgovarajuceg tipa na liniji 25
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 26
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 27
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 28
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 29
INFO  13:13:58,160 - Obradjena funkcija PRINT na liniji 30
INFO  13:13:58,160 - kreiran elem za niz 1
INFO  13:13:58,160 - Obradjena funkcija PRINT na liniji 31
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 34
INFO  13:13:58,160 - kreiran elem za niz 2
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 35
INFO  13:13:58,160 - kreiran elem za niz 2
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 36
INFO  13:13:58,160 - kreiran elem za niz 2
INFO  13:13:58,160 - Designator i expr su odgovarajuceg tipa na liniji 37
INFO  13:13:58,160 - kreiran elem za niz 2
INFO  13:13:58,161 - Obradjena funkcija PRINT na liniji 38
INFO  13:13:58,161 - kreiran elem za niz 2
INFO  13:13:58,161 - Obradjena funkcija PRINT na liniji 39
INFO  13:13:58,161 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  13:13:58,161 - Obradjena funkcija PRINT na liniji 43
INFO  13:13:58,161 - Funkciji READ je prosledjena promenljiva bodovi
INFO  13:13:58,161 - Obradjena funkcija PRINT na liniji 46
INFO  13:14:27,612 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3021.mj
INFO  13:14:27,661 - #2 program
INFO  13:14:27,662 - #49 test301
INFO  13:14:27,662 - #6 const
INFO  13:14:27,663 - #49 int
INFO  13:14:27,663 - #49 nula
INFO  13:14:27,663 - #7 =
INFO  13:14:27,663 - #48 0
INFO  13:14:27,663 - #8 ;
INFO  13:14:27,664 - #6 const
INFO  13:14:27,664 - #49 int
INFO  13:14:27,664 - #49 jedan
INFO  13:14:27,664 - #7 =
INFO  13:14:27,664 - #48 1
INFO  13:14:27,665 - #8 ;
INFO  13:14:27,665 - #6 const
INFO  13:14:27,665 - #49 int
INFO  13:14:27,665 - #49 pet
INFO  13:14:27,665 - #7 =
INFO  13:14:27,665 - #48 5
INFO  13:14:27,665 - #8 ;
INFO  13:14:27,665 - #49 int
INFO  13:14:27,665 - #49 niz
INFO  13:14:27,665 - #10 [
INFO  13:14:27,665 - #11 ]
INFO  13:14:27,665 - #9 ,
INFO  13:14:27,666 - #49 niz2
INFO  13:14:27,666 - #10 [
INFO  13:14:27,666 - #11 ]
INFO  13:14:27,666 - #8 ;
INFO  13:14:27,666 - #49 char
INFO  13:14:27,666 - #49 nizch
INFO  13:14:27,666 - #10 [
INFO  13:14:27,666 - #11 ]
INFO  13:14:27,666 - #8 ;
INFO  13:14:27,666 - #4 {
INFO  13:14:27,666 - #41 void
INFO  13:14:27,667 - #49 main
INFO  13:14:27,667 - #20 (
INFO  13:14:27,667 - #21 )
INFO  13:14:27,668 - #49 int
INFO  13:14:27,668 - #49 bodovi
INFO  13:14:27,669 - #8 ;
INFO  13:14:27,669 - #49 bool
INFO  13:14:27,669 - #49 bt
INFO  13:14:27,669 - #8 ;
INFO  13:14:27,669 - #4 {
INFO  13:14:27,669 - #49 bodovi
INFO  13:14:27,669 - #7 =
INFO  13:14:27,669 - #48 0
INFO  13:14:27,670 - #8 ;
INFO  13:14:27,672 - #49 bodovi
INFO  13:14:27,672 - #24 ++
INFO  13:14:27,672 - #8 ;
INFO  13:14:27,672 - #49 bodovi
INFO  13:14:27,672 - #7 =
INFO  13:14:27,672 - #49 bodovi
INFO  13:14:27,672 - #37 +
INFO  13:14:27,673 - #49 jedan
INFO  13:14:27,673 - #8 ;
INFO  13:14:27,674 - #49 bodovi
INFO  13:14:27,674 - #7 =
INFO  13:14:27,674 - #49 bodovi
INFO  13:14:27,674 - #38 *
INFO  13:14:27,674 - #49 pet
INFO  13:14:27,675 - #8 ;
INFO  13:14:27,675 - #49 bodovi
INFO  13:14:27,675 - #25 --
INFO  13:14:27,675 - #8 ;
INFO  13:14:27,675 - #22 print
INFO  13:14:27,676 - #20 (
INFO  13:14:27,676 - #49 bodovi
INFO  13:14:27,676 - #21 )
INFO  13:14:27,676 - #8 ;
INFO  13:14:27,676 - #49 niz
INFO  13:14:27,676 - #7 =
INFO  13:14:27,676 - #29 new
INFO  13:14:27,676 - #49 int
INFO  13:14:27,676 - #10 [
INFO  13:14:27,677 - #48 3
INFO  13:14:27,677 - #11 ]
INFO  13:14:27,677 - #8 ;
INFO  13:14:27,677 - #49 niz
INFO  13:14:27,677 - #10 [
INFO  13:14:27,678 - #49 nula
INFO  13:14:27,678 - #11 ]
INFO  13:14:27,678 - #7 =
INFO  13:14:27,678 - #49 jedan
INFO  13:14:27,679 - #8 ;
INFO  13:14:27,679 - #49 niz
INFO  13:14:27,679 - #10 [
INFO  13:14:27,679 - #48 1
INFO  13:14:27,679 - #11 ]
INFO  13:14:27,679 - #7 =
INFO  13:14:27,679 - #48 2
INFO  13:14:27,679 - #8 ;
INFO  13:14:27,679 - #49 niz
INFO  13:14:27,679 - #10 [
INFO  13:14:27,679 - #49 niz
INFO  13:14:27,679 - #10 [
INFO  13:14:27,679 - #49 jedan
INFO  13:14:27,679 - #11 ]
INFO  13:14:27,680 - #11 ]
INFO  13:14:27,680 - #7 =
INFO  13:14:27,680 - #49 niz
INFO  13:14:27,680 - #10 [
INFO  13:14:27,680 - #49 niz
INFO  13:14:27,680 - #10 [
INFO  13:14:27,680 - #48 0
INFO  13:14:27,680 - #11 ]
INFO  13:14:27,680 - #11 ]
INFO  13:14:27,680 - #38 *
INFO  13:14:27,680 - #48 3
INFO  13:14:27,680 - #8 ;
INFO  13:14:27,680 - #49 bodovi
INFO  13:14:27,680 - #7 =
INFO  13:14:27,680 - #49 niz
INFO  13:14:27,680 - #10 [
INFO  13:14:27,681 - #48 2
INFO  13:14:27,681 - #11 ]
INFO  13:14:27,681 - #39 /
INFO  13:14:27,681 - #49 niz
INFO  13:14:27,681 - #10 [
INFO  13:14:27,682 - #48 0
INFO  13:14:27,682 - #11 ]
INFO  13:14:27,682 - #8 ;
INFO  13:14:27,682 - #22 print
INFO  13:14:27,682 - #20 (
INFO  13:14:27,682 - #49 bodovi
INFO  13:14:27,682 - #21 )
INFO  13:14:27,682 - #8 ;
INFO  13:14:27,682 - #22 print
INFO  13:14:27,682 - #20 (
INFO  13:14:27,682 - #49 niz
INFO  13:14:27,682 - #10 [
INFO  13:14:27,682 - #48 2
INFO  13:14:27,682 - #11 ]
INFO  13:14:27,682 - #21 )
INFO  13:14:27,683 - #8 ;
INFO  13:14:27,683 - #49 nizch
INFO  13:14:27,683 - #7 =
INFO  13:14:27,683 - #29 new
INFO  13:14:27,683 - #49 char
INFO  13:14:27,683 - #10 [
INFO  13:14:27,683 - #48 3
INFO  13:14:27,683 - #11 ]
INFO  13:14:27,683 - #8 ;
INFO  13:14:27,683 - #49 nizch
INFO  13:14:27,683 - #10 [
INFO  13:14:27,683 - #48 0
INFO  13:14:27,683 - #11 ]
INFO  13:14:27,683 - #7 =
INFO  13:14:27,684 - #50 a
INFO  13:14:27,684 - #8 ;
INFO  13:14:27,684 - #49 nizch
INFO  13:14:27,684 - #10 [
INFO  13:14:27,684 - #49 jedan
INFO  13:14:27,684 - #11 ]
INFO  13:14:27,684 - #7 =
INFO  13:14:27,684 - #50 b
INFO  13:14:27,684 - #8 ;
INFO  13:14:27,684 - #49 nizch
INFO  13:14:27,684 - #10 [
INFO  13:14:27,685 - #49 pet
INFO  13:14:27,685 - #28 -
INFO  13:14:27,685 - #48 3
INFO  13:14:27,685 - #11 ]
INFO  13:14:27,685 - #7 =
INFO  13:14:27,685 - #50 c
INFO  13:14:27,686 - #8 ;
INFO  13:14:27,686 - #22 print
INFO  13:14:27,686 - #20 (
INFO  13:14:27,686 - #49 nizch
INFO  13:14:27,686 - #10 [
INFO  13:14:27,686 - #48 1
INFO  13:14:27,686 - #11 ]
INFO  13:14:27,686 - #21 )
INFO  13:14:27,686 - #8 ;
INFO  13:14:27,686 - #22 print
INFO  13:14:27,686 - #20 (
INFO  13:14:27,686 - #49 nizch
INFO  13:14:27,686 - #10 [
INFO  13:14:27,686 - #49 jedan
INFO  13:14:27,686 - #38 *
INFO  13:14:27,686 - #48 2
INFO  13:14:27,687 - #11 ]
INFO  13:14:27,687 - #21 )
INFO  13:14:27,687 - #8 ;
INFO  13:14:27,687 - #49 bodovi
INFO  13:14:27,687 - #7 =
INFO  13:14:27,687 - #49 bodovi
INFO  13:14:27,687 - #37 +
INFO  13:14:27,687 - #20 (
INFO  13:14:27,687 - #49 pet
INFO  13:14:27,687 - #38 *
INFO  13:14:27,687 - #49 jedan
INFO  13:14:27,687 - #28 -
INFO  13:14:27,687 - #48 1
INFO  13:14:27,687 - #21 )
INFO  13:14:27,687 - #38 *
INFO  13:14:27,688 - #49 bodovi
INFO  13:14:27,688 - #28 -
INFO  13:14:27,688 - #20 (
INFO  13:14:27,688 - #48 3
INFO  13:14:27,688 - #40 %
INFO  13:14:27,688 - #48 2
INFO  13:14:27,688 - #37 +
INFO  13:14:27,689 - #48 3
INFO  13:14:27,689 - #38 *
INFO  13:14:27,689 - #48 2
INFO  13:14:27,689 - #28 -
INFO  13:14:27,689 - #48 3
INFO  13:14:27,689 - #21 )
INFO  13:14:27,689 - #8 ;
INFO  13:14:27,689 - #22 print
INFO  13:14:27,689 - #20 (
INFO  13:14:27,689 - #49 bodovi
INFO  13:14:27,689 - #21 )
INFO  13:14:27,689 - #8 ;
INFO  13:14:27,689 - #19 read
INFO  13:14:27,689 - #20 (
INFO  13:14:27,689 - #49 bodovi
INFO  13:14:27,689 - #21 )
INFO  13:14:27,689 - #8 ;
INFO  13:14:27,689 - #22 print
INFO  13:14:27,689 - #20 (
INFO  13:14:27,689 - #49 bodovi
INFO  13:14:27,690 - #21 )
INFO  13:14:27,690 - #8 ;
INFO  13:14:27,690 - #22 print
INFO  13:14:27,690 - #20 (
INFO  13:14:27,690 - #49 niz2
INFO  13:14:27,690 - #21 )
INFO  13:14:27,690 - #8 ;
INFO  13:14:27,690 - #5 }
INFO  13:14:27,691 - #5 }
INFO  13:14:27,702 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopList(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                      Plus(
                      ) [Plus]
                      Term(
                        FactorDesignator(
                          DesignatorIdent(
                           jedan
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopList]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          MulopList(
                            Star(
                            ) [Star]
                            FactorDesignator(
                              DesignatorIdent(
                               pet
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                            NoMulop(
                            ) [NoMulop]
                          ) [MulopList]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementDecrement(
                      DesignatorIdent(
                       bodovi
                      ) [DesignatorIdent]
                    ) [DesignatorStatementDecrement]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           niz
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                FactorNew(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [FactorNew]
                                NoMulop(
                                ) [NoMulop]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       nula
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     jedan
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                  NoMulop(
                                  ) [NoMulop]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementDesignator(
                            DesignatorStatementMatched(
                              DesignatorStatementAssignop(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     jedan
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                                Assignop(
                                ) [Assignop]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorDesignator(
                                                  DesignatorExpr(
                                                    DesignatorName(
                                                     niz
                                                    ) [DesignatorName]
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          FactorNum(
                                                           0
                                                          ) [FactorNum]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [DesignatorExpr]
                                                ) [FactorDesignator]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [FactorDesignator]
                                      MulopList(
                                        Star(
                                        ) [Star]
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [MulopList]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementMatched]
                          ) [StatementDesignator]
                          Statements(
                            StatementDesignator(
                              DesignatorStatementMatched(
                                DesignatorStatementAssignop(
                                  DesignatorIdent(
                                   bodovi
                                  ) [DesignatorIdent]
                                  Assignop(
                                  ) [Assignop]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        MulopList(
                                          Slash(
                                          ) [Slash]
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                          NoMulop(
                                          ) [NoMulop]
                                        ) [MulopList]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementMatched]
                            ) [StatementDesignator]
                            Statements(
                              StatementPrint(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         bodovi
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [StatementPrint]
                              Statements(
                                StatementPrint(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [StatementPrint]
                                Statements(
                                  StatementDesignator(
                                    DesignatorStatementMatched(
                                      DesignatorStatementAssignop(
                                        DesignatorIdent(
                                         nizch
                                        ) [DesignatorIdent]
                                        Assignop(
                                        ) [Assignop]
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              FactorNew(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [FactorNew]
                                              NoMulop(
                                              ) [NoMulop]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [DesignatorStatementAssignop]
                                    ) [DesignatorStatementMatched]
                                  ) [StatementDesignator]
                                  Statements(
                                    StatementDesignator(
                                      DesignatorStatementMatched(
                                        DesignatorStatementAssignop(
                                          DesignatorExpr(
                                            DesignatorName(
                                             nizch
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                          Assignop(
                                          ) [Assignop]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorChar(
                                                 a
                                                ) [FactorChar]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorStatementAssignop]
                                      ) [DesignatorStatementMatched]
                                    ) [StatementDesignator]
                                    Statements(
                                      StatementDesignator(
                                        DesignatorStatementMatched(
                                          DesignatorStatementAssignop(
                                            DesignatorExpr(
                                              DesignatorName(
                                               nizch
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       jedan
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                            Assignop(
                                            ) [Assignop]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorChar(
                                                   b
                                                  ) [FactorChar]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorStatementAssignop]
                                        ) [DesignatorStatementMatched]
                                      ) [StatementDesignator]
                                      Statements(
                                        StatementDesignator(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorExpr(
                                                DesignatorName(
                                                 nizch
                                                ) [DesignatorName]
                                                ExprPositive(
                                                  AddopList(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           pet
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                    Minus(
                                                    ) [Minus]
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopList]
                                                ) [ExprPositive]
                                              ) [DesignatorExpr]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorChar(
                                                     c
                                                    ) [FactorChar]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [StatementDesignator]
                                        Statements(
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorExpr(
                                                      DesignatorName(
                                                       nizch
                                                      ) [DesignatorName]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorNum(
                                                             1
                                                            ) [FactorNum]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorExpr]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                          Statements(
                                            StatementPrint(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorExpr(
                                                        DesignatorName(
                                                         nizch
                                                        ) [DesignatorName]
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 jedan
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              MulopList(
                                                                Star(
                                                                ) [Star]
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [MulopList]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [DesignatorExpr]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [StatementPrint]
                                            Statements(
                                              StatementDesignator(
                                                DesignatorStatementMatched(
                                                  DesignatorStatementAssignop(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprPositive(
                                                      AddopList(
                                                        AddopList(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                          Plus(
                                                          ) [Plus]
                                                          Term(
                                                            FactorExpr(
                                                              ExprPositive(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         pet
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                      MulopList(
                                                                        Star(
                                                                        ) [Star]
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           jedan
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Minus(
                                                                  ) [Minus]
                                                                  Term(
                                                                    FactorNum(
                                                                     1
                                                                    ) [FactorNum]
                                                                    NoMulop(
                                                                    ) [NoMulop]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                              ) [ExprPositive]
                                                            ) [FactorExpr]
                                                            MulopList(
                                                              Star(
                                                              ) [Star]
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [MulopList]
                                                          ) [Term]
                                                        ) [AddopList]
                                                        Minus(
                                                        ) [Minus]
                                                        Term(
                                                          FactorExpr(
                                                            ExprPositive(
                                                              AddopList(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorNum(
                                                                       3
                                                                      ) [FactorNum]
                                                                      MulopList(
                                                                        Percent(
                                                                        ) [Percent]
                                                                        FactorNum(
                                                                         2
                                                                        ) [FactorNum]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Plus(
                                                                  ) [Plus]
                                                                  Term(
                                                                    FactorNum(
                                                                     3
                                                                    ) [FactorNum]
                                                                    MulopList(
                                                                      Star(
                                                                      ) [Star]
                                                                      FactorNum(
                                                                       2
                                                                      ) [FactorNum]
                                                                      NoMulop(
                                                                      ) [NoMulop]
                                                                    ) [MulopList]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                                Minus(
                                                                ) [Minus]
                                                                Term(
                                                                  FactorNum(
                                                                   3
                                                                  ) [FactorNum]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopList]
                                                            ) [ExprPositive]
                                                          ) [FactorExpr]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopList]
                                                    ) [ExprPositive]
                                                  ) [DesignatorStatementAssignop]
                                                ) [DesignatorStatementMatched]
                                              ) [StatementDesignator]
                                              Statements(
                                                StatementPrint(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           bodovi
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [StatementPrint]
                                                Statements(
                                                  StatementRead(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                  ) [StatementRead]
                                                  Statements(
                                                    StatementPrint(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorDesignator(
                                                              DesignatorIdent(
                                                               bodovi
                                                              ) [DesignatorIdent]
                                                            ) [FactorDesignator]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [StatementPrint]
                                                    Statements(
                                                      StatementPrint(
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 niz2
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [StatementPrint]
                                                      NoStatement(
                                                      ) [NoStatement]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:14:27,704 - ===================================
INFO  13:14:27,704 - Pocetak programa test301.
INFO  13:14:27,704 - Deklarisana je konstanta nula na liniji 5
INFO  13:14:27,704 - Deklarisana je konstanta jedan na liniji 6
INFO  13:14:27,704 - Deklarisana je konstanta pet na liniji 7
INFO  13:14:27,705 - Deklarisan je niz niz na liniji 9
INFO  13:14:27,705 - Deklarisan je niz niz2 na liniji 9
INFO  13:14:27,705 - Deklarisan je niz nizch na liniji 10
INFO  13:14:27,705 - Obradjuje se funkcija main na liniji 13
INFO  13:14:27,705 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:14:27,705 - Deklarisana je promenljiva bt na liniji 15
INFO  13:14:27,705 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:14:27,705 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  13:14:27,705 - Designator i expr su odgovarajuceg tipa na liniji 20
INFO  13:14:27,705 - Obradjena funkcija PRINT na liniji 22
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 25
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 26
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 27
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 28
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 29
INFO  13:14:27,706 - Obradjena funkcija PRINT na liniji 30
INFO  13:14:27,706 - kreiran elem za niz 1
INFO  13:14:27,706 - Obradjena funkcija PRINT na liniji 31
INFO  13:14:27,706 - Designator i expr su odgovarajuceg tipa na liniji 34
INFO  13:14:27,707 - kreiran elem za niz 2
INFO  13:14:27,707 - Designator i expr su odgovarajuceg tipa na liniji 35
INFO  13:14:27,707 - kreiran elem za niz 2
INFO  13:14:27,707 - Designator i expr su odgovarajuceg tipa na liniji 36
INFO  13:14:27,707 - kreiran elem za niz 2
INFO  13:14:27,707 - Designator i expr su odgovarajuceg tipa na liniji 37
INFO  13:14:27,707 - kreiran elem za niz 2
INFO  13:14:27,707 - Obradjena funkcija PRINT na liniji 38
INFO  13:14:27,707 - kreiran elem za niz 2
INFO  13:14:27,707 - Obradjena funkcija PRINT na liniji 39
INFO  13:14:27,707 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  13:14:27,707 - Obradjena funkcija PRINT na liniji 43
INFO  13:14:27,707 - Funkciji READ je prosledjena promenljiva bodovi
INFO  13:14:27,707 - Obradjena funkcija PRINT na liniji 46
INFO  13:14:27,707 - Obradjena funkcija PRINT na liniji 49
INFO  13:14:27,707 - ===================================
INFO  13:14:27,708 - Parsiranje uspesno zavrseno!
INFO  13:17:21,104 - Compiling source file: C:\Users\lenovo\Desktop\pp1 projekat\projekat\workspace\MJCompiler\test\test3021.mj
INFO  13:17:21,158 - #2 program
INFO  13:17:21,158 - #49 test301
INFO  13:17:21,158 - #6 const
INFO  13:17:21,159 - #49 int
INFO  13:17:21,159 - #49 nula
INFO  13:17:21,159 - #7 =
INFO  13:17:21,160 - #48 0
INFO  13:17:21,160 - #8 ;
INFO  13:17:21,160 - #6 const
INFO  13:17:21,161 - #49 int
INFO  13:17:21,161 - #49 jedan
INFO  13:17:21,161 - #7 =
INFO  13:17:21,161 - #48 1
INFO  13:17:21,161 - #8 ;
INFO  13:17:21,161 - #6 const
INFO  13:17:21,161 - #49 int
INFO  13:17:21,161 - #49 pet
INFO  13:17:21,161 - #7 =
INFO  13:17:21,161 - #48 5
INFO  13:17:21,161 - #8 ;
INFO  13:17:21,161 - #49 int
INFO  13:17:21,162 - #49 niz
INFO  13:17:21,162 - #10 [
INFO  13:17:21,162 - #11 ]
INFO  13:17:21,162 - #9 ,
INFO  13:17:21,162 - #49 niz2
INFO  13:17:21,162 - #10 [
INFO  13:17:21,162 - #11 ]
INFO  13:17:21,162 - #8 ;
INFO  13:17:21,163 - #49 char
INFO  13:17:21,163 - #49 nizch
INFO  13:17:21,163 - #10 [
INFO  13:17:21,163 - #11 ]
INFO  13:17:21,163 - #8 ;
INFO  13:17:21,163 - #4 {
INFO  13:17:21,163 - #41 void
INFO  13:17:21,164 - #49 main
INFO  13:17:21,164 - #20 (
INFO  13:17:21,164 - #21 )
INFO  13:17:21,165 - #49 int
INFO  13:17:21,165 - #49 bodovi
INFO  13:17:21,165 - #8 ;
INFO  13:17:21,165 - #49 bool
INFO  13:17:21,166 - #49 bt
INFO  13:17:21,166 - #8 ;
INFO  13:17:21,166 - #4 {
INFO  13:17:21,166 - #49 bodovi
INFO  13:17:21,166 - #7 =
INFO  13:17:21,166 - #48 0
INFO  13:17:21,167 - #8 ;
INFO  13:17:21,168 - #49 bodovi
INFO  13:17:21,169 - #24 ++
INFO  13:17:21,169 - #8 ;
INFO  13:17:21,169 - #49 bodovi
INFO  13:17:21,169 - #7 =
INFO  13:17:21,169 - #49 bodovi
INFO  13:17:21,169 - #37 +
INFO  13:17:21,169 - #49 jedan
INFO  13:17:21,170 - #8 ;
INFO  13:17:21,171 - #49 bodovi
INFO  13:17:21,171 - #7 =
INFO  13:17:21,171 - #49 bodovi
INFO  13:17:21,171 - #38 *
INFO  13:17:21,171 - #49 pet
INFO  13:17:21,173 - #8 ;
INFO  13:17:21,173 - #49 bodovi
INFO  13:17:21,173 - #25 --
INFO  13:17:21,173 - #8 ;
INFO  13:17:21,173 - #22 print
INFO  13:17:21,173 - #20 (
INFO  13:17:21,173 - #49 bodovi
INFO  13:17:21,173 - #21 )
INFO  13:17:21,173 - #8 ;
INFO  13:17:21,173 - #49 niz
INFO  13:17:21,173 - #7 =
INFO  13:17:21,173 - #29 new
INFO  13:17:21,173 - #49 int
INFO  13:17:21,174 - #10 [
INFO  13:17:21,174 - #48 3
INFO  13:17:21,174 - #11 ]
INFO  13:17:21,174 - #8 ;
INFO  13:17:21,174 - #49 niz
INFO  13:17:21,174 - #10 [
INFO  13:17:21,175 - #49 nula
INFO  13:17:21,175 - #11 ]
INFO  13:17:21,175 - #7 =
INFO  13:17:21,175 - #49 jedan
INFO  13:17:21,175 - #8 ;
INFO  13:17:21,175 - #49 niz
INFO  13:17:21,175 - #10 [
INFO  13:17:21,175 - #48 1
INFO  13:17:21,175 - #11 ]
INFO  13:17:21,175 - #7 =
INFO  13:17:21,175 - #48 2
INFO  13:17:21,175 - #8 ;
INFO  13:17:21,176 - #49 niz
INFO  13:17:21,176 - #10 [
INFO  13:17:21,176 - #49 niz
INFO  13:17:21,176 - #10 [
INFO  13:17:21,176 - #49 jedan
INFO  13:17:21,176 - #11 ]
INFO  13:17:21,176 - #11 ]
INFO  13:17:21,176 - #7 =
INFO  13:17:21,176 - #49 niz
INFO  13:17:21,176 - #10 [
INFO  13:17:21,176 - #49 niz
INFO  13:17:21,176 - #10 [
INFO  13:17:21,176 - #48 0
INFO  13:17:21,176 - #11 ]
INFO  13:17:21,177 - #11 ]
INFO  13:17:21,177 - #38 *
INFO  13:17:21,177 - #48 3
INFO  13:17:21,177 - #8 ;
INFO  13:17:21,177 - #49 bodovi
INFO  13:17:21,177 - #7 =
INFO  13:17:21,177 - #49 niz
INFO  13:17:21,177 - #10 [
INFO  13:17:21,177 - #48 2
INFO  13:17:21,177 - #11 ]
INFO  13:17:21,177 - #39 /
INFO  13:17:21,177 - #49 niz
INFO  13:17:21,178 - #10 [
INFO  13:17:21,179 - #48 0
INFO  13:17:21,179 - #11 ]
INFO  13:17:21,179 - #8 ;
INFO  13:17:21,179 - #22 print
INFO  13:17:21,179 - #20 (
INFO  13:17:21,179 - #49 bodovi
INFO  13:17:21,179 - #21 )
INFO  13:17:21,179 - #8 ;
INFO  13:17:21,179 - #22 print
INFO  13:17:21,179 - #20 (
INFO  13:17:21,179 - #49 niz
INFO  13:17:21,179 - #10 [
INFO  13:17:21,179 - #48 2
INFO  13:17:21,179 - #11 ]
INFO  13:17:21,180 - #21 )
INFO  13:17:21,180 - #8 ;
INFO  13:17:21,180 - #49 nizch
INFO  13:17:21,180 - #7 =
INFO  13:17:21,180 - #29 new
INFO  13:17:21,180 - #49 char
INFO  13:17:21,180 - #10 [
INFO  13:17:21,180 - #48 3
INFO  13:17:21,180 - #11 ]
INFO  13:17:21,180 - #8 ;
INFO  13:17:21,180 - #49 nizch
INFO  13:17:21,180 - #10 [
INFO  13:17:21,180 - #48 0
INFO  13:17:21,180 - #11 ]
INFO  13:17:21,180 - #7 =
INFO  13:17:21,181 - #50 a
INFO  13:17:21,181 - #8 ;
INFO  13:17:21,181 - #49 nizch
INFO  13:17:21,181 - #10 [
INFO  13:17:21,181 - #49 jedan
INFO  13:17:21,181 - #11 ]
INFO  13:17:21,181 - #7 =
INFO  13:17:21,181 - #50 b
INFO  13:17:21,181 - #8 ;
INFO  13:17:21,181 - #49 nizch
INFO  13:17:21,181 - #10 [
INFO  13:17:21,181 - #49 pet
INFO  13:17:21,181 - #28 -
INFO  13:17:21,182 - #48 3
INFO  13:17:21,182 - #11 ]
INFO  13:17:21,182 - #7 =
INFO  13:17:21,182 - #50 c
INFO  13:17:21,182 - #8 ;
INFO  13:17:21,183 - #22 print
INFO  13:17:21,183 - #20 (
INFO  13:17:21,183 - #49 nizch
INFO  13:17:21,183 - #10 [
INFO  13:17:21,183 - #48 1
INFO  13:17:21,183 - #11 ]
INFO  13:17:21,183 - #21 )
INFO  13:17:21,183 - #8 ;
INFO  13:17:21,183 - #22 print
INFO  13:17:21,183 - #20 (
INFO  13:17:21,183 - #49 nizch
INFO  13:17:21,183 - #10 [
INFO  13:17:21,183 - #49 jedan
INFO  13:17:21,183 - #38 *
INFO  13:17:21,183 - #48 2
INFO  13:17:21,183 - #11 ]
INFO  13:17:21,184 - #21 )
INFO  13:17:21,184 - #8 ;
INFO  13:17:21,184 - #49 bodovi
INFO  13:17:21,184 - #7 =
INFO  13:17:21,184 - #49 bodovi
INFO  13:17:21,184 - #37 +
INFO  13:17:21,184 - #20 (
INFO  13:17:21,184 - #49 pet
INFO  13:17:21,185 - #38 *
INFO  13:17:21,185 - #49 jedan
INFO  13:17:21,185 - #28 -
INFO  13:17:21,185 - #48 1
INFO  13:17:21,185 - #21 )
INFO  13:17:21,185 - #38 *
INFO  13:17:21,185 - #49 bodovi
INFO  13:17:21,185 - #28 -
INFO  13:17:21,185 - #20 (
INFO  13:17:21,186 - #48 3
INFO  13:17:21,186 - #40 %
INFO  13:17:21,186 - #48 2
INFO  13:17:21,186 - #37 +
INFO  13:17:21,187 - #48 3
INFO  13:17:21,187 - #38 *
INFO  13:17:21,187 - #48 2
INFO  13:17:21,187 - #28 -
INFO  13:17:21,187 - #48 3
INFO  13:17:21,187 - #21 )
INFO  13:17:21,187 - #8 ;
INFO  13:17:21,187 - #22 print
INFO  13:17:21,187 - #20 (
INFO  13:17:21,188 - #49 bodovi
INFO  13:17:21,189 - #21 )
INFO  13:17:21,189 - #8 ;
INFO  13:17:21,189 - #19 read
INFO  13:17:21,189 - #20 (
INFO  13:17:21,189 - #49 bodovi
INFO  13:17:21,189 - #21 )
INFO  13:17:21,189 - #8 ;
INFO  13:17:21,189 - #22 print
INFO  13:17:21,189 - #20 (
INFO  13:17:21,189 - #49 bodovi
INFO  13:17:21,189 - #21 )
INFO  13:17:21,189 - #8 ;
INFO  13:17:21,190 - #49 niz2
INFO  13:17:21,190 - #7 =
INFO  13:17:21,190 - #46 range
INFO  13:17:21,190 - #20 (
INFO  13:17:21,190 - #49 bodovi
INFO  13:17:21,190 - #37 +
INFO  13:17:21,190 - #48 1
INFO  13:17:21,190 - #21 )
INFO  13:17:21,190 - #8 ;
INFO  13:17:21,190 - #22 print
INFO  13:17:21,190 - #20 (
INFO  13:17:21,190 - #49 niz2
INFO  13:17:21,190 - #21 )
INFO  13:17:21,190 - #8 ;
INFO  13:17:21,190 - #5 }
INFO  13:17:21,191 - #5 }
INFO  13:17:21,206 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstDeclaration(
              ConstDeclarationList(
                Type(
                 int
                ) [Type]
                ConstDeclarationsEnd(
                  ConstListPart(
                   nula
                    ConstNum(
                     0
                    ) [ConstNum]
                  ) [ConstListPart]
                ) [ConstDeclarationsEnd]
              ) [ConstDeclarationList]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclarationList(
              Type(
               int
              ) [Type]
              ConstDeclarationsEnd(
                ConstListPart(
                 jedan
                  ConstNum(
                   1
                  ) [ConstNum]
                ) [ConstListPart]
              ) [ConstDeclarationsEnd]
            ) [ConstDeclarationList]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclarationList(
            Type(
             int
            ) [Type]
            ConstDeclarationsEnd(
              ConstListPart(
               pet
                ConstNum(
                 5
                ) [ConstNum]
              ) [ConstListPart]
            ) [ConstDeclarationsEnd]
          ) [ConstDeclarationList]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclarationList(
          Type(
           int
          ) [Type]
          VarDeclarations(
            VarArr(
             niz
            ) [VarArr]
            VarDeclarationsEnd(
              VarArr(
               niz2
              ) [VarArr]
            ) [VarDeclarationsEnd]
          ) [VarDeclarations]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclarationList(
        Type(
         char
        ) [Type]
        VarDeclarationsEnd(
          VarArr(
           nizch
          ) [VarArr]
        ) [VarDeclarationsEnd]
      ) [VarDeclarationList]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarationList(
    NoMethodDeclaration(
    ) [NoMethodDeclaration]
    MethodDecl(
      MethodNameVoid(
       main
      ) [MethodNameVoid]
      NoMethodParameters(
      ) [NoMethodParameters]
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclaration(
            VarDeclarationList(
              Type(
               int
              ) [Type]
              VarDeclarationsEnd(
                VarIdent(
                 bodovi
                ) [VarIdent]
              ) [VarDeclarationsEnd]
            ) [VarDeclarationList]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclarationList(
            Type(
             bool
            ) [Type]
            VarDeclarationsEnd(
              VarIdent(
               bt
              ) [VarIdent]
            ) [VarDeclarationsEnd]
          ) [VarDeclarationList]
        ) [VarDeclaration]
      ) [Declarations]
      Statements(
        StatementDesignator(
          DesignatorStatementMatched(
            DesignatorStatementAssignop(
              DesignatorIdent(
               bodovi
              ) [DesignatorIdent]
              Assignop(
              ) [Assignop]
              ExprPositive(
                AddopEnd(
                  Term(
                    FactorNum(
                     0
                    ) [FactorNum]
                    NoMulop(
                    ) [NoMulop]
                  ) [Term]
                ) [AddopEnd]
              ) [ExprPositive]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementMatched]
        ) [StatementDesignator]
        Statements(
          StatementDesignator(
            DesignatorStatementMatched(
              DesignatorStatementIncrement(
                DesignatorIdent(
                 bodovi
                ) [DesignatorIdent]
              ) [DesignatorStatementIncrement]
            ) [DesignatorStatementMatched]
          ) [StatementDesignator]
          Statements(
            StatementDesignator(
              DesignatorStatementMatched(
                DesignatorStatementAssignop(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                  Assignop(
                  ) [Assignop]
                  ExprPositive(
                    AddopList(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                      Plus(
                      ) [Plus]
                      Term(
                        FactorDesignator(
                          DesignatorIdent(
                           jedan
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                        NoMulop(
                        ) [NoMulop]
                      ) [Term]
                    ) [AddopList]
                  ) [ExprPositive]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementMatched]
            ) [StatementDesignator]
            Statements(
              StatementDesignator(
                DesignatorStatementMatched(
                  DesignatorStatementAssignop(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    Assignop(
                    ) [Assignop]
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          MulopList(
                            Star(
                            ) [Star]
                            FactorDesignator(
                              DesignatorIdent(
                               pet
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                            NoMulop(
                            ) [NoMulop]
                          ) [MulopList]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementMatched]
              ) [StatementDesignator]
              Statements(
                StatementDesignator(
                  DesignatorStatementMatched(
                    DesignatorStatementDecrement(
                      DesignatorIdent(
                       bodovi
                      ) [DesignatorIdent]
                    ) [DesignatorStatementDecrement]
                  ) [DesignatorStatementMatched]
                ) [StatementDesignator]
                Statements(
                  StatementPrint(
                    ExprPositive(
                      AddopEnd(
                        Term(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                          NoMulop(
                          ) [NoMulop]
                        ) [Term]
                      ) [AddopEnd]
                    ) [ExprPositive]
                  ) [StatementPrint]
                  Statements(
                    StatementDesignator(
                      DesignatorStatementMatched(
                        DesignatorStatementAssignop(
                          DesignatorIdent(
                           niz
                          ) [DesignatorIdent]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            AddopEnd(
                              Term(
                                FactorNew(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [FactorNew]
                                NoMulop(
                                ) [NoMulop]
                              ) [Term]
                            ) [AddopEnd]
                          ) [ExprPositive]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementMatched]
                    ) [StatementDesignator]
                    Statements(
                      StatementDesignator(
                        DesignatorStatementMatched(
                          DesignatorStatementAssignop(
                            DesignatorExpr(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorDesignator(
                                      DesignatorIdent(
                                       nula
                                      ) [DesignatorIdent]
                                    ) [FactorDesignator]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorExpr]
                            Assignop(
                            ) [Assignop]
                            ExprPositive(
                              AddopEnd(
                                Term(
                                  FactorDesignator(
                                    DesignatorIdent(
                                     jedan
                                    ) [DesignatorIdent]
                                  ) [FactorDesignator]
                                  NoMulop(
                                  ) [NoMulop]
                                ) [Term]
                              ) [AddopEnd]
                            ) [ExprPositive]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementMatched]
                      ) [StatementDesignator]
                      Statements(
                        StatementDesignator(
                          DesignatorStatementMatched(
                            DesignatorStatementAssignop(
                              DesignatorExpr(
                                DesignatorName(
                                 niz
                                ) [DesignatorName]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorNum(
                                       1
                                      ) [FactorNum]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorExpr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                AddopEnd(
                                  Term(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                    NoMulop(
                                    ) [NoMulop]
                                  ) [Term]
                                ) [AddopEnd]
                              ) [ExprPositive]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementMatched]
                        ) [StatementDesignator]
                        Statements(
                          StatementDesignator(
                            DesignatorStatementMatched(
                              DesignatorStatementAssignop(
                                DesignatorExpr(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorIdent(
                                                     jedan
                                                    ) [DesignatorIdent]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorExpr]
                                Assignop(
                                ) [Assignop]
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorExpr(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorDesignator(
                                                  DesignatorExpr(
                                                    DesignatorName(
                                                     niz
                                                    ) [DesignatorName]
                                                    ExprPositive(
                                                      AddopEnd(
                                                        Term(
                                                          FactorNum(
                                                           0
                                                          ) [FactorNum]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopEnd]
                                                    ) [ExprPositive]
                                                  ) [DesignatorExpr]
                                                ) [FactorDesignator]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorExpr]
                                      ) [FactorDesignator]
                                      MulopList(
                                        Star(
                                        ) [Star]
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [MulopList]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementMatched]
                          ) [StatementDesignator]
                          Statements(
                            StatementDesignator(
                              DesignatorStatementMatched(
                                DesignatorStatementAssignop(
                                  DesignatorIdent(
                                   bodovi
                                  ) [DesignatorIdent]
                                  Assignop(
                                  ) [Assignop]
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        MulopList(
                                          Slash(
                                          ) [Slash]
                                          FactorDesignator(
                                            DesignatorExpr(
                                              DesignatorName(
                                               niz
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                          ) [FactorDesignator]
                                          NoMulop(
                                          ) [NoMulop]
                                        ) [MulopList]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementMatched]
                            ) [StatementDesignator]
                            Statements(
                              StatementPrint(
                                ExprPositive(
                                  AddopEnd(
                                    Term(
                                      FactorDesignator(
                                        DesignatorIdent(
                                         bodovi
                                        ) [DesignatorIdent]
                                      ) [FactorDesignator]
                                      NoMulop(
                                      ) [NoMulop]
                                    ) [Term]
                                  ) [AddopEnd]
                                ) [ExprPositive]
                              ) [StatementPrint]
                              Statements(
                                StatementPrint(
                                  ExprPositive(
                                    AddopEnd(
                                      Term(
                                        FactorDesignator(
                                          DesignatorExpr(
                                            DesignatorName(
                                             niz
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   2
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                        ) [FactorDesignator]
                                        NoMulop(
                                        ) [NoMulop]
                                      ) [Term]
                                    ) [AddopEnd]
                                  ) [ExprPositive]
                                ) [StatementPrint]
                                Statements(
                                  StatementDesignator(
                                    DesignatorStatementMatched(
                                      DesignatorStatementAssignop(
                                        DesignatorIdent(
                                         nizch
                                        ) [DesignatorIdent]
                                        Assignop(
                                        ) [Assignop]
                                        ExprPositive(
                                          AddopEnd(
                                            Term(
                                              FactorNew(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprPositive(
                                                  AddopEnd(
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopEnd]
                                                ) [ExprPositive]
                                              ) [FactorNew]
                                              NoMulop(
                                              ) [NoMulop]
                                            ) [Term]
                                          ) [AddopEnd]
                                        ) [ExprPositive]
                                      ) [DesignatorStatementAssignop]
                                    ) [DesignatorStatementMatched]
                                  ) [StatementDesignator]
                                  Statements(
                                    StatementDesignator(
                                      DesignatorStatementMatched(
                                        DesignatorStatementAssignop(
                                          DesignatorExpr(
                                            DesignatorName(
                                             nizch
                                            ) [DesignatorName]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorExpr]
                                          Assignop(
                                          ) [Assignop]
                                          ExprPositive(
                                            AddopEnd(
                                              Term(
                                                FactorChar(
                                                 a
                                                ) [FactorChar]
                                                NoMulop(
                                                ) [NoMulop]
                                              ) [Term]
                                            ) [AddopEnd]
                                          ) [ExprPositive]
                                        ) [DesignatorStatementAssignop]
                                      ) [DesignatorStatementMatched]
                                    ) [StatementDesignator]
                                    Statements(
                                      StatementDesignator(
                                        DesignatorStatementMatched(
                                          DesignatorStatementAssignop(
                                            DesignatorExpr(
                                              DesignatorName(
                                               nizch
                                              ) [DesignatorName]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorIdent(
                                                       jedan
                                                      ) [DesignatorIdent]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorExpr]
                                            Assignop(
                                            ) [Assignop]
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorChar(
                                                   b
                                                  ) [FactorChar]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [DesignatorStatementAssignop]
                                        ) [DesignatorStatementMatched]
                                      ) [StatementDesignator]
                                      Statements(
                                        StatementDesignator(
                                          DesignatorStatementMatched(
                                            DesignatorStatementAssignop(
                                              DesignatorExpr(
                                                DesignatorName(
                                                 nizch
                                                ) [DesignatorName]
                                                ExprPositive(
                                                  AddopList(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           pet
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                    Minus(
                                                    ) [Minus]
                                                    Term(
                                                      FactorNum(
                                                       3
                                                      ) [FactorNum]
                                                      NoMulop(
                                                      ) [NoMulop]
                                                    ) [Term]
                                                  ) [AddopList]
                                                ) [ExprPositive]
                                              ) [DesignatorExpr]
                                              Assignop(
                                              ) [Assignop]
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorChar(
                                                     c
                                                    ) [FactorChar]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [DesignatorStatementAssignop]
                                          ) [DesignatorStatementMatched]
                                        ) [StatementDesignator]
                                        Statements(
                                          StatementPrint(
                                            ExprPositive(
                                              AddopEnd(
                                                Term(
                                                  FactorDesignator(
                                                    DesignatorExpr(
                                                      DesignatorName(
                                                       nizch
                                                      ) [DesignatorName]
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorNum(
                                                             1
                                                            ) [FactorNum]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [DesignatorExpr]
                                                  ) [FactorDesignator]
                                                  NoMulop(
                                                  ) [NoMulop]
                                                ) [Term]
                                              ) [AddopEnd]
                                            ) [ExprPositive]
                                          ) [StatementPrint]
                                          Statements(
                                            StatementPrint(
                                              ExprPositive(
                                                AddopEnd(
                                                  Term(
                                                    FactorDesignator(
                                                      DesignatorExpr(
                                                        DesignatorName(
                                                         nizch
                                                        ) [DesignatorName]
                                                        ExprPositive(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 jedan
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              MulopList(
                                                                Star(
                                                                ) [Star]
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [MulopList]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                        ) [ExprPositive]
                                                      ) [DesignatorExpr]
                                                    ) [FactorDesignator]
                                                    NoMulop(
                                                    ) [NoMulop]
                                                  ) [Term]
                                                ) [AddopEnd]
                                              ) [ExprPositive]
                                            ) [StatementPrint]
                                            Statements(
                                              StatementDesignator(
                                                DesignatorStatementMatched(
                                                  DesignatorStatementAssignop(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprPositive(
                                                      AddopList(
                                                        AddopList(
                                                          AddopEnd(
                                                            Term(
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [Term]
                                                          ) [AddopEnd]
                                                          Plus(
                                                          ) [Plus]
                                                          Term(
                                                            FactorExpr(
                                                              ExprPositive(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorDesignator(
                                                                        DesignatorIdent(
                                                                         pet
                                                                        ) [DesignatorIdent]
                                                                      ) [FactorDesignator]
                                                                      MulopList(
                                                                        Star(
                                                                        ) [Star]
                                                                        FactorDesignator(
                                                                          DesignatorIdent(
                                                                           jedan
                                                                          ) [DesignatorIdent]
                                                                        ) [FactorDesignator]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Minus(
                                                                  ) [Minus]
                                                                  Term(
                                                                    FactorNum(
                                                                     1
                                                                    ) [FactorNum]
                                                                    NoMulop(
                                                                    ) [NoMulop]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                              ) [ExprPositive]
                                                            ) [FactorExpr]
                                                            MulopList(
                                                              Star(
                                                              ) [Star]
                                                              FactorDesignator(
                                                                DesignatorIdent(
                                                                 bodovi
                                                                ) [DesignatorIdent]
                                                              ) [FactorDesignator]
                                                              NoMulop(
                                                              ) [NoMulop]
                                                            ) [MulopList]
                                                          ) [Term]
                                                        ) [AddopList]
                                                        Minus(
                                                        ) [Minus]
                                                        Term(
                                                          FactorExpr(
                                                            ExprPositive(
                                                              AddopList(
                                                                AddopList(
                                                                  AddopEnd(
                                                                    Term(
                                                                      FactorNum(
                                                                       3
                                                                      ) [FactorNum]
                                                                      MulopList(
                                                                        Percent(
                                                                        ) [Percent]
                                                                        FactorNum(
                                                                         2
                                                                        ) [FactorNum]
                                                                        NoMulop(
                                                                        ) [NoMulop]
                                                                      ) [MulopList]
                                                                    ) [Term]
                                                                  ) [AddopEnd]
                                                                  Plus(
                                                                  ) [Plus]
                                                                  Term(
                                                                    FactorNum(
                                                                     3
                                                                    ) [FactorNum]
                                                                    MulopList(
                                                                      Star(
                                                                      ) [Star]
                                                                      FactorNum(
                                                                       2
                                                                      ) [FactorNum]
                                                                      NoMulop(
                                                                      ) [NoMulop]
                                                                    ) [MulopList]
                                                                  ) [Term]
                                                                ) [AddopList]
                                                                Minus(
                                                                ) [Minus]
                                                                Term(
                                                                  FactorNum(
                                                                   3
                                                                  ) [FactorNum]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopList]
                                                            ) [ExprPositive]
                                                          ) [FactorExpr]
                                                          NoMulop(
                                                          ) [NoMulop]
                                                        ) [Term]
                                                      ) [AddopList]
                                                    ) [ExprPositive]
                                                  ) [DesignatorStatementAssignop]
                                                ) [DesignatorStatementMatched]
                                              ) [StatementDesignator]
                                              Statements(
                                                StatementPrint(
                                                  ExprPositive(
                                                    AddopEnd(
                                                      Term(
                                                        FactorDesignator(
                                                          DesignatorIdent(
                                                           bodovi
                                                          ) [DesignatorIdent]
                                                        ) [FactorDesignator]
                                                        NoMulop(
                                                        ) [NoMulop]
                                                      ) [Term]
                                                    ) [AddopEnd]
                                                  ) [ExprPositive]
                                                ) [StatementPrint]
                                                Statements(
                                                  StatementRead(
                                                    DesignatorIdent(
                                                     bodovi
                                                    ) [DesignatorIdent]
                                                  ) [StatementRead]
                                                  Statements(
                                                    StatementPrint(
                                                      ExprPositive(
                                                        AddopEnd(
                                                          Term(
                                                            FactorDesignator(
                                                              DesignatorIdent(
                                                               bodovi
                                                              ) [DesignatorIdent]
                                                            ) [FactorDesignator]
                                                            NoMulop(
                                                            ) [NoMulop]
                                                          ) [Term]
                                                        ) [AddopEnd]
                                                      ) [ExprPositive]
                                                    ) [StatementPrint]
                                                    Statements(
                                                      StatementDesignator(
                                                        DesignatorStatementMatched(
                                                          DesignatorStatementAssignop(
                                                            DesignatorIdent(
                                                             niz2
                                                            ) [DesignatorIdent]
                                                            Assignop(
                                                            ) [Assignop]
                                                            ExprPositive(
                                                              AddopEnd(
                                                                Term(
                                                                  FactorRange(
                                                                    ExprPositive(
                                                                      AddopList(
                                                                        AddopEnd(
                                                                          Term(
                                                                            FactorDesignator(
                                                                              DesignatorIdent(
                                                                               bodovi
                                                                              ) [DesignatorIdent]
                                                                            ) [FactorDesignator]
                                                                            NoMulop(
                                                                            ) [NoMulop]
                                                                          ) [Term]
                                                                        ) [AddopEnd]
                                                                        Plus(
                                                                        ) [Plus]
                                                                        Term(
                                                                          FactorNum(
                                                                           1
                                                                          ) [FactorNum]
                                                                          NoMulop(
                                                                          ) [NoMulop]
                                                                        ) [Term]
                                                                      ) [AddopList]
                                                                    ) [ExprPositive]
                                                                  ) [FactorRange]
                                                                  NoMulop(
                                                                  ) [NoMulop]
                                                                ) [Term]
                                                              ) [AddopEnd]
                                                            ) [ExprPositive]
                                                          ) [DesignatorStatementAssignop]
                                                        ) [DesignatorStatementMatched]
                                                      ) [StatementDesignator]
                                                      Statements(
                                                        StatementPrint(
                                                          ExprPositive(
                                                            AddopEnd(
                                                              Term(
                                                                FactorDesignator(
                                                                  DesignatorIdent(
                                                                   niz2
                                                                  ) [DesignatorIdent]
                                                                ) [FactorDesignator]
                                                                NoMulop(
                                                                ) [NoMulop]
                                                              ) [Term]
                                                            ) [AddopEnd]
                                                          ) [ExprPositive]
                                                        ) [StatementPrint]
                                                        NoStatement(
                                                        ) [NoStatement]
                                                      ) [Statements]
                                                    ) [Statements]
                                                  ) [Statements]
                                                ) [Statements]
                                              ) [Statements]
                                            ) [Statements]
                                          ) [Statements]
                                        ) [Statements]
                                      ) [Statements]
                                    ) [Statements]
                                  ) [Statements]
                                ) [Statements]
                              ) [Statements]
                            ) [Statements]
                          ) [Statements]
                        ) [Statements]
                      ) [Statements]
                    ) [Statements]
                  ) [Statements]
                ) [Statements]
              ) [Statements]
            ) [Statements]
          ) [Statements]
        ) [Statements]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarationList]
) [Program]
INFO  13:17:21,216 - ===================================
INFO  13:17:21,216 - Pocetak programa test301.
INFO  13:17:21,217 - Deklarisana je konstanta nula na liniji 5
INFO  13:17:21,218 - Deklarisana je konstanta jedan na liniji 6
INFO  13:17:21,218 - Deklarisana je konstanta pet na liniji 7
INFO  13:17:21,218 - Deklarisan je niz niz na liniji 9
INFO  13:17:21,218 - Deklarisan je niz niz2 na liniji 9
INFO  13:17:21,218 - Deklarisan je niz nizch na liniji 10
INFO  13:17:21,218 - Obradjuje se funkcija main na liniji 13
INFO  13:17:21,218 - Deklarisana je promenljiva bodovi na liniji 14
INFO  13:17:21,218 - Deklarisana je promenljiva bt na liniji 15
INFO  13:17:21,219 - Designator i expr su odgovarajuceg tipa na liniji 17
INFO  13:17:21,220 - Designator i expr su odgovarajuceg tipa na liniji 19
INFO  13:17:21,220 - Designator i expr su odgovarajuceg tipa na liniji 20
INFO  13:17:21,220 - Obradjena funkcija PRINT na liniji 22
INFO  13:17:21,220 - Designator i expr su odgovarajuceg tipa na liniji 25
INFO  13:17:21,220 - kreiran elem za niz 1
INFO  13:17:21,220 - Designator i expr su odgovarajuceg tipa na liniji 26
INFO  13:17:21,220 - kreiran elem za niz 1
INFO  13:17:21,220 - Designator i expr su odgovarajuceg tipa na liniji 27
INFO  13:17:21,220 - kreiran elem za niz 1
INFO  13:17:21,220 - kreiran elem za niz 1
INFO  13:17:21,220 - kreiran elem za niz 1
INFO  13:17:21,221 - kreiran elem za niz 1
INFO  13:17:21,221 - Designator i expr su odgovarajuceg tipa na liniji 28
INFO  13:17:21,221 - kreiran elem za niz 1
INFO  13:17:21,222 - kreiran elem za niz 1
INFO  13:17:21,222 - Designator i expr su odgovarajuceg tipa na liniji 29
INFO  13:17:21,222 - Obradjena funkcija PRINT na liniji 30
INFO  13:17:21,222 - kreiran elem za niz 1
INFO  13:17:21,222 - Obradjena funkcija PRINT na liniji 31
INFO  13:17:21,222 - Designator i expr su odgovarajuceg tipa na liniji 34
INFO  13:17:21,222 - kreiran elem za niz 2
INFO  13:17:21,222 - Designator i expr su odgovarajuceg tipa na liniji 35
INFO  13:17:21,222 - kreiran elem za niz 2
INFO  13:17:21,222 - Designator i expr su odgovarajuceg tipa na liniji 36
INFO  13:17:21,222 - kreiran elem za niz 2
INFO  13:17:21,222 - Designator i expr su odgovarajuceg tipa na liniji 37
INFO  13:17:21,222 - kreiran elem za niz 2
INFO  13:17:21,222 - Obradjena funkcija PRINT na liniji 38
INFO  13:17:21,222 - kreiran elem za niz 2
INFO  13:17:21,223 - Obradjena funkcija PRINT na liniji 39
INFO  13:17:21,223 - Designator i expr su odgovarajuceg tipa na liniji 42
INFO  13:17:21,223 - Obradjena funkcija PRINT na liniji 43
INFO  13:17:21,223 - Funkciji READ je prosledjena promenljiva bodovi
INFO  13:17:21,223 - Obradjena funkcija PRINT na liniji 46
